{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.0.1 (2024-11-28)\n * Treegraph chart series type\n * @module highcharts/modules/treegraph\n * @requires highcharts\n * @requires highcharts/modules/treemap\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"highcharts\")[\"SeriesRegistry\"], require(\"highcharts\")[\"SVGRenderer\"], require(\"highcharts\")[\"Point\"], require(\"highcharts\")[\"Color\"], require(\"highcharts\")[\"SVGElement\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/treegraph\", [[\"highcharts/highcharts\"], [\"highcharts/highcharts\",\"SeriesRegistry\"], [\"highcharts/highcharts\",\"SVGRenderer\"], [\"highcharts/highcharts\",\"Point\"], [\"highcharts/highcharts\",\"Color\"], [\"highcharts/highcharts\",\"SVGElement\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/treegraph\"] = factory(require(\"highcharts\"), require(\"highcharts\")[\"SeriesRegistry\"], require(\"highcharts\")[\"SVGRenderer\"], require(\"highcharts\")[\"Point\"], require(\"highcharts\")[\"Color\"], require(\"highcharts\")[\"SVGElement\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"SeriesRegistry\"], root[\"Highcharts\"][\"SVGRenderer\"], root[\"Highcharts\"][\"Point\"], root[\"Highcharts\"][\"Color\"], root[\"Highcharts\"][\"SVGElement\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__512__, __WEBPACK_EXTERNAL_MODULE__540__, __WEBPACK_EXTERNAL_MODULE__260__, __WEBPACK_EXTERNAL_MODULE__620__, __WEBPACK_EXTERNAL_MODULE__28__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 620:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__620__;\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__260__;\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__28__;\n\n/***/ }),\n\n/***/ 540:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__540__;\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__512__;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ treegraph_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n;// ./code/es5/es-modules/Series/PathUtilities.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar getLinkPath = {\n    'default': getDefaultPath,\n    straight: getStraightPath,\n    curved: getCurvedPath\n};\n/**\n *\n */\nfunction getDefaultPath(pathParams) {\n    var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, radius = pathParams.radius, parentVisible = pathParams.parentVisible;\n    var path = [\n        ['M', x1, y1],\n        ['L', x1, y1],\n        ['C', x1, y1, x1, y2, x1, y2],\n        ['L', x1, y2],\n        ['C', x1, y1, x1, y2, x1, y2],\n        ['L', x1, y2]\n    ];\n    return parentVisible ?\n        applyRadius([\n            ['M', x1, y1],\n            ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n            ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n            ['L', x2, y2]\n        ], radius) :\n        path;\n}\n/**\n *\n */\nfunction getStraightPath(pathParams) {\n    var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, parentVisible = pathParams.parentVisible;\n    return parentVisible ? [\n        ['M', x1, y1],\n        ['L', x1 + width * (inverted ? -1 : 1), y2],\n        ['L', x2, y2]\n    ] : [\n        ['M', x1, y1],\n        ['L', x1, y2],\n        ['L', x1, y2]\n    ];\n}\n/**\n *\n */\nfunction getCurvedPath(pathParams) {\n    var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.offset, offset = _a === void 0 ? 0 : _a, _b = pathParams.width, width = _b === void 0 ? 0 : _b, _c = pathParams.inverted, inverted = _c === void 0 ? false : _c, parentVisible = pathParams.parentVisible;\n    return parentVisible ?\n        [\n            ['M', x1, y1],\n            [\n                'C',\n                x1 + offset,\n                y1,\n                x1 - offset + width * (inverted ? -1 : 1),\n                y2,\n                x1 + width * (inverted ? -1 : 1),\n                y2\n            ],\n            ['L', x2, y2]\n        ] :\n        [\n            ['M', x1, y1],\n            ['C', x1, y1, x1, y2, x1, y2],\n            ['L', x2, y2]\n        ];\n}\n/**\n * General function to apply corner radius to a path\n * @private\n */\nfunction applyRadius(path, r) {\n    var d = [];\n    for (var i = 0; i < path.length; i++) {\n        var x = path[i][1];\n        var y = path[i][2];\n        if (typeof x === 'number' && typeof y === 'number') {\n            // MoveTo\n            if (i === 0) {\n                d.push(['M', x, y]);\n            }\n            else if (i === path.length - 1) {\n                d.push(['L', x, y]);\n                // CurveTo\n            }\n            else if (r) {\n                var prevSeg = path[i - 1];\n                var nextSeg = path[i + 1];\n                if (prevSeg && nextSeg) {\n                    var x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                    // Only apply to breaks\n                    if (typeof x1 === 'number' &&\n                        typeof x2 === 'number' &&\n                        typeof y1 === 'number' &&\n                        typeof y2 === 'number' &&\n                        x1 !== x2 &&\n                        y1 !== y2) {\n                        var directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                        d.push([\n                            'L',\n                            x - directionX * Math.min(Math.abs(x - x1), r),\n                            y - directionY * Math.min(Math.abs(y - y1), r)\n                        ], [\n                            'C',\n                            x,\n                            y,\n                            x,\n                            y,\n                            x + directionX * Math.min(Math.abs(x - x2), r),\n                            y + directionY * Math.min(Math.abs(y - y2), r)\n                        ]);\n                    }\n                }\n                // LineTo\n            }\n            else {\n                d.push(['L', x, y]);\n            }\n        }\n    }\n    return d;\n}\nvar PathUtilities = {\n    applyRadius: applyRadius,\n    getLinkPath: getLinkPath\n};\n/* harmony default export */ var Series_PathUtilities = (PathUtilities);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"SeriesRegistry\"],\"commonjs\":[\"highcharts\",\"SeriesRegistry\"],\"commonjs2\":[\"highcharts\",\"SeriesRegistry\"],\"root\":[\"Highcharts\",\"SeriesRegistry\"]}\nvar highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_ = __webpack_require__(512);\nvar highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default = /*#__PURE__*/__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"SVGRenderer\"],\"commonjs\":[\"highcharts\",\"SVGRenderer\"],\"commonjs2\":[\"highcharts\",\"SVGRenderer\"],\"root\":[\"Highcharts\",\"SVGRenderer\"]}\nvar highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_ = __webpack_require__(540);\nvar highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default = /*#__PURE__*/__webpack_require__.n(highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_);\n;// ./code/es5/es-modules/Series/Treegraph/TreegraphNode.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar TreemapNode = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.treemap.prototype.NodeClass;\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nvar TreegraphNode = /** @class */ (function (_super) {\n    __extends(TreegraphNode, _super);\n    function TreegraphNode() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.mod = 0;\n        _this.shift = 0;\n        _this.change = 0;\n        _this.children = [];\n        _this.preX = 0;\n        _this.hidden = false;\n        _this.wasVisited = false;\n        _this.collapsed = false;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Get the next left node which is either first child or thread.\n     *\n     * @return {TreegraphNode|undefined}\n     *         Next left node child or thread.\n     */\n    TreegraphNode.prototype.nextLeft = function () {\n        return this.getLeftMostChild() || this.thread;\n    };\n    /**\n     * Get the next right node which is either last child or thread.\n     *\n     * @return {TreegraphNode|undefined}\n     *         Next right node child or thread.\n     */\n    TreegraphNode.prototype.nextRight = function () {\n        return this.getRightMostChild() || this.thread;\n    };\n    /**\n     * Return the left one of the greatest uncommon ancestors of a\n     * leftInternal node and it's right neighbor.\n     *\n     * @param {TreegraphNode} leftIntNode\n     * @param {TreegraphNode} defaultAncestor\n     * @return {TreegraphNode}\n     *         Left one of the greatest uncommon ancestors of a leftInternal\n     *         node and it's right neighbor.\n     *\n     */\n    TreegraphNode.prototype.getAncestor = function (leftIntNode, defaultAncestor) {\n        var leftAnc = leftIntNode.ancestor;\n        if (leftAnc.children[0] === this.children[0]) {\n            return leftIntNode.ancestor;\n        }\n        return defaultAncestor;\n    };\n    /**\n     * Get node's first sibling, which is not hidden.\n     *\n     * @return {TreegraphNode|undefined}\n     *         First sibling of the node which is not hidden or undefined, if it\n     *         does not exists.\n     */\n    TreegraphNode.prototype.getLeftMostSibling = function () {\n        var parent = this.getParent();\n        if (parent) {\n            for (var _i = 0, _a = parent.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child && child.point.visible) {\n                    return child;\n                }\n            }\n        }\n    };\n    /**\n     * Check if the node is a leaf (if it has any children).\n     *\n     * @return {boolean}\n     *         If the node has no visible children return true.\n     */\n    TreegraphNode.prototype.hasChildren = function () {\n        var children = this.children;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].point.visible) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get node's left sibling (if it exists).\n     *\n     * @return {TreegraphNode|undefined}\n     *         Left sibling of the node\n     */\n    TreegraphNode.prototype.getLeftSibling = function () {\n        var parent = this.getParent();\n        if (parent) {\n            var children = parent.children;\n            for (var i = this.relativeXPosition - 1; i >= 0; i--) {\n                if (children[i] && children[i].point.visible) {\n                    return children[i];\n                }\n            }\n        }\n    };\n    /**\n     * Get the node's first child (if it exists).\n     *\n     * @return {TreegraphNode|undefined}\n     *         Node's first child which isn't hidden.\n     */\n    TreegraphNode.prototype.getLeftMostChild = function () {\n        var children = this.children;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].point.visible) {\n                return children[i];\n            }\n        }\n    };\n    /**\n     * Get the node's last child (if it exists).\n     *\n     * @return {TreegraphNode|undefined}\n     *         Node's last child which isn't hidden.\n     */\n    TreegraphNode.prototype.getRightMostChild = function () {\n        var children = this.children;\n        for (var i = children.length - 1; i >= 0; i--) {\n            if (children[i].point.visible) {\n                return children[i];\n            }\n        }\n    };\n    /**\n     * Get the parent of current node or return undefined for root of the\n     * tree.\n     *\n     * @return {TreegraphNode|undefined}\n     *         Node's parent or undefined for root.\n     */\n    TreegraphNode.prototype.getParent = function () {\n        return this.parentNode;\n    };\n    /**\n     * Get node's first child which is not hidden.\n     *\n     * @return {TreegraphNode|undefined}\n     *         First child.\n     */\n    TreegraphNode.prototype.getFirstChild = function () {\n        var children = this.children;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].point.visible) {\n                return children[i];\n            }\n        }\n    };\n    return TreegraphNode;\n}(TreemapNode));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Treegraph_TreegraphNode = (TreegraphNode);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Point\"],\"commonjs\":[\"highcharts\",\"Point\"],\"commonjs2\":[\"highcharts\",\"Point\"],\"root\":[\"Highcharts\",\"Point\"]}\nvar highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_ = __webpack_require__(260);\nvar highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default = /*#__PURE__*/__webpack_require__.n(highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_);\n;// ./code/es5/es-modules/Series/Treegraph/TreegraphPoint.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar TreegraphPoint_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar TreemapPoint = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.treemap.prototype.pointClass;\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nvar TreegraphPoint = /** @class */ (function (_super) {\n    TreegraphPoint_extends(TreegraphPoint, _super);\n    function TreegraphPoint() {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dataLabelOnHidden = true;\n        _this.isLink = false;\n        _this.setState = (highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default()).prototype.setState;\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    TreegraphPoint.prototype.draw = function () {\n        _super.prototype.draw.apply(this, arguments);\n        // Run animation of hiding/showing of the point.\n        var graphic = this.graphic;\n        if (graphic) {\n            graphic.animate({\n                visibility: this.visible ? 'inherit' : 'hidden'\n            });\n        }\n        this.renderCollapseButton();\n    };\n    TreegraphPoint.prototype.renderCollapseButton = function () {\n        var point = this, series = point.series, parentGroup = point.graphic && point.graphic.parentGroup, levelOptions = series.mapOptionsToLevel[point.node.level || 0] || {}, btnOptions = merge(series.options.collapseButton, levelOptions.collapseButton, point.options.collapseButton), width = btnOptions.width, height = btnOptions.height, shape = btnOptions.shape, style = btnOptions.style, padding = 2, chart = this.series.chart, calculatedOpacity = (point.visible &&\n            (point.collapsed ||\n                !btnOptions.onlyOnHover ||\n                point.state === 'hover')) ? 1 : 0;\n        if (!point.shapeArgs) {\n            return;\n        }\n        this.collapseButtonOptions = btnOptions;\n        if (!point.collapseButton) {\n            if (!point.node.children.length || !btnOptions.enabled) {\n                return;\n            }\n            var _a = this.getCollapseBtnPosition(btnOptions), x = _a.x, y = _a.y, fill = (btnOptions.fillColor ||\n                point.color ||\n                \"#cccccc\" /* Palette.neutralColor20 */);\n            point.collapseButton = chart.renderer\n                .label(point.collapsed ? '+' : '-', x, y, shape)\n                .attr({\n                height: height - 2 * padding,\n                width: width - 2 * padding,\n                padding: padding,\n                fill: fill,\n                rotation: chart.inverted ? 90 : 0,\n                rotationOriginX: width / 2,\n                rotationOriginY: height / 2,\n                stroke: btnOptions.lineColor || \"#ffffff\" /* Palette.backgroundColor */,\n                'stroke-width': btnOptions.lineWidth,\n                'text-align': 'center',\n                align: 'center',\n                zIndex: 1,\n                opacity: calculatedOpacity,\n                visibility: point.visible ? 'inherit' : 'hidden'\n            })\n                .addClass('highcharts-tracker')\n                .addClass('highcharts-collapse-button')\n                .removeClass('highcharts-no-tooltip')\n                .css(merge({\n                color: typeof fill === 'string' ?\n                    chart.renderer.getContrast(fill) :\n                    \"#333333\" /* Palette.neutralColor80 */\n            }, style))\n                .add(parentGroup);\n            point.collapseButton.element.point = point;\n        }\n        else {\n            if (!point.node.children.length || !btnOptions.enabled) {\n                point.collapseButton.destroy();\n                delete point.collapseButton;\n            }\n            else {\n                var _b = this.getCollapseBtnPosition(btnOptions), x = _b.x, y = _b.y;\n                point.collapseButton\n                    .attr({\n                    text: point.collapsed ? '+' : '-',\n                    rotation: chart.inverted ? 90 : 0,\n                    rotationOriginX: width / 2,\n                    rotationOriginY: height / 2,\n                    visibility: point.visible ? 'inherit' : 'hidden'\n                })\n                    .animate({\n                    x: x,\n                    y: y,\n                    opacity: calculatedOpacity\n                });\n            }\n        }\n    };\n    TreegraphPoint.prototype.toggleCollapse = function (state) {\n        var series = this.series;\n        this.update({\n            collapsed: state !== null && state !== void 0 ? state : !this.collapsed\n        }, false, void 0, false);\n        fireEvent(series, 'toggleCollapse');\n        series.redraw();\n    };\n    TreegraphPoint.prototype.destroy = function () {\n        if (this.collapseButton) {\n            this.collapseButton.destroy();\n            delete this.collapseButton;\n            this.collapseButton = void 0;\n        }\n        if (this.linkToParent) {\n            this.linkToParent.destroy();\n            delete this.linkToParent;\n        }\n        _super.prototype.destroy.apply(this, arguments);\n    };\n    TreegraphPoint.prototype.getCollapseBtnPosition = function (btnOptions) {\n        var point = this, chart = point.series.chart, inverted = chart.inverted, btnWidth = btnOptions.width, btnHeight = btnOptions.height, _a = point.shapeArgs || {}, _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.width, width = _d === void 0 ? 0 : _d, _e = _a.height, height = _e === void 0 ? 0 : _e;\n        return {\n            x: x +\n                btnOptions.x +\n                (inverted ? -btnHeight * 0.3 : width + btnWidth * -0.3),\n            y: y + height / 2 - btnHeight / 2 + btnOptions.y\n        };\n    };\n    return TreegraphPoint;\n}(TreemapPoint));\naddEvent(TreegraphPoint, 'mouseOut', function () {\n    var btn = this.collapseButton, btnOptions = this.collapseButtonOptions;\n    if (btn && (btnOptions === null || btnOptions === void 0 ? void 0 : btnOptions.onlyOnHover) && !this.collapsed) {\n        btn.animate({ opacity: 0 });\n    }\n});\naddEvent(TreegraphPoint, 'mouseOver', function () {\n    var _a, _b;\n    if (this.collapseButton && this.visible) {\n        this.collapseButton.animate({ opacity: 1 }, (_b = (_a = this.series.options.states) === null || _a === void 0 ? void 0 : _a.hover) === null || _b === void 0 ? void 0 : _b.animation);\n    }\n});\n// Handle showing and hiding of the points\naddEvent(TreegraphPoint, 'click', function () {\n    this.toggleCollapse();\n});\n/* *\n *\n *  Export Default\n *\n * */\n/* harmony default export */ var Treegraph_TreegraphPoint = (TreegraphPoint);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Color\"],\"commonjs\":[\"highcharts\",\"Color\"],\"commonjs2\":[\"highcharts\",\"Color\"],\"root\":[\"Highcharts\",\"Color\"]}\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_ = __webpack_require__(620);\nvar highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default = /*#__PURE__*/__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);\n;// ./code/es5/es-modules/Series/TreeUtilities.js\n/* *\n *\n *  (c) 2014-2024 Highsoft AS\n *\n *  Authors: Jon Arild Nygard / Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, isArray = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isArray, isNumber = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isNumber, isObject = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isObject, TreeUtilities_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, relativeLength = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).relativeLength;\n/* *\n *\n *  Functions\n *\n * */\n/* eslint-disable valid-jsdoc */\n/**\n * @private\n */\nfunction getColor(node, options) {\n    var index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n    var getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n    /**\n     * @private\n     */\n    var variateColor = function (color) {\n        var colorVariation = level && level.colorVariation;\n        if (colorVariation &&\n            colorVariation.key === 'brightness' &&\n            index &&\n            siblings) {\n            return highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default().parse(color).brighten(colorVariation.to * (index / siblings)).get();\n        }\n        return color;\n    };\n    if (node) {\n        point = points[node.i];\n        level = mapOptionsToLevel[node.level] || {};\n        getColorByPoint = point && level.colorByPoint;\n        if (getColorByPoint) {\n            colorIndexByPoint = point.index % (colors ?\n                colors.length :\n                chartOptionsChart.colorCount);\n            colorByPoint = colors && colors[colorIndexByPoint];\n        }\n        // Select either point color, level color or inherited color.\n        if (!series.chart.styledMode) {\n            color = pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n        }\n        colorIndex = pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n    }\n    return {\n        color: color,\n        colorIndex: colorIndex\n    };\n}\n/**\n * Creates a map from level number to its given options.\n *\n * @private\n *\n * @param {Object} params\n * Object containing parameters.\n * - `defaults` Object containing default options. The default options are\n *   merged with the userOptions to get the final options for a specific\n *   level.\n * - `from` The lowest level number.\n * - `levels` User options from series.levels.\n * - `to` The highest level number.\n *\n * @return {Highcharts.Dictionary<object>|null}\n * Returns a map from level number to its given options.\n */\nfunction getLevelOptions(params) {\n    var result = {};\n    var defaults, converted, i, from, to, levels;\n    if (isObject(params)) {\n        from = isNumber(params.from) ? params.from : 1;\n        levels = params.levels;\n        converted = {};\n        defaults = isObject(params.defaults) ? params.defaults : {};\n        if (isArray(levels)) {\n            converted = levels.reduce(function (obj, item) {\n                var level, levelIsConstant, options;\n                if (isObject(item) && isNumber(item.level)) {\n                    options = TreeUtilities_merge({}, item);\n                    levelIsConstant = pick(options.levelIsConstant, defaults.levelIsConstant);\n                    // Delete redundant properties.\n                    delete options.levelIsConstant;\n                    delete options.level;\n                    // Calculate which level these options apply to.\n                    level = item.level + (levelIsConstant ? 0 : from - 1);\n                    if (isObject(obj[level])) {\n                        TreeUtilities_merge(true, obj[level], options); // #16329\n                    }\n                    else {\n                        obj[level] = options;\n                    }\n                }\n                return obj;\n            }, {});\n        }\n        to = isNumber(params.to) ? params.to : 1;\n        for (i = 0; i <= to; i++) {\n            result[i] = TreeUtilities_merge({}, defaults, isObject(converted[i]) ? converted[i] : {});\n        }\n    }\n    return result;\n}\n/**\n * @private\n * @todo Combine buildTree and buildNode with setTreeValues\n * @todo Remove logic from Treemap and make it utilize this mixin.\n */\nfunction setTreeValues(tree, options) {\n    var before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n    var childrenTotal = 0;\n    tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n    tree.name = pick(point && point.name, '');\n    tree.visible = (idRoot === tree.id ||\n        options.visible === true);\n    if (typeof before === 'function') {\n        tree = before(tree, options);\n    }\n    // First give the children some values\n    tree.children.forEach(function (child, i) {\n        var newOptions = extend({}, options);\n        extend(newOptions, {\n            index: i,\n            siblings: tree.children.length,\n            visible: tree.visible\n        });\n        child = setTreeValues(child, newOptions);\n        children.push(child);\n        if (child.visible) {\n            childrenTotal += child.val;\n        }\n    });\n    // Set the values\n    var value = pick(optionsPoint.value, childrenTotal);\n    tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n    tree.children = children;\n    tree.childrenTotal = childrenTotal;\n    tree.isLeaf = tree.visible && !childrenTotal;\n    tree.val = value;\n    return tree;\n}\n/**\n * Update the rootId property on the series. Also makes sure that it is\n * accessible to exporting.\n *\n * @private\n *\n * @param {Object} series\n * The series to operate on.\n *\n * @return {string}\n * Returns the resulting rootId after update.\n */\nfunction updateRootId(series) {\n    var rootId, options;\n    if (isObject(series)) {\n        // Get the series options.\n        options = isObject(series.options) ? series.options : {};\n        // Calculate the rootId.\n        rootId = pick(series.rootNode, options.rootId, '');\n        // Set rootId on series.userOptions to pick it up in exporting.\n        if (isObject(series.userOptions)) {\n            series.userOptions.rootId = rootId;\n        }\n        // Set rootId on series to pick it up on next update.\n        series.rootNode = rootId;\n    }\n    return rootId;\n}\n/**\n * Get the node width, which relies on the plot width and the nodeDistance\n * option.\n *\n * @private\n */\nfunction getNodeWidth(series, columnCount) {\n    var chart = series.chart, options = series.options, _a = options.nodeDistance, nodeDistance = _a === void 0 ? 0 : _a, _b = options.nodeWidth, nodeWidth = _b === void 0 ? 0 : _b, _c = chart.plotSizeX, plotSizeX = _c === void 0 ? 1 : _c;\n    // Node width auto means they are evenly distributed along the width of\n    // the plot area\n    if (nodeWidth === 'auto') {\n        if (typeof nodeDistance === 'string' && /%$/.test(nodeDistance)) {\n            var fraction = parseFloat(nodeDistance) / 100, total = columnCount + fraction * (columnCount - 1);\n            return plotSizeX / total;\n        }\n        var nDistance = Number(nodeDistance);\n        return ((plotSizeX + nDistance) /\n            (columnCount || 1)) - nDistance;\n    }\n    return relativeLength(nodeWidth, plotSizeX);\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar TreeUtilities = {\n    getColor: getColor,\n    getLevelOptions: getLevelOptions,\n    getNodeWidth: getNodeWidth,\n    setTreeValues: setTreeValues,\n    updateRootId: updateRootId\n};\n/* harmony default export */ var Series_TreeUtilities = (TreeUtilities);\n\n;// ./code/es5/es-modules/Series/Treegraph/TreegraphLink.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar TreegraphLink_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar TreegraphLink_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, TreegraphLink_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend;\n\nvar ColumnPoint = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes.column.prototype.pointClass;\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nvar LinkPoint = /** @class */ (function (_super) {\n    TreegraphLink_extends(LinkPoint, _super);\n    /* *\n     *\n     *  Constructor\n     *\n     * */\n    function LinkPoint(series, options, x, point) {\n        var _this = _super.call(this, series, options, x) || this;\n        /* *\n         *\n         *  Properties\n         *\n         * */\n        _this.dataLabelOnNull = true;\n        _this.formatPrefix = 'link';\n        _this.isLink = true;\n        _this.node = {};\n        _this.formatPrefix = 'link';\n        _this.dataLabelOnNull = true;\n        if (point) {\n            _this.fromNode = point.node.parentNode.point;\n            _this.visible = point.visible;\n            _this.toNode = point;\n            _this.id = _this.toNode.id + '-' + _this.fromNode.id;\n        }\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    LinkPoint.prototype.update = function (options, redraw, animation, runEvent) {\n        var oldOptions = {\n            id: this.id,\n            formatPrefix: this.formatPrefix\n        };\n        highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype.update.call(this, options, this.isLink ? false : redraw, // Hold the redraw for nodes\n        animation, runEvent);\n        this.visible = this.toNode.visible;\n        TreegraphLink_extend(this, oldOptions);\n        if (TreegraphLink_pick(redraw, true)) {\n            this.series.chart.redraw(animation);\n        }\n    };\n    return LinkPoint;\n}(ColumnPoint));\n/* *\n *\n *  Export Default\n *\n * */\n/* harmony default export */ var TreegraphLink = (LinkPoint);\n\n;// ./code/es5/es-modules/Series/Treegraph/TreegraphLayout.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n/* *\n *\n *  Class\n *\n * */\n/**\n * @private\n * @class\n */\nvar TreegraphLayout = /** @class */ (function () {\n    function TreegraphLayout() {\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Create dummy node, which allows to manually set the level of the node.\n     *\n     * @param {TreegraphNode} parent\n     *        Parent node, to which the dummyNode should be connected.\n     * @param {TreegraphNode} child\n     *        Child node, which should be connected to dummyNode.\n     * @param {number} gapSize\n     *        Remaining gap size.\n     *\n     * @return {TreegraphNode}\n     *         DummyNode as a parent of nodes, which column changes.\n     */\n    TreegraphLayout.createDummyNode = function (parent, child, gapSize) {\n        // Initialise dummy node.\n        var dummyNode = new Treegraph_TreegraphNode();\n        dummyNode.id = parent.id + '-' + gapSize;\n        dummyNode.ancestor = parent;\n        // Add connection from new node to the previous points.\n        // First connection to itself.\n        dummyNode.children.push(child);\n        dummyNode.parent = parent.id;\n        dummyNode.parentNode = parent;\n        dummyNode.point = child.point;\n        dummyNode.level = child.level - gapSize;\n        dummyNode.relativeXPosition = child.relativeXPosition;\n        dummyNode.visible = child.visible;\n        // Then connection from parent to dummyNode.\n        parent.children[child.relativeXPosition] = dummyNode;\n        child.oldParentNode = parent;\n        child.relativeXPosition = 0;\n        // Then connection from child to dummyNode.\n        child.parentNode = dummyNode;\n        child.parent = dummyNode.id;\n        return dummyNode;\n    };\n    /**\n     * Walker algorithm of positioning the nodes in the treegraph improved by\n     * Buchheim to run in the linear time. Basic algorithm consists of post\n     * order traversal, which starts from going bottom up (first walk), and then\n     * pre order traversal top to bottom (second walk) where adding all of the\n     * modifiers is performed.\n     * link to the paper: http://dirk.jivas.de/papers/buchheim02improving.pdf\n     *\n     * @param {TreegraphSeries} series the Treegraph series\n     */\n    TreegraphLayout.prototype.calculatePositions = function (series) {\n        var treeLayout = this;\n        var nodes = series.nodeList;\n        this.resetValues(nodes);\n        var root = series.tree;\n        if (root) {\n            treeLayout.calculateRelativeX(root, 0);\n            treeLayout.beforeLayout(nodes);\n            treeLayout.firstWalk(root);\n            treeLayout.secondWalk(root, -root.preX);\n            treeLayout.afterLayout(nodes);\n        }\n    };\n    /**\n     * Create dummyNodes as parents for nodes, which column is changed.\n     *\n     * @param {Array<TreegraphNode>} nodes\n     *        All of the nodes.\n     */\n    TreegraphLayout.prototype.beforeLayout = function (nodes) {\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var child = _b[_a];\n                // Support for children placed in distant columns.\n                if (child && child.level - node.level > 1) {\n                    // For further columns treat the nodes as a\n                    // single parent-child pairs till the column is achieved.\n                    var gapSize = child.level - node.level - 1;\n                    // Parent -> dummyNode -> child\n                    while (gapSize > 0) {\n                        child = TreegraphLayout.createDummyNode(node, child, gapSize);\n                        gapSize--;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Reset the calculated values from the previous run.\n     * @param {TreegraphNode[]} nodes all of the nodes.\n     */\n    TreegraphLayout.prototype.resetValues = function (nodes) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            node.mod = 0;\n            node.ancestor = node;\n            node.shift = 0;\n            node.thread = void 0;\n            node.change = 0;\n            node.preX = 0;\n        }\n    };\n    /**\n     * Assigns the value to each node, which indicates, what is his sibling\n     * number.\n     *\n     * @param {TreegraphNode} node\n     *        Root node\n     * @param {number} index\n     *        Index to which the nodes position should be set\n     */\n    TreegraphLayout.prototype.calculateRelativeX = function (node, index) {\n        var treeLayout = this, children = node.children;\n        for (var i = 0, iEnd = children.length; i < iEnd; ++i) {\n            treeLayout.calculateRelativeX(children[i], i);\n        }\n        node.relativeXPosition = index;\n    };\n    /**\n     * Recursive post order traversal of the tree, where the initial position\n     * of the nodes is calculated.\n     *\n     * @param {TreegraphNode} node\n     *        The node for which the position should be calculated.\n     */\n    TreegraphLayout.prototype.firstWalk = function (node) {\n        var treeLayout = this, \n        // Arbitrary value used to position nodes in respect to each other.\n        siblingDistance = 1;\n        var leftSibling;\n        // If the node is a leaf, set it's position based on the left siblings.\n        if (!node.hasChildren()) {\n            leftSibling = node.getLeftSibling();\n            if (leftSibling) {\n                node.preX = leftSibling.preX + siblingDistance;\n                node.mod = node.preX;\n            }\n            else {\n                node.preX = 0;\n            }\n        }\n        else {\n            // If the node has children, perform the recursive first walk for\n            // its children, and then calculate its shift in the apportion\n            // function (most crucial part of the algorithm).\n            var defaultAncestor = node.getLeftMostChild();\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                treeLayout.firstWalk(child);\n                defaultAncestor = treeLayout.apportion(child, defaultAncestor);\n            }\n            treeLayout.executeShifts(node);\n            var leftChild = node.getLeftMostChild(), rightChild = node.getRightMostChild(), \n            // Set the position of the parent as a middle point of its\n            // children and move it by the value of the leftSibling (if it\n            // exists).\n            midPoint = (leftChild.preX + rightChild.preX) / 2;\n            leftSibling = node.getLeftSibling();\n            if (leftSibling) {\n                node.preX = leftSibling.preX + siblingDistance;\n                node.mod = node.preX - midPoint;\n            }\n            else {\n                node.preX = midPoint;\n            }\n        }\n    };\n    /**\n     * Pre order traversal of the tree, which sets the final xPosition of the\n     * node as its preX value and sum of all if it's parents' modifiers.\n     *\n     * @param {TreegraphNode} node\n     *        The node, for which the final position should be calculated.\n     * @param {number} modSum\n     *        The sum of modifiers of all of the parents.\n     */\n    TreegraphLayout.prototype.secondWalk = function (node, modSum) {\n        var treeLayout = this;\n        // When the chart is not inverted we want the tree to be positioned from\n        // left to right with root node close to the chart border, this is why\n        // x and y positions are switched.\n        node.yPosition = node.preX + modSum;\n        node.xPosition = node.level;\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            treeLayout.secondWalk(child, modSum + node.mod);\n        }\n    };\n    /**\n     *  Shift all children of the current node from right to left.\n     *\n     * @param {TreegraphNode} node\n     *        The parent node.\n     */\n    TreegraphLayout.prototype.executeShifts = function (node) {\n        var shift = 0, change = 0;\n        for (var i = node.children.length - 1; i >= 0; i--) {\n            var childNode = node.children[i];\n            childNode.preX += shift;\n            childNode.mod += shift;\n            change += childNode.change;\n            shift += childNode.shift + change;\n        }\n    };\n    /**\n     * The core of the algorithm. The new subtree is combined with the previous\n     * subtrees. Threads are used to traverse the inside and outside contours of\n     * the left and right subtree up to the highest common level. The vertecies\n     * are left(right)Int(Out)node where Int means internal and Out means\n     * outernal. For summing up the modifiers along the contour we use the\n     * `left(right)Int(Out)mod` variable. Whenever two nodes of the inside\n     * contours are in conflict we commute the left one of the greatest uncommon\n     * ancestors using the getAncestor function and we call the moveSubtree\n     * method to shift the subtree and prepare the shifts of smaller subtrees.\n     * Finally we add a new thread (if necessary) and we adjust ancestor of\n     * right outernal node or defaultAncestor.\n     *\n     * @param {TreegraphNode} node\n     * @param {TreegraphNode} defaultAncestor\n     *        The default ancestor of the passed node.\n     */\n    TreegraphLayout.prototype.apportion = function (node, defaultAncestor) {\n        var treeLayout = this, leftSibling = node.getLeftSibling();\n        if (leftSibling) {\n            var rightIntNode = node, rightOutNode = node, leftIntNode = leftSibling, leftOutNode = rightIntNode.getLeftMostSibling(), rightIntMod = rightIntNode.mod, rightOutMod = rightOutNode.mod, leftIntMod = leftIntNode.mod, leftOutMod = leftOutNode.mod;\n            while (leftIntNode &&\n                leftIntNode.nextRight() &&\n                rightIntNode &&\n                rightIntNode.nextLeft()) {\n                leftIntNode = leftIntNode.nextRight();\n                leftOutNode = leftOutNode.nextLeft();\n                rightIntNode = rightIntNode.nextLeft();\n                rightOutNode = rightOutNode.nextRight();\n                rightOutNode.ancestor = node;\n                var siblingDistance = 1, shift = leftIntNode.preX +\n                    leftIntMod -\n                    (rightIntNode.preX + rightIntMod) +\n                    siblingDistance;\n                if (shift > 0) {\n                    treeLayout.moveSubtree(node.getAncestor(leftIntNode, defaultAncestor), node, shift);\n                    rightIntMod += shift;\n                    rightOutMod += shift;\n                }\n                leftIntMod += leftIntNode.mod;\n                rightIntMod += rightIntNode.mod;\n                leftOutMod += leftOutNode.mod;\n                rightOutMod += rightOutNode.mod;\n            }\n            if (leftIntNode &&\n                leftIntNode.nextRight() &&\n                !rightOutNode.nextRight()) {\n                rightOutNode.thread = leftIntNode.nextRight();\n                rightOutNode.mod += leftIntMod - rightOutMod;\n            }\n            if (rightIntNode &&\n                rightIntNode.nextLeft() &&\n                !leftOutNode.nextLeft()) {\n                leftOutNode.thread = rightIntNode.nextLeft();\n                leftOutNode.mod += rightIntMod - leftOutMod;\n            }\n            defaultAncestor = node;\n        }\n        return defaultAncestor;\n    };\n    /**\n     * Shifts the subtree from leftNode to rightNode.\n     *\n     * @param {TreegraphNode} leftNode\n     * @param {TreegraphNode} rightNode\n     * @param {number} shift\n     *        The value, by which the subtree should be moved.\n     */\n    TreegraphLayout.prototype.moveSubtree = function (leftNode, rightNode, shift) {\n        var subtrees = rightNode.relativeXPosition - leftNode.relativeXPosition;\n        rightNode.change -= shift / subtrees;\n        rightNode.shift += shift;\n        rightNode.preX += shift;\n        rightNode.mod += shift;\n        leftNode.change += shift / subtrees;\n    };\n    /**\n     * Clear values created in a beforeLayout.\n     *\n     * @param {TreegraphNode[]} nodes\n     *        All of the nodes of the Treegraph Series.\n     */\n    TreegraphLayout.prototype.afterLayout = function (nodes) {\n        for (var _i = 0, nodes_3 = nodes; _i < nodes_3.length; _i++) {\n            var node = nodes_3[_i];\n            if (node.oldParentNode) {\n                // Restore default connections\n                node.relativeXPosition = node.parentNode.relativeXPosition;\n                node.parent = node.oldParentNode.parent;\n                node.parentNode = node.oldParentNode;\n                // Delete dummyNode\n                delete node.oldParentNode.children[node.relativeXPosition];\n                node.oldParentNode.children[node.relativeXPosition] = node;\n                node.oldParentNode = void 0;\n            }\n        }\n    };\n    return TreegraphLayout;\n}());\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Treegraph_TreegraphLayout = (TreegraphLayout);\n\n;// ./code/es5/es-modules/Series/Treegraph/TreegraphSeriesDefaults.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Constants\n *\n * */\n/**\n * A treegraph series is a diagram, which shows a relation between ancestors\n * and descendants with a clear parent - child relation.\n * The best examples of the dataStructures, which best reflect this chart\n * are e.g. genealogy tree or directory structure.\n *\n * TODO change back the demo path\n * @sample highcharts/demo/treegraph-chart\n *         Treegraph Chart\n *\n * @extends      plotOptions.treemap\n * @excluding    layoutAlgorithm, dashStyle, linecap, lineWidth,\n *               negativeColor, threshold, zones, zoneAxis, colorAxis,\n *               colorKey, compare, dataGrouping, endAngle, gapSize, gapUnit,\n *               ignoreHiddenPoint, innerSize, joinBy, legendType, linecap,\n *               minSize, navigatorOptions, pointRange, allowTraversingTree,\n *               alternateStartingDirection, borderRadius, breadcrumbs,\n *               interactByLeaf, layoutStartingDirection, levelIsConstant,\n *               lineWidth, negativeColor, nodes, sortIndex, zoneAxis,\n *               zones\n *\n * @product      highcharts\n * @since 10.3.0\n * @requires     modules/treemap\n * @requires     modules/treegraph\n * @optionparent plotOptions.treegraph\n */\nvar TreegraphSeriesDefaults = {\n    /**\n     * Flips the positions of the nodes of a treegraph along the\n     * horizontal axis (vertical if chart is inverted).\n     *\n     * @sample highcharts/series-treegraph/reversed-nodes\n     *         Treegraph series with reversed nodes.\n     *\n     * @type    {boolean}\n     * @default false\n     * @product highcharts\n     * @since 10.3.0\n     */\n    reversed: false,\n    /**\n     * @extends   plotOptions.series.marker\n     * @excluding enabled, enabledThreshold\n     */\n    marker: {\n        radius: 10,\n        lineWidth: 0,\n        symbol: 'circle',\n        fillOpacity: 1,\n        states: {}\n    },\n    link: {\n        /**\n         * Modifier of the shape of the curved link. Works best for\n         * values between 0 and 1, where 0 is a straight line, and 1 is\n         * a shape close to the default one.\n         *\n         * @type      {number}\n         * @default   0.5\n         * @product   highcharts\n         * @since 10.3.0\n         * @apioption series.treegraph.link.curveFactor\n         */\n        /**\n         * The color of the links between nodes.\n         *\n         * @type {Highcharts.ColorString}\n         * @private\n         */\n        color: \"#666666\" /* Palette.neutralColor60 */,\n        /**\n         * The line width of the links connecting nodes, in pixels.\n         * @type {number}\n         *\n         * @private\n         */\n        lineWidth: 1,\n        /**\n         * Radius for the rounded corners of the links between nodes.\n         * Works for `default` link type.\n         *\n         * @private\n         */\n        radius: 10,\n        cursor: 'default',\n        /**\n         * Type of the link shape.\n         *\n         * @sample   highcharts/series-treegraph/link-types\n         *           Different link types\n         *\n         * @type {'default' | 'curved' | 'straight'}\n         * @product highcharts\n         *\n         */\n        type: 'curved'\n    },\n    /**\n     * Options applied to collapse Button. The collape button is the\n     * small button which indicates, that the node is collapsable.\n     */\n    collapseButton: {\n        /**\n         * Whether the button should be visible only when the node is\n         * hovered. When set to true, the button is hidden for nodes,\n         * which are not collapsed, and shown for the collapsed ones.\n         */\n        onlyOnHover: true,\n        /**\n         * Whether the button should be visible.\n         */\n        enabled: true,\n        /**\n         * The line width of the button in pixels\n         */\n        lineWidth: 1,\n        /**\n         * Offset of the button in the x direction.\n         */\n        x: 0,\n        /**\n         * Offset of the button in the y direction.\n         */\n        y: 0,\n        /**\n         * Height of the button.\n         */\n        height: 18,\n        /**\n         * Width of the button.\n         */\n        width: 18,\n        /**\n         * The symbol of the collapse button.\n         */\n        shape: 'circle',\n        /**\n         * CSS styles for the collapse button.\n         *\n         * In styled mode, the collapse button style is given in the\n         * `.highcharts-collapse-button` class.\n         */\n        style: {\n            cursor: 'pointer',\n            fontWeight: 'bold',\n            fontSize: '1em'\n        }\n    },\n    /**\n     * Whether the treegraph series should fill the entire plot area in the X\n     * axis direction, even when there are collapsed points.\n     *\n     * @sample  highcharts/series-treegraph/fillspace\n     *          Fill space demonstrated\n     *\n     * @product highcharts\n     */\n    fillSpace: false,\n    /**\n     * @extends plotOptions.series.tooltip\n     */\n    tooltip: {\n        /**\n         * The HTML of the point's line in the tooltip. Variables are\n         * enclosed by curly brackets. Available variables are\n         * `point.id`,  `point.fromNode.id`, `point.toNode.id`,\n         * `series.name`, `series.color` and other properties on the\n         * same form. Furthermore, This can also be overridden for each\n         * series, which makes it a good hook for displaying units. In\n         * styled mode, the dot is colored by a class name rather than\n         * the point color.\n         *\n         * @type {string}\n         * @since 10.3.0\n         * @product highcharts\n         */\n        linkFormat: '{point.fromNode.id} \\u2192 {point.toNode.id}',\n        pointFormat: '{point.id}'\n        /**\n         * A callback function for formatting the HTML output for a\n         * single link in the tooltip. Like the `linkFormat` string,\n         * but with more flexibility.\n         *\n         * @type {Highcharts.FormatterCallbackFunction.<Highcharts.Point>}\n         * @apioption series.treegraph.tooltip.linkFormatter\n         *\n         */\n    },\n    /**\n     * Options for the data labels appearing on top of the nodes and\n     * links. For treegraph charts, data labels are visible for the\n     * nodes by default, but hidden for links. This is controlled by\n     * modifying the `nodeFormat`, and the `format` that applies to\n     * links and is an empty string by default.\n     *\n     * @declare Highcharts.SeriesTreegraphDataLabelsOptionsObject\n     */\n    dataLabels: {\n        defer: true,\n        /**\n         * Options for a _link_ label text which should follow link\n         * connection. Border and background are disabled for a label\n         * that follows a path.\n         *\n         * **Note:** Only SVG-based renderer supports this option.\n         * Setting `useHTML` to true will disable this option.\n         *\n         * @sample highcharts/series-treegraph/link-text-path\n         *         Treegraph series with link text path dataLabels.\n         *\n         * @extends plotOptions.treegraph.dataLabels.textPath\n         * @since 10.3.0\n         */\n        linkTextPath: {\n            attributes: {\n                startOffset: '50%'\n            }\n        },\n        enabled: true,\n        linkFormatter: function () { return ''; },\n        style: {\n            textOverflow: 'none'\n        }\n    },\n    /**\n     * The distance between nodes in a tree graph in the longitudinal direction.\n     * The longitudinal direction means the direction that the chart flows - in\n     * a horizontal chart the distance is horizontal, in an inverted chart\n     * (vertical), the distance is vertical.\n     *\n     * If a number is given, it denotes pixels. If a percentage string is given,\n     * the distance is a percentage of the rendered node width. A `nodeDistance`\n     * of `100%` will render equal widths for the nodes and the gaps between\n     * them.\n     *\n     * This option applies only when the `nodeWidth` option is `auto`, making\n     * the node width respond to the number of columns.\n     *\n     * @since 11.4.0\n     * @sample highcharts/series-treegraph/node-distance\n     *         Node distance of 100% means equal to node width\n     * @type   {number|string}\n     */\n    nodeDistance: 30,\n    /**\n     * The pixel width of each node in a, or the height in case the chart is\n     * inverted. For tree graphs, the node width is only applied if the marker\n     * symbol is `rect`, otherwise the `marker` sizing options apply.\n     *\n     * Can be a number or a percentage string, or `auto`. If `auto`, the nodes\n     * are sized to fill up the plot area in the longitudinal direction,\n     * regardless of the number of levels.\n     *\n     * @since 11.4.0\n     * @see    [treegraph.nodeDistance](#nodeDistance)\n     * @sample highcharts/series-treegraph/node-distance\n     *         Node width is auto and combined with node distance\n     *\n     * @type {number|string}\n     */\n    nodeWidth: void 0\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Treegraph_TreegraphSeriesDefaults = (TreegraphSeriesDefaults);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"SVGElement\"],\"commonjs\":[\"highcharts\",\"SVGElement\"],\"commonjs2\":[\"highcharts\",\"SVGElement\"],\"root\":[\"Highcharts\",\"SVGElement\"]}\nvar highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_ = __webpack_require__(28);\nvar highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default = /*#__PURE__*/__webpack_require__.n(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_);\n;// ./code/es5/es-modules/Extensions/TextPath.js\n/* *\n *\n *  Highcharts module with textPath functionality.\n *\n *  (c) 2009-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\nvar deg2rad = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).deg2rad;\nvar TextPath_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, TextPath_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, uniqueKey = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).uniqueKey, defined = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defined, TextPath_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend;\n/**\n * Set a text path for a `text` or `label` element, allowing the text to\n * flow along a path.\n *\n * In order to unset the path for an existing element, call `setTextPath`\n * with `{ enabled: false }` as the second argument.\n *\n * Text path support is not bundled into `highcharts.js`, and requires the\n * `modules/textpath.js` file. However, it is included in the script files of\n * those series types that use it by default\n *\n * @sample highcharts/members/renderer-textpath/ Text path demonstrated\n *\n * @function Highcharts.SVGElement#setTextPath\n *\n * @param {Highcharts.SVGElement|undefined} path\n *        Path to follow. If undefined, it allows changing options for the\n *        existing path.\n *\n * @param {Highcharts.DataLabelsTextPathOptionsObject} textPathOptions\n *        Options.\n *\n * @return {Highcharts.SVGElement} Returns the SVGElement for chaining.\n */\nfunction setTextPath(path, textPathOptions) {\n    var _this = this;\n    // Defaults\n    textPathOptions = TextPath_merge(true, {\n        enabled: true,\n        attributes: {\n            dy: -5,\n            startOffset: '50%',\n            textAnchor: 'middle'\n        }\n    }, textPathOptions);\n    var url = this.renderer.url, textWrapper = this.text || this, textPath = textWrapper.textPath, attributes = textPathOptions.attributes, enabled = textPathOptions.enabled;\n    path = path || (textPath && textPath.path);\n    // Remove previously added event\n    if (textPath) {\n        textPath.undo();\n    }\n    if (path && enabled) {\n        var undo = TextPath_addEvent(textWrapper, 'afterModifyTree', function (e) {\n            if (path && enabled) {\n                // Set ID for the path\n                var textPathId = path.attr('id');\n                if (!textPathId) {\n                    path.attr('id', textPathId = uniqueKey());\n                }\n                // Set attributes for the <text>\n                var textAttribs = {\n                    // `dx`/`dy` options must by set on <text> (parent), the\n                    // rest should be set on <textPath>\n                    x: 0,\n                    y: 0\n                };\n                if (defined(attributes.dx)) {\n                    textAttribs.dx = attributes.dx;\n                    delete attributes.dx;\n                }\n                if (defined(attributes.dy)) {\n                    textAttribs.dy = attributes.dy;\n                    delete attributes.dy;\n                }\n                textWrapper.attr(textAttribs);\n                // Handle label properties\n                _this.attr({ transform: '' });\n                if (_this.box) {\n                    _this.box = _this.box.destroy();\n                }\n                // Wrap the nodes in a textPath\n                var children = e.nodes.slice(0);\n                e.nodes.length = 0;\n                e.nodes[0] = {\n                    tagName: 'textPath',\n                    attributes: TextPath_extend(attributes, {\n                        'text-anchor': attributes.textAnchor,\n                        href: \"\".concat(url, \"#\").concat(textPathId)\n                    }),\n                    children: children\n                };\n            }\n        });\n        // Set the reference\n        textWrapper.textPath = { path: path, undo: undo };\n    }\n    else {\n        textWrapper.attr({ dx: 0, dy: 0 });\n        delete textWrapper.textPath;\n    }\n    if (this.added) {\n        // Rebuild text after added\n        textWrapper.textCache = '';\n        this.renderer.buildText(textWrapper);\n    }\n    return this;\n}\n/**\n * Attach a polygon to a bounding box if the element contains a textPath.\n *\n * @function Highcharts.SVGElement#setPolygon\n *\n * @param {any} event\n *        An event containing a bounding box object\n *\n * @return {Highcharts.BBoxObject} Returns the bounding box object.\n */\nfunction setPolygon(event) {\n    var _a;\n    var bBox = event.bBox, tp = (_a = this.element) === null || _a === void 0 ? void 0 : _a.querySelector('textPath');\n    if (tp) {\n        var polygon = [], _b = this.renderer.fontMetrics(this.element), b_1 = _b.b, h = _b.h, descender_1 = h - b_1, lineCleanerRegex = new RegExp('(<tspan>|' +\n            '<tspan(?!\\\\sclass=\"highcharts-br\")[^>]*>|' +\n            '<\\\\/tspan>)', 'g'), lines = tp\n            .innerHTML\n            .replace(lineCleanerRegex, '')\n            .split(/<tspan class=\"highcharts-br\"[^>]*>/), numOfLines = lines.length;\n        // Calculate top and bottom coordinates for\n        // either the start or the end of a single\n        // character, and append it to the polygon.\n        var appendTopAndBottom = function (charIndex, positionOfChar) {\n            var x = positionOfChar.x, y = positionOfChar.y, rotation = (tp.getRotationOfChar(charIndex) - 90) * deg2rad, cosRot = Math.cos(rotation), sinRot = Math.sin(rotation);\n            return [\n                [\n                    x - descender_1 * cosRot,\n                    y - descender_1 * sinRot\n                ],\n                [\n                    x + b_1 * cosRot,\n                    y + b_1 * sinRot\n                ]\n            ];\n        };\n        for (var i = 0, lineIndex = 0; lineIndex < numOfLines; lineIndex++) {\n            var line = lines[lineIndex], lineLen = line.length;\n            for (var lineCharIndex = 0; lineCharIndex < lineLen; lineCharIndex += 5) {\n                try {\n                    var srcCharIndex = (i +\n                        lineCharIndex +\n                        lineIndex), _c = appendTopAndBottom(srcCharIndex, tp.getStartPositionOfChar(srcCharIndex)), lower = _c[0], upper = _c[1];\n                    if (lineCharIndex === 0) {\n                        polygon.push(upper);\n                        polygon.push(lower);\n                    }\n                    else {\n                        if (lineIndex === 0) {\n                            polygon.unshift(upper);\n                        }\n                        if (lineIndex === numOfLines - 1) {\n                            polygon.push(lower);\n                        }\n                    }\n                }\n                catch (e) {\n                    // Safari fails on getStartPositionOfChar even if the\n                    // character is within the `textContent.length`\n                    break;\n                }\n            }\n            i += lineLen - 1;\n            try {\n                var srcCharIndex = i + lineIndex, charPos = tp.getEndPositionOfChar(srcCharIndex), _d = appendTopAndBottom(srcCharIndex, charPos), lower = _d[0], upper = _d[1];\n                polygon.unshift(upper);\n                polygon.unshift(lower);\n            }\n            catch (e) {\n                // Safari fails on getStartPositionOfChar even if the character\n                // is within the `textContent.length`\n                break;\n            }\n        }\n        // Close it\n        if (polygon.length) {\n            polygon.push(polygon[0].slice());\n        }\n        bBox.polygon = polygon;\n    }\n    return bBox;\n}\n/**\n * Draw text along a textPath for a dataLabel.\n *\n * @function Highcharts.SVGElement#setTextPath\n *\n * @param {any} event\n *        An event containing label options\n *\n * @return {void}\n */\nfunction drawTextPath(event) {\n    var _a;\n    var labelOptions = event.labelOptions, point = event.point, textPathOptions = (labelOptions[point.formatPrefix + 'TextPath'] ||\n        labelOptions.textPath);\n    if (textPathOptions && !labelOptions.useHTML) {\n        this.setTextPath(((_a = point.getDataLabelPath) === null || _a === void 0 ? void 0 : _a.call(point, this)) || point.graphic, textPathOptions);\n        if (point.dataLabelPath &&\n            !textPathOptions.enabled) {\n            // Clean the DOM\n            point.dataLabelPath = (point.dataLabelPath.destroy());\n        }\n    }\n}\nfunction compose(SVGElementClass) {\n    TextPath_addEvent(SVGElementClass, 'afterGetBBox', setPolygon);\n    TextPath_addEvent(SVGElementClass, 'beforeAddingDataLabel', drawTextPath);\n    var svgElementProto = SVGElementClass.prototype;\n    if (!svgElementProto.setTextPath) {\n        svgElementProto.setTextPath = setTextPath;\n    }\n}\nvar TextPath = {\n    compose: compose\n};\n/* harmony default export */ var Extensions_TextPath = (TextPath);\n\n;// ./code/es5/es-modules/Series/Treegraph/TreegraphSeries.js\n/* *\n *\n *  (c) 2010-2024 Pawel Lysy Grzegorz Blachlinski\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar TreegraphSeries_extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar TreegraphSeries_getLinkPath = Series_PathUtilities.getLinkPath;\n\nvar seriesProto = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).series.prototype, _a = (highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default()).seriesTypes, TreemapSeries = _a.treemap, ColumnSeries = _a.column;\n\nvar symbols = (highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default()).prototype.symbols;\n\n\n\nvar TreegraphSeries_getLevelOptions = Series_TreeUtilities.getLevelOptions, TreegraphSeries_getNodeWidth = Series_TreeUtilities.getNodeWidth;\n\nvar arrayMax = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).arrayMax, crisp = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).crisp, TreegraphSeries_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, TreegraphSeries_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, TreegraphSeries_pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, TreegraphSeries_relativeLength = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).relativeLength, splat = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).splat;\n\n\n\n\n\nExtensions_TextPath.compose((highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default()));\n/* *\n *\n *  Class\n *\n * */\n/**\n * The Treegraph series type.\n *\n * @private\n * @class\n * @name Highcharts.seriesTypes.treegraph\n *\n * @augments Highcharts.Series\n */\nvar TreegraphSeries = /** @class */ (function (_super) {\n    TreegraphSeries_extends(TreegraphSeries, _super);\n    function TreegraphSeries() {\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.nodeList = [];\n        _this.links = [];\n        return _this;\n    }\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    TreegraphSeries.prototype.init = function () {\n        _super.prototype.init.apply(this, arguments);\n        this.layoutAlgorythm = new Treegraph_TreegraphLayout();\n        // Register the link data labels in the label collector for overlap\n        // detection.\n        var series = this, collectors = this.chart.labelCollectors, collectorFunc = function () {\n            var linkLabels = [];\n            // Check links for overlap\n            if (series.options.dataLabels &&\n                !splat(series.options.dataLabels)[0].allowOverlap) {\n                for (var _i = 0, _a = (series.links || []); _i < _a.length; _i++) {\n                    var link = _a[_i];\n                    if (link.dataLabel) {\n                        linkLabels.push(link.dataLabel);\n                    }\n                }\n            }\n            return linkLabels;\n        };\n        // Only add the collector function if it is not present\n        if (!collectors.some(function (f) { return f.name === 'collectorFunc'; })) {\n            collectors.push(collectorFunc);\n        }\n    };\n    /**\n     * Calculate `a` and `b` parameters of linear transformation, where\n     * `finalPosition = a * calculatedPosition + b`.\n     *\n     * @return {LayoutModifiers} `a` and `b` parameter for x and y direction.\n     */\n    TreegraphSeries.prototype.getLayoutModifiers = function () {\n        var _this = this;\n        var chart = this.chart, series = this, plotSizeX = chart.plotSizeX, plotSizeY = chart.plotSizeY, columnCount = arrayMax(this.points.map(function (p) { return p.node.xPosition; }));\n        var minX = Infinity, maxX = -Infinity, minY = Infinity, maxY = -Infinity, maxXSize = 0, minXSize = 0, maxYSize = 0, minYSize = 0;\n        this.points.forEach(function (point) {\n            var _a;\n            // When fillSpace is on, stop the layout calculation when the hidden\n            // points are reached. (#19038)\n            if (_this.options.fillSpace && !point.visible) {\n                return;\n            }\n            var node = point.node, level = series.mapOptionsToLevel[point.node.level] || {}, markerOptions = TreegraphSeries_merge(_this.options.marker, level.marker, point.options.marker), nodeWidth = (_a = markerOptions.width) !== null && _a !== void 0 ? _a : TreegraphSeries_getNodeWidth(_this, columnCount), radius = TreegraphSeries_relativeLength(markerOptions.radius || 0, Math.min(plotSizeX, plotSizeY)), symbol = markerOptions.symbol, nodeSizeY = (symbol === 'circle' || !markerOptions.height) ?\n                radius * 2 :\n                TreegraphSeries_relativeLength(markerOptions.height, plotSizeY), nodeSizeX = symbol === 'circle' || !nodeWidth ?\n                radius * 2 :\n                TreegraphSeries_relativeLength(nodeWidth, plotSizeX);\n            node.nodeSizeX = nodeSizeX;\n            node.nodeSizeY = nodeSizeY;\n            var lineWidth;\n            if (node.xPosition <= minX) {\n                minX = node.xPosition;\n                lineWidth = markerOptions.lineWidth || 0;\n                minXSize = Math.max(nodeSizeX + lineWidth, minXSize);\n            }\n            if (node.xPosition >= maxX) {\n                maxX = node.xPosition;\n                lineWidth = markerOptions.lineWidth || 0;\n                maxXSize = Math.max(nodeSizeX + lineWidth, maxXSize);\n            }\n            if (node.yPosition <= minY) {\n                minY = node.yPosition;\n                lineWidth = markerOptions.lineWidth || 0;\n                minYSize = Math.max(nodeSizeY + lineWidth, minYSize);\n            }\n            if (node.yPosition >= maxY) {\n                maxY = node.yPosition;\n                lineWidth = markerOptions.lineWidth || 0;\n                maxYSize = Math.max(nodeSizeY + lineWidth, maxYSize);\n            }\n        });\n        // Calculate the values of linear transformation, which will later be\n        // applied as `nodePosition = a * x + b` for each direction.\n        var ay = maxY === minY ?\n            1 :\n            (plotSizeY - (minYSize + maxYSize) / 2) / (maxY - minY), by = maxY === minY ? plotSizeY / 2 : -ay * minY + minYSize / 2, ax = maxX === minX ?\n            1 :\n            (plotSizeX - (maxXSize + maxXSize) / 2) / (maxX - minX), bx = maxX === minX ? plotSizeX / 2 : -ax * minX + minXSize / 2;\n        return { ax: ax, bx: bx, ay: ay, by: by };\n    };\n    TreegraphSeries.prototype.getLinks = function () {\n        var _this = this;\n        var series = this;\n        var links = [];\n        this.data.forEach(function (point) {\n            var levelOptions = series.mapOptionsToLevel[point.node.level || 0] || {};\n            if (point.node.parent) {\n                var pointOptions = TreegraphSeries_merge(levelOptions, point.options);\n                if (!point.linkToParent || point.linkToParent.destroyed) {\n                    var link = new series.LinkClass(series, pointOptions, void 0, point);\n                    point.linkToParent = link;\n                }\n                else {\n                    // #19552\n                    point.collapsed = TreegraphSeries_pick(point.collapsed, (_this.mapOptionsToLevel[point.node.level] || {}).collapsed);\n                    point.linkToParent.visible =\n                        point.linkToParent.toNode.visible;\n                }\n                point.linkToParent.index = links.push(point.linkToParent) - 1;\n            }\n            else {\n                if (point.linkToParent) {\n                    series.links.splice(point.linkToParent.index);\n                    point.linkToParent.destroy();\n                    delete point.linkToParent;\n                }\n            }\n        });\n        return links;\n    };\n    TreegraphSeries.prototype.buildTree = function (id, index, level, list, parent) {\n        var point = this.points[index];\n        level = (point && point.level) || level;\n        return _super.prototype.buildTree.call(this, id, index, level, list, parent);\n    };\n    TreegraphSeries.prototype.markerAttribs = function () {\n        // The super Series.markerAttribs returns { width: NaN, height: NaN },\n        // so just disable this for now.\n        return {};\n    };\n    TreegraphSeries.prototype.setCollapsedStatus = function (node, visibility) {\n        var _this = this;\n        var point = node.point;\n        if (point) {\n            // Take the level options into account.\n            point.collapsed = TreegraphSeries_pick(point.collapsed, (this.mapOptionsToLevel[node.level] || {}).collapsed);\n            point.visible = visibility;\n            visibility = visibility === false ? false : !point.collapsed;\n        }\n        node.children.forEach(function (childNode) {\n            _this.setCollapsedStatus(childNode, visibility);\n        });\n    };\n    TreegraphSeries.prototype.drawTracker = function () {\n        ColumnSeries.prototype.drawTracker.apply(this, arguments);\n        ColumnSeries.prototype.drawTracker.call(this, this.links);\n    };\n    /**\n     * Run pre-translation by generating the nodeColumns.\n     * @private\n     */\n    TreegraphSeries.prototype.translate = function () {\n        var _this = this;\n        var series = this, options = series.options;\n        // NOTE: updateRootId modifies series.\n        var rootId = Series_TreeUtilities.updateRootId(series), rootNode;\n        // Call prototype function\n        seriesProto.translate.call(series);\n        var tree = series.tree = series.getTree();\n        rootNode = series.nodeMap[rootId];\n        if (rootId !== '' && (!rootNode || !rootNode.children.length)) {\n            series.setRootNode('', false);\n            rootId = series.rootNode;\n            rootNode = series.nodeMap[rootId];\n        }\n        series.mapOptionsToLevel = TreegraphSeries_getLevelOptions({\n            from: rootNode.level + 1,\n            levels: options.levels,\n            to: tree.height,\n            defaults: {\n                levelIsConstant: series.options.levelIsConstant,\n                colorByPoint: options.colorByPoint\n            }\n        });\n        this.setCollapsedStatus(tree, true);\n        series.links = series.getLinks();\n        series.setTreeValues(tree);\n        this.layoutAlgorythm.calculatePositions(series);\n        series.layoutModifier = this.getLayoutModifiers();\n        this.points.forEach(function (point) {\n            _this.translateNode(point);\n        });\n        this.points.forEach(function (point) {\n            if (point.linkToParent) {\n                _this.translateLink(point.linkToParent);\n            }\n        });\n        if (!options.colorByPoint) {\n            series.setColorRecursive(series.tree);\n        }\n    };\n    TreegraphSeries.prototype.translateLink = function (link) {\n        var _a, _b, _c, _d, _e;\n        var fromNode = link.fromNode, toNode = link.toNode, linkWidth = ((_a = this.options.link) === null || _a === void 0 ? void 0 : _a.lineWidth) || 0, factor = TreegraphSeries_pick((_b = this.options.link) === null || _b === void 0 ? void 0 : _b.curveFactor, 0.5), type = TreegraphSeries_pick((_c = link.options.link) === null || _c === void 0 ? void 0 : _c.type, (_d = this.options.link) === null || _d === void 0 ? void 0 : _d.type, 'default');\n        if (fromNode.shapeArgs && toNode.shapeArgs) {\n            var fromNodeWidth = (fromNode.shapeArgs.width || 0), inverted = this.chart.inverted, y1 = crisp((fromNode.shapeArgs.y || 0) +\n                (fromNode.shapeArgs.height || 0) / 2, linkWidth), y2 = crisp((toNode.shapeArgs.y || 0) +\n                (toNode.shapeArgs.height || 0) / 2, linkWidth);\n            var x1 = crisp((fromNode.shapeArgs.x || 0) + fromNodeWidth, linkWidth), x2 = crisp(toNode.shapeArgs.x || 0, linkWidth);\n            if (inverted) {\n                x1 -= fromNodeWidth;\n                x2 += (toNode.shapeArgs.width || 0);\n            }\n            var diff = toNode.node.xPosition - fromNode.node.xPosition;\n            link.shapeType = 'path';\n            var fullWidth = Math.abs(x2 - x1) + fromNodeWidth, width = (fullWidth / diff) - fromNodeWidth, offset = width * factor * (inverted ? -1 : 1);\n            var xMiddle = crisp((x2 + x1) / 2, linkWidth);\n            link.plotX = xMiddle;\n            link.plotY = y2;\n            link.shapeArgs = {\n                d: TreegraphSeries_getLinkPath[type]({\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2,\n                    width: width,\n                    offset: offset,\n                    inverted: inverted,\n                    parentVisible: toNode.visible,\n                    radius: (_e = this.options.link) === null || _e === void 0 ? void 0 : _e.radius\n                })\n            };\n            link.dlBox = {\n                x: (x1 + x2) / 2,\n                y: (y1 + y2) / 2,\n                height: linkWidth,\n                width: 0\n            };\n            link.tooltipPos = inverted ? [\n                (this.chart.plotSizeY || 0) - link.dlBox.y,\n                (this.chart.plotSizeX || 0) - link.dlBox.x\n            ] : [\n                link.dlBox.x,\n                link.dlBox.y\n            ];\n        }\n    };\n    /**\n     * Private method responsible for adjusting the dataLabel options for each\n     * node-point individually.\n     */\n    TreegraphSeries.prototype.drawNodeLabels = function (points) {\n        var _a;\n        var _b, _c, _d;\n        var series = this, mapOptionsToLevel = series.mapOptionsToLevel;\n        var options, level;\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var point = points_1[_i];\n            level = mapOptionsToLevel[point.node.level];\n            // Set options to new object to avoid problems with scope\n            options = { style: {} };\n            // If options for level exists, include them as well\n            if (level && level.dataLabels) {\n                options = TreegraphSeries_merge(options, level.dataLabels);\n                series.hasDataLabels = function () { return true; };\n            }\n            // Set dataLabel width to the width of the point shape.\n            if (point.shapeArgs &&\n                series.options.dataLabels) {\n                var css = {};\n                var _e = point.shapeArgs, _f = _e.width, width = _f === void 0 ? 0 : _f, _g = _e.height, height = _g === void 0 ? 0 : _g;\n                if (series.chart.inverted) {\n                    _a = [height, width], width = _a[0], height = _a[1];\n                }\n                if (!((_b = splat(series.options.dataLabels)[0].style) === null || _b === void 0 ? void 0 : _b.width)) {\n                    css.width = \"\".concat(width, \"px\");\n                }\n                if (!((_c = splat(series.options.dataLabels)[0].style) === null || _c === void 0 ? void 0 : _c.lineClamp)) {\n                    css.lineClamp = Math.floor(height / 16);\n                }\n                TreegraphSeries_extend(options.style, css);\n                (_d = point.dataLabel) === null || _d === void 0 ? void 0 : _d.css(css);\n            }\n            // Merge custom options with point options\n            point.dlOptions = TreegraphSeries_merge(options, point.options.dataLabels);\n        }\n        seriesProto.drawDataLabels.call(this, points);\n    };\n    /**\n     * Override alignDataLabel so that position is always calculated and the\n     * label is faded in and out instead of hidden/shown when collapsing and\n     * expanding nodes.\n     */\n    TreegraphSeries.prototype.alignDataLabel = function (point, dataLabel) {\n        var visible = point.visible;\n        // Force position calculation and visibility\n        point.visible = true;\n        _super.prototype.alignDataLabel.apply(this, arguments);\n        // Fade in or out\n        dataLabel.animate({\n            opacity: visible === false ? 0 : 1\n        }, void 0, function () {\n            // Hide data labels that belong to hidden points (#18891)\n            visible || dataLabel.hide();\n        });\n        // Reset\n        point.visible = visible;\n    };\n    /**\n     * Treegraph has two separate collecions of nodes and lines,\n     * render dataLabels for both sets.\n     */\n    TreegraphSeries.prototype.drawDataLabels = function () {\n        if (this.options.dataLabels) {\n            this.options.dataLabels = splat(this.options.dataLabels);\n            // Render node labels.\n            this.drawNodeLabels(this.points);\n            // Render link labels.\n            seriesProto.drawDataLabels.call(this, this.links);\n        }\n    };\n    TreegraphSeries.prototype.destroy = function () {\n        // Links must also be destroyed.\n        if (this.links) {\n            for (var _i = 0, _a = this.links; _i < _a.length; _i++) {\n                var link = _a[_i];\n                link.destroy();\n            }\n            this.links.length = 0;\n        }\n        return seriesProto.destroy.apply(this, arguments);\n    };\n    /**\n     * Return the presentational attributes.\n     * @private\n     */\n    TreegraphSeries.prototype.pointAttribs = function (point, state) {\n        var series = this, levelOptions = point &&\n            series.mapOptionsToLevel[point.node.level || 0] || {}, options = point && point.options, stateOptions = (levelOptions.states &&\n            levelOptions.states[state]) ||\n            {};\n        if (point) {\n            point.options.marker = TreegraphSeries_merge(series.options.marker, levelOptions.marker, point.options.marker);\n        }\n        var linkColor = TreegraphSeries_pick(stateOptions && stateOptions.link && stateOptions.link.color, options && options.link && options.link.color, levelOptions && levelOptions.link && levelOptions.link.color, series.options.link && series.options.link.color), linkLineWidth = TreegraphSeries_pick(stateOptions && stateOptions.link &&\n            stateOptions.link.lineWidth, options && options.link && options.link.lineWidth, levelOptions && levelOptions.link &&\n            levelOptions.link.lineWidth, series.options.link && series.options.link.lineWidth), attribs = seriesProto.pointAttribs.call(series, point, state);\n        if (point) {\n            if (point.isLink) {\n                attribs.stroke = linkColor;\n                attribs['stroke-width'] = linkLineWidth;\n                delete attribs.fill;\n            }\n            if (!point.visible) {\n                attribs.opacity = 0;\n            }\n        }\n        return attribs;\n    };\n    TreegraphSeries.prototype.drawPoints = function () {\n        TreemapSeries.prototype.drawPoints.apply(this, arguments);\n        ColumnSeries.prototype.drawPoints.call(this, this.links);\n    };\n    /**\n     * Run translation operations for one node.\n     * @private\n     */\n    TreegraphSeries.prototype.translateNode = function (point) {\n        var chart = this.chart, node = point.node, plotSizeY = chart.plotSizeY, plotSizeX = chart.plotSizeX, \n        // Get the layout modifiers which are common for all nodes.\n        _a = this.layoutModifier, ax = _a.ax, bx = _a.bx, ay = _a.ay, by = _a.by, x = ax * node.xPosition + bx, y = ay * node.yPosition + by, level = this.mapOptionsToLevel[node.level] || {}, markerOptions = TreegraphSeries_merge(this.options.marker, level.marker, point.options.marker), symbol = markerOptions.symbol, height = node.nodeSizeY, width = node.nodeSizeX, reversed = this.options.reversed, nodeX = node.x = (chart.inverted ?\n            plotSizeX - width / 2 - x :\n            x - width / 2), nodeY = node.y = (!reversed ?\n            plotSizeY - y - height / 2 :\n            y - height / 2), borderRadius = TreegraphSeries_pick(point.options.borderRadius, level.borderRadius, this.options.borderRadius), symbolFn = symbols[symbol || 'circle'];\n        if (symbolFn === void 0) {\n            point.hasImage = true;\n            point.shapeType = 'image';\n            point.imageUrl = symbol.match(/^url\\((.*?)\\)$/)[1];\n        }\n        else {\n            point.shapeType = 'path';\n        }\n        if (!point.visible && point.linkToParent) {\n            var parentNode = point.linkToParent.fromNode;\n            if (parentNode) {\n                var parentShapeArgs = parentNode.shapeArgs || {}, _b = parentShapeArgs.x, x_1 = _b === void 0 ? 0 : _b, _c = parentShapeArgs.y, y_1 = _c === void 0 ? 0 : _c, _d = parentShapeArgs.width, width_1 = _d === void 0 ? 0 : _d, _e = parentShapeArgs.height, height_1 = _e === void 0 ? 0 : _e;\n                if (!point.shapeArgs) {\n                    point.shapeArgs = {};\n                }\n                if (!point.hasImage) {\n                    TreegraphSeries_extend(point.shapeArgs, {\n                        d: symbolFn(x_1, y_1, width_1, height_1, borderRadius ? { r: borderRadius } : void 0)\n                    });\n                }\n                TreegraphSeries_extend(point.shapeArgs, { x: x_1, y: y_1 });\n                point.plotX = parentNode.plotX;\n                point.plotY = parentNode.plotY;\n            }\n        }\n        else {\n            point.plotX = nodeX;\n            point.plotY = nodeY;\n            point.shapeArgs = {\n                x: nodeX,\n                y: nodeY,\n                width: width,\n                height: height,\n                cursor: !point.node.isLeaf ? 'pointer' : 'default'\n            };\n            if (!point.hasImage) {\n                point.shapeArgs.d = symbolFn(nodeX, nodeY, width, height, borderRadius ? { r: borderRadius } : void 0);\n            }\n        }\n        // Set the anchor position for tooltip.\n        point.tooltipPos = chart.inverted ?\n            [plotSizeY - nodeY - height / 2, plotSizeX - nodeX - width / 2] :\n            [nodeX + width / 2, nodeY];\n    };\n    TreegraphSeries.defaultOptions = TreegraphSeries_merge(TreemapSeries.defaultOptions, Treegraph_TreegraphSeriesDefaults);\n    return TreegraphSeries;\n}(TreemapSeries));\nTreegraphSeries_extend(TreegraphSeries.prototype, {\n    pointClass: Treegraph_TreegraphPoint,\n    NodeClass: Treegraph_TreegraphNode,\n    LinkClass: TreegraphLink\n});\nhighcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType('treegraph', TreegraphSeries);\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Treegraph_TreegraphSeries = ((/* unused pure expression or super */ null && (TreegraphSeries)));\n/* *\n *\n *  API Options\n *\n * */\n/**\n * A `treegraph` series. If the [type](#series.treegraph.type)\n * option is not specified, it is inherited from [chart.type](#chart.type).\n *\n * @extends   series,plotOptions.treegraph\n * @exclude   allowDrillToNode, boostBlending, boostThreshold, curveFactor,\n * centerInCategory, connectEnds, connectNulls, colorAxis, colorKey,\n * dataSorting, dragDrop, findNearestPointBy, getExtremesFromAll, layout,\n * nodePadding,  pointInterval, pointIntervalUnit, pointPlacement, pointStart,\n * relativeXValue, softThreshold, stack, stacking, step,\n * traverseUpButton, xAxis, yAxis, zoneAxis, zones\n * @product   highcharts\n * @requires  modules/treemap\n * @requires  modules/treegraph\n * @apioption series.treegraph\n */\n/**\n * @extends   plotOptions.series.marker\n * @excluding enabled, enabledThreshold\n * @apioption series.treegraph.marker\n */\n/**\n * @type      {Highcharts.SeriesTreegraphDataLabelsOptionsObject|Array<Highcharts.SeriesTreegraphDataLabelsOptionsObject>}\n * @product   highcharts\n * @apioption series.treegraph.data.dataLabels\n */\n/**\n * @sample highcharts/series-treegraph/level-options\n *          Treegraph chart with level options applied\n *\n * @type      {Array<*>}\n * @excluding layoutStartingDirection, layoutAlgorithm\n * @apioption series.treegraph.levels\n */\n/**\n * Set collapsed status for nodes level-wise.\n * @type {boolean}\n * @apioption series.treegraph.levels.collapsed\n */\n/**\n * Set marker options for nodes at the level.\n * @extends   series.treegraph.marker\n * @apioption series.treegraph.levels.marker\n */\n/**\n * An array of data points for the series. For the `treegraph` series type,\n * points can be given in the following ways:\n *\n * 1. The array of arrays, with `keys` property, which defines how the fields in\n *     array should be interpreted\n *    ```js\n *       keys: ['id', 'parent'],\n *       data: [\n *           ['Category1'],\n *           ['Category1', 'Category2']\n *       ]\n *\n * 2. An array of objects with named values. The following snippet shows only a\n *    few settings, see the complete options set below. If the total number of\n *    data points exceeds the\n *    series' [turboThreshold](#series.area.turboThreshold),\n *    this option is not available.\n *    The data of the treegraph series needs to be formatted in such a way, that\n *    there are no circular dependencies on the nodes\n *\n *  ```js\n *     data: [{\n *         id: 'Category1'\n *     }, {\n *         id: 'Category1',\n *         parent: 'Category2',\n *     }]\n *  ```\n *\n * @type      {Array<*>}\n * @extends   series.treemap.data\n * @product   highcharts\n * @excluding outgoing, weight, value\n * @apioption series.treegraph.data\n */\n/**\n * Options used for button, which toggles the collapse status of the node.\n *\n *\n * @apioption series.treegraph.data.collapseButton\n */\n/**\n * If point's children should be initially hidden\n *\n * @sample highcharts/series-treegraph/level-options\n *          Treegraph chart with initially hidden children\n *\n * @type {boolean}\n * @apioption series.treegraph.data.collapsed\n */\n''; // Gets doclets above into transpiled version\n\n;// ./code/es5/es-modules/masters/modules/treegraph.src.js\n\n\n\n\n/* harmony default export */ var treegraph_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__512__","__WEBPACK_EXTERNAL_MODULE__540__","__WEBPACK_EXTERNAL_MODULE__260__","__WEBPACK_EXTERNAL_MODULE__620__","__WEBPACK_EXTERNAL_MODULE__28__","extendStatics","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","treegraph_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_","highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default","highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_","highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default","__extends","b","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","TreegraphNode","_super","_this","apply","arguments","mod","shift","change","children","preX","hidden","wasVisited","collapsed","nextLeft","getLeftMostChild","thread","nextRight","getRightMostChild","getAncestor","leftIntNode","defaultAncestor","leftAnc","ancestor","getLeftMostSibling","parent","getParent","_i","_a","length","child","point","visible","hasChildren","i","getLeftSibling","relativeXPosition","parentNode","getFirstChild","seriesTypes","treemap","NodeClass","highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_","highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default","TreegraphPoint_extends","TreemapPoint","pointClass","addEvent","fireEvent","merge","TreegraphPoint","dataLabelOnHidden","isLink","setState","draw","graphic","animate","visibility","renderCollapseButton","series","parentGroup","levelOptions","mapOptionsToLevel","node","level","btnOptions","options","collapseButton","width","height","shape","style","chart","calculatedOpacity","onlyOnHover","state","shapeArgs","collapseButtonOptions","enabled","_b","getCollapseBtnPosition","x","y","attr","text","rotation","inverted","rotationOriginX","rotationOriginY","opacity","destroy","fill","fillColor","color","renderer","label","padding","stroke","lineColor","lineWidth","align","zIndex","addClass","removeClass","css","getContrast","add","element","toggleCollapse","update","redraw","linkToParent","btnWidth","btnHeight","_c","_d","_e","btn","states","hover","animation","isArray","extend","isNumber","isObject","TreeUtilities_merge","pick","relativeLength","params","defaults","converted","from","to","levels","result","reduce","item","levelIsConstant","columnCount","nodeDistance","nodeWidth","plotSizeX","test","fraction","parseFloat","nDistance","Number","rootId","rootNode","userOptions","TreegraphLink_extends","TreegraphLink_pick","TreegraphLink_extend","LinkPoint","dataLabelOnNull","formatPrefix","fromNode","toNode","id","runEvent","oldOptions","column","TreegraphLayout","createDummyNode","gapSize","dummyNode","push","oldParentNode","calculatePositions","nodes","nodeList","resetValues","tree","treeLayout","calculateRelativeX","beforeLayout","firstWalk","secondWalk","afterLayout","nodes_1","nodes_2","index","iEnd","leftSibling","apportion","executeShifts","leftChild","rightChild","midPoint","modSum","yPosition","xPosition","childNode","rightIntNode","rightOutNode","leftOutNode","rightIntMod","rightOutMod","leftIntMod","leftOutMod","moveSubtree","leftNode","rightNode","subtrees","nodes_3","Treegraph_TreegraphSeriesDefaults","reversed","marker","radius","symbol","fillOpacity","link","cursor","type","fontWeight","fontSize","fillSpace","tooltip","linkFormat","pointFormat","dataLabels","defer","linkTextPath","attributes","startOffset","linkFormatter","textOverflow","highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_","highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default","deg2rad","TextPath_addEvent","TextPath_merge","uniqueKey","defined","TextPath_extend","setTextPath","path","textPathOptions","dy","textAnchor","url","textWrapper","textPath","undo","e","textPathId","textAttribs","dx","transform","box","slice","tagName","href","concat","added","textCache","buildText","setPolygon","event","bBox","tp","querySelector","polygon","fontMetrics","b_1","descender_1","h","lineCleanerRegex","RegExp","lines","innerHTML","replace","split","numOfLines","appendTopAndBottom","charIndex","positionOfChar","getRotationOfChar","cosRot","Math","cos","sinRot","sin","lineIndex","lineLen","line","lineCharIndex","srcCharIndex","getStartPositionOfChar","lower","upper","unshift","charPos","getEndPositionOfChar","drawTextPath","labelOptions","useHTML","getDataLabelPath","dataLabelPath","TreegraphSeries_extends","TreegraphSeries_getLinkPath","pathParams","x1","y1","x2","y2","parentVisible","applyRadius","r","prevSeg","nextSeg","directionX","directionY","min","abs","straight","curved","offset","seriesProto","TreemapSeries","ColumnSeries","symbols","arrayMax","crisp","TreegraphSeries_extend","TreegraphSeries_merge","TreegraphSeries_pick","TreegraphSeries_relativeLength","splat","Extensions_TextPath","compose","SVGElementClass","svgElementProto","TreegraphSeries","links","init","layoutAlgorythm","collectors","labelCollectors","some","f","name","linkLabels","allowOverlap","dataLabel","getLayoutModifiers","plotSizeY","points","map","minX","Infinity","maxX","minY","maxY","maxXSize","minXSize","maxYSize","minYSize","forEach","markerOptions","TreegraphSeries_getNodeWidth","nodeSizeY","nodeSizeX","max","ay","by","ax","bx","getLinks","data","pointOptions","destroyed","LinkClass","splice","buildTree","list","markerAttribs","setCollapsedStatus","drawTracker","translate","Series_TreeUtilities","getTree","nodeMap","setRootNode","TreegraphSeries_getLevelOptions","colorByPoint","setTreeValues","layoutModifier","translateNode","translateLink","setColorRecursive","linkWidth","factor","curveFactor","fromNodeWidth","diff","shapeType","xMiddle","plotX","plotY","dlBox","tooltipPos","drawNodeLabels","points_1","hasDataLabels","_f","_g","lineClamp","floor","dlOptions","drawDataLabels","alignDataLabel","hide","pointAttribs","stateOptions","linkColor","linkLineWidth","attribs","drawPoints","nodeX","nodeY","borderRadius","symbolFn","hasImage","imageUrl","match","parentShapeArgs","x_1","y_1","isLeaf","defaultOptions","registerSeriesType"],"mappings":"CAWA,AAXA;;;;;;;;;;CAUC,EACA,SAA0CA,CAAI,CAAEC,CAAO,EACpD,AAAmB,UAAnB,OAAOC,SAAwB,AAAkB,UAAlB,OAAOC,OACxCA,OAAOD,OAAO,CAAGD,EAAQG,QAAQ,cAAeA,QAAQ,cAAc,cAAiB,CAAEA,QAAQ,cAAc,WAAc,CAAEA,QAAQ,cAAc,KAAQ,CAAEA,QAAQ,cAAc,KAAQ,CAAEA,QAAQ,cAAc,UAAa,EAC3N,AAAkB,YAAlB,OAAOC,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,uBAAwB,CAAC,CAAC,wBAAwB,CAAE,CAAC,wBAAwB,iBAAiB,CAAE,CAAC,wBAAwB,cAAc,CAAE,CAAC,wBAAwB,QAAQ,CAAE,CAAC,wBAAwB,QAAQ,CAAE,CAAC,wBAAwB,aAAa,CAAC,CAAEJ,GACxP,AAAmB,UAAnB,OAAOC,QACdA,OAAO,CAAC,uBAAuB,CAAGD,EAAQG,QAAQ,cAAeA,QAAQ,cAAc,cAAiB,CAAEA,QAAQ,cAAc,WAAc,CAAEA,QAAQ,cAAc,KAAQ,CAAEA,QAAQ,cAAc,KAAQ,CAAEA,QAAQ,cAAc,UAAa,EAEnPJ,EAAK,UAAa,CAAGC,EAAQD,EAAK,UAAa,CAAEA,EAAK,UAAa,CAAC,cAAiB,CAAEA,EAAK,UAAa,CAAC,WAAc,CAAEA,EAAK,UAAa,CAAC,KAAQ,CAAEA,EAAK,UAAa,CAAC,KAAQ,CAAEA,EAAK,UAAa,CAAC,UAAa,CACtN,EAAG,IAAI,CAAE,SAASO,CAAgC,CAAEC,CAAgC,CAAEC,CAAgC,CAAEC,CAAgC,CAAEC,CAAgC,CAAEC,CAA+B,EAC3N,OAAgB,AAAC,WACP,aACA,IA4QFC,EAmNAA,EA2ZAA,EAw7BAA,EAlzDMC,EAAuB,CAE/B,IACC,SAASX,CAAM,EAEtBA,EAAOD,OAAO,CAAGS,CAEX,EAEA,IACC,SAASR,CAAM,EAEtBA,EAAOD,OAAO,CAAGQ,CAEX,EAEA,GACC,SAASP,CAAM,EAEtBA,EAAOD,OAAO,CAAGU,CAEX,EAEA,IACC,SAAST,CAAM,EAEtBA,EAAOD,OAAO,CAAGO,CAEX,EAEA,IACC,SAASN,CAAM,EAEtBA,EAAOD,OAAO,CAAGM,CAEX,EAEA,IACC,SAASL,CAAM,EAEtBA,EAAOD,OAAO,CAAGK,CAEX,CAEI,EAGIQ,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,CAAQ,EAEpC,IAAIC,EAAeH,CAAwB,CAACE,EAAS,CACrD,GAAIC,AAAiBC,KAAAA,IAAjBD,EACH,OAAOA,EAAahB,OAAO,CAG5B,IAAIC,EAASY,CAAwB,CAACE,EAAS,CAAG,CAGjDf,QAAS,CAAC,CACX,EAMA,OAHAY,CAAmB,CAACG,EAAS,CAACd,EAAQA,EAAOD,OAAO,CAAEc,GAG/Cb,EAAOD,OAAO,AACtB,CAMCc,EAAoBI,CAAC,CAAG,SAASjB,CAAM,EACtC,IAAIkB,EAASlB,GAAUA,EAAOmB,UAAU,CACvC,WAAa,OAAOnB,EAAO,OAAU,AAAE,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAa,EAAoBO,CAAC,CAACF,EAAQ,CAAEG,EAAGH,CAAO,GACnCA,CACR,EAMAL,EAAoBO,CAAC,CAAG,SAASrB,CAAO,CAAEuB,CAAU,EACnD,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,CAAC,CAACF,EAAYC,IAAQ,CAACV,EAAoBW,CAAC,CAACzB,EAASwB,IAC5EE,OAAOC,cAAc,CAAC3B,EAASwB,EAAK,CAAEI,WAAY,CAAA,EAAMC,IAAKN,CAAU,CAACC,EAAI,AAAC,EAGhF,EAKAV,EAAoBW,CAAC,CAAG,SAASK,CAAG,CAAEC,CAAI,EAAI,OAAOL,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,EAAKC,EAAO,EAIjH,IAAII,EAAsB,CAAC,EAG3BrB,EAAoBO,CAAC,CAACc,EAAqB,CACzC,QAAW,WAAa,OAAqBC,EAAe,CAC9D,GAGA,IAAIC,EAAuEvB,EAAoB,KAC3FwB,EAA8E,WAAW,EAAExB,EAAoBI,CAAC,CAACmB,GA6IjHE,EAAmIzB,EAAoB,KACvJ0B,EAA0I,WAAW,EAAE1B,EAAoBI,CAAC,CAACqB,GAE7KE,EAAuH3B,EAAoB,KAC3I4B,EAA8H,WAAW,EAAE5B,EAAoBI,CAAC,CAACuB,GAYjKE,GACIhC,EAAgB,SAAUU,CAAC,CAAEuB,CAAC,EAI9B,MAAOjC,AAHPA,CAAAA,EAAgBe,OAAOmB,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU1B,CAAC,CAAEuB,CAAC,EAAIvB,EAAEyB,SAAS,CAAGF,CAAG,GAC1E,SAAUvB,CAAC,CAAEuB,CAAC,EAAI,IAAK,IAAII,KAAKJ,EAAOlB,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACU,EAAGI,IAAI3B,CAAAA,CAAC,CAAC2B,EAAE,CAAGJ,CAAC,CAACI,EAAE,AAAD,CAAG,CAAA,EAC/E3B,EAAGuB,EAC5B,EACO,SAAUvB,CAAC,CAAEuB,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIK,UAAU,uBAAyBC,OAAON,GAAK,iCAE7D,SAASO,IAAO,IAAI,CAACC,WAAW,CAAG/B,CAAG,CADtCV,EAAcU,EAAGuB,GAEjBvB,EAAEW,SAAS,CAAGY,AAAM,OAANA,EAAalB,OAAO2B,MAAM,CAACT,GAAMO,CAAAA,EAAGnB,SAAS,CAAGY,EAAEZ,SAAS,CAAE,IAAImB,CAAG,CACtF,GAaAG,EAA+B,SAAUC,CAAM,EAE/C,SAASD,IAML,IAAIE,EAAQD,AAAW,OAAXA,GAAmBA,EAAOE,KAAK,CAAC,IAAI,CAAEC,YAAc,IAAI,CASpE,OARAF,EAAMG,GAAG,CAAG,EACZH,EAAMI,KAAK,CAAG,EACdJ,EAAMK,MAAM,CAAG,EACfL,EAAMM,QAAQ,CAAG,EAAE,CACnBN,EAAMO,IAAI,CAAG,EACbP,EAAMQ,MAAM,CAAG,CAAA,EACfR,EAAMS,UAAU,CAAG,CAAA,EACnBT,EAAMU,SAAS,CAAG,CAAA,EACXV,CACX,CAgJA,OAjKAb,EAAUW,EAAeC,GA6BzBD,EAActB,SAAS,CAACmC,QAAQ,CAAG,WAC/B,OAAO,IAAI,CAACC,gBAAgB,IAAM,IAAI,CAACC,MAAM,AACjD,EAOAf,EAActB,SAAS,CAACsC,SAAS,CAAG,WAChC,OAAO,IAAI,CAACC,iBAAiB,IAAM,IAAI,CAACF,MAAM,AAClD,EAYAf,EAActB,SAAS,CAACwC,WAAW,CAAG,SAAUC,CAAW,CAAEC,CAAe,SAExE,AAAIC,AADUF,EAAYG,QAAQ,CACtBd,QAAQ,CAAC,EAAE,GAAK,IAAI,CAACA,QAAQ,CAAC,EAAE,CACjCW,EAAYG,QAAQ,CAExBF,CACX,EAQApB,EAActB,SAAS,CAAC6C,kBAAkB,CAAG,WACzC,IAAIC,EAAS,IAAI,CAACC,SAAS,GAC3B,GAAID,EACA,IAAK,IAAIE,EAAK,EAAGC,EAAKH,EAAOhB,QAAQ,CAAEkB,EAAKC,EAAGC,MAAM,CAAEF,IAAM,CACzD,IAAIG,EAAQF,CAAE,CAACD,EAAG,CAClB,GAAIG,GAASA,EAAMC,KAAK,CAACC,OAAO,CAC5B,OAAOF,CAEf,CAER,EAOA7B,EAActB,SAAS,CAACsD,WAAW,CAAG,WAElC,IAAK,IADDxB,EAAW,IAAI,CAACA,QAAQ,CACnByB,EAAI,EAAGA,EAAIzB,EAASoB,MAAM,CAAEK,IACjC,GAAIzB,CAAQ,CAACyB,EAAE,CAACH,KAAK,CAACC,OAAO,CACzB,MAAO,CAAA,EAGf,MAAO,CAAA,CACX,EAOA/B,EAActB,SAAS,CAACwD,cAAc,CAAG,WACrC,IAAIV,EAAS,IAAI,CAACC,SAAS,GAC3B,GAAID,EAEA,CAAA,IAAK,IADDhB,EAAWgB,EAAOhB,QAAQ,CACrByB,EAAI,IAAI,CAACE,iBAAiB,CAAG,EAAGF,GAAK,EAAGA,IAC7C,GAAIzB,CAAQ,CAACyB,EAAE,EAAIzB,CAAQ,CAACyB,EAAE,CAACH,KAAK,CAACC,OAAO,CACxC,OAAOvB,CAAQ,CAACyB,EAAE,AAE1B,CAER,EAOAjC,EAActB,SAAS,CAACoC,gBAAgB,CAAG,WAEvC,IAAK,IADDN,EAAW,IAAI,CAACA,QAAQ,CACnByB,EAAI,EAAGA,EAAIzB,EAASoB,MAAM,CAAEK,IACjC,GAAIzB,CAAQ,CAACyB,EAAE,CAACH,KAAK,CAACC,OAAO,CACzB,OAAOvB,CAAQ,CAACyB,EAAE,AAG9B,EAOAjC,EAActB,SAAS,CAACuC,iBAAiB,CAAG,WAExC,IAAK,IADDT,EAAW,IAAI,CAACA,QAAQ,CACnByB,EAAIzB,EAASoB,MAAM,CAAG,EAAGK,GAAK,EAAGA,IACtC,GAAIzB,CAAQ,CAACyB,EAAE,CAACH,KAAK,CAACC,OAAO,CACzB,OAAOvB,CAAQ,CAACyB,EAAE,AAG9B,EAQAjC,EAActB,SAAS,CAAC+C,SAAS,CAAG,WAChC,OAAO,IAAI,CAACW,UAAU,AAC1B,EAOApC,EAActB,SAAS,CAAC2D,aAAa,CAAG,WAEpC,IAAK,IADD7B,EAAW,IAAI,CAACA,QAAQ,CACnByB,EAAI,EAAGA,EAAIzB,EAASoB,MAAM,CAAEK,IACjC,GAAIzB,CAAQ,CAACyB,EAAE,CAACH,KAAK,CAACC,OAAO,CACzB,OAAOvB,CAAQ,CAACyB,EAAE,AAG9B,EACOjC,CACX,EA7KkB,AAACd,IAA2IoD,WAAW,CAACC,OAAO,CAAC7D,SAAS,CAAC8D,SAAS,EAsLjMC,EAA+FjF,EAAoB,KACnHkF,EAAsG,WAAW,EAAElF,EAAoBI,CAAC,CAAC6E,GAYzIE,GACItF,EAAgB,SAAUU,CAAC,CAAEuB,CAAC,EAI9B,MAAOjC,AAHPA,CAAAA,EAAgBe,OAAOmB,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU1B,CAAC,CAAEuB,CAAC,EAAIvB,EAAEyB,SAAS,CAAGF,CAAG,GAC1E,SAAUvB,CAAC,CAAEuB,CAAC,EAAI,IAAK,IAAII,KAAKJ,EAAOlB,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACU,EAAGI,IAAI3B,CAAAA,CAAC,CAAC2B,EAAE,CAAGJ,CAAC,CAACI,EAAE,AAAD,CAAG,CAAA,EAC/E3B,EAAGuB,EAC5B,EACO,SAAUvB,CAAC,CAAEuB,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIK,UAAU,uBAAyBC,OAAON,GAAK,iCAE7D,SAASO,IAAO,IAAI,CAACC,WAAW,CAAG/B,CAAG,CADtCV,EAAcU,EAAGuB,GAEjBvB,EAAEW,SAAS,CAAGY,AAAM,OAANA,EAAalB,OAAO2B,MAAM,CAACT,GAAMO,CAAAA,EAAGnB,SAAS,CAAGY,EAAEZ,SAAS,CAAE,IAAImB,CAAG,CACtF,GAIA+C,EAAe,AAAC1D,IAA2IoD,WAAW,CAACC,OAAO,CAAC7D,SAAS,CAACmE,UAAU,CAEnMC,EAAW,AAAC9D,IAA+E8D,QAAQ,CAAEC,EAAY,AAAC/D,IAA+E+D,SAAS,CAAEC,EAAQ,AAAChE,IAA+EgE,KAAK,CAUzSC,EAAgC,SAAUhD,CAAM,EAEhD,SAASgD,IAML,IAAI/C,EAAQD,AAAW,OAAXA,GAAmBA,EAAOE,KAAK,CAAC,IAAI,CAAEC,YAAc,IAAI,CAIpE,OAHAF,EAAMgD,iBAAiB,CAAG,CAAA,EAC1BhD,EAAMiD,MAAM,CAAG,CAAA,EACfjD,EAAMkD,QAAQ,CAAG,AAACV,IAAuGhE,SAAS,CAAC0E,QAAQ,CACpIlD,CACX,CAkHA,OA9HAyC,EAAuBM,EAAgBhD,GAkBvCgD,EAAevE,SAAS,CAAC2E,IAAI,CAAG,WAC5BpD,EAAOvB,SAAS,CAAC2E,IAAI,CAAClD,KAAK,CAAC,IAAI,CAAEC,WAElC,IAAIkD,EAAU,IAAI,CAACA,OAAO,CACtBA,GACAA,EAAQC,OAAO,CAAC,CACZC,WAAY,IAAI,CAACzB,OAAO,CAAG,UAAY,QAC3C,GAEJ,IAAI,CAAC0B,oBAAoB,EAC7B,EACAR,EAAevE,SAAS,CAAC+E,oBAAoB,CAAG,WAC5C,IAAkBC,EAAS5B,AAAf,IAAI,CAAiB4B,MAAM,CAAEC,EAAc7B,AAA3C,IAAI,CAA6CwB,OAAO,EAAIxB,AAA5D,IAAI,CAA8DwB,OAAO,CAACK,WAAW,CAAEC,EAAeF,EAAOG,iBAAiB,CAAC/B,AAA/H,IAAI,CAAiIgC,IAAI,CAACC,KAAK,EAAI,EAAE,EAAI,CAAC,EAAGC,EAAahB,EAAMU,EAAOO,OAAO,CAACC,cAAc,CAAEN,EAAaM,cAAc,CAAEpC,AAA5O,IAAI,CAA8OmC,OAAO,CAACC,cAAc,EAAGC,EAAQH,EAAWG,KAAK,CAAEC,EAASJ,EAAWI,MAAM,CAAEC,EAAQL,EAAWK,KAAK,CAAEC,EAAQN,EAAWM,KAAK,CAAeC,EAAQ,IAAI,CAACb,MAAM,CAACa,KAAK,CAAEC,EAAoB,AAAC1C,AAAlb,IAAI,CAAobC,OAAO,EACtcD,CAAAA,AADO,IAAI,CACLlB,SAAS,EACZ,CAACoD,EAAWS,WAAW,EACvB3C,AAAgB,UAAhBA,AAHI,IAAI,CAGF4C,KAAK,AAAW,EAAM,EAAI,EACxC,GAAK5C,AAJO,IAAI,CAIL6C,SAAS,EAIpB,GADA,IAAI,CAACC,qBAAqB,CAAGZ,EACxBlC,AARO,IAAI,CAQLoC,cAAc,EAqCrB,GAAI,AAACpC,AA7CG,IAAI,CA6CDgC,IAAI,CAACtD,QAAQ,CAACoB,MAAM,EAAKoC,EAAWa,OAAO,CAIjD,CACD,IAAIC,EAAK,IAAI,CAACC,sBAAsB,CAACf,GAAagB,EAAIF,EAAGE,CAAC,CAAEC,EAAIH,EAAGG,CAAC,CACpEnD,AAnDI,IAAI,CAmDFoC,cAAc,CACfgB,IAAI,CAAC,CACNC,KAAMrD,AArDN,IAAI,CAqDQlB,SAAS,CAAG,IAAM,IAC9BwE,SAAUb,EAAMc,QAAQ,CAAG,GAAK,EAChCC,gBAAiBnB,EAAQ,EACzBoB,gBAAiBnB,EAAS,EAC1BZ,WAAY1B,AAzDZ,IAAI,CAyDcC,OAAO,CAAG,UAAY,QAC5C,GACKwB,OAAO,CAAC,CACTyB,EAAGA,EACHC,EAAGA,EACHO,QAAShB,CACb,EACJ,MAlBI1C,AA9CI,IAAI,CA8CFoC,cAAc,CAACuB,OAAO,GAC5B,OAAO3D,AA/CH,IAAI,CA+CKoC,cAAc,KAvCR,CACvB,GAAI,CAACpC,AATG,IAAI,CASDgC,IAAI,CAACtD,QAAQ,CAACoB,MAAM,EAAI,CAACoC,EAAWa,OAAO,CAClD,OAEJ,IAAIlD,EAAK,IAAI,CAACoD,sBAAsB,CAACf,GAAagB,EAAIrD,EAAGqD,CAAC,CAAEC,EAAItD,EAAGsD,CAAC,CAAES,EAAQ1B,EAAW2B,SAAS,EAC9F7D,AAbI,IAAI,CAaF8D,KAAK,EACX,SACJ9D,CAfQ,IAAI,CAeNoC,cAAc,CAAGK,EAAMsB,QAAQ,CAChCC,KAAK,CAAChE,AAhBH,IAAI,CAgBKlB,SAAS,CAAG,IAAM,IAAKoE,EAAGC,EAAGZ,GACzCa,IAAI,CAAC,CACNd,OAAQA,EAAS,EACjBD,MAAOA,EAAQ,EACf4B,QApBmY,EAqBnYL,KAAMA,EACNN,SAAUb,EAAMc,QAAQ,CAAG,GAAK,EAChCC,gBAAiBnB,EAAQ,EACzBoB,gBAAiBnB,EAAS,EAC1B4B,OAAQhC,EAAWiC,SAAS,EAAI,UAChC,eAAgBjC,EAAWkC,SAAS,CACpC,aAAc,SACdC,MAAO,SACPC,OAAQ,EACRZ,QAAShB,EACThB,WAAY1B,AA/BR,IAAI,CA+BUC,OAAO,CAAG,UAAY,QAC5C,GACKsE,QAAQ,CAAC,sBACTA,QAAQ,CAAC,8BACTC,WAAW,CAAC,yBACZC,GAAG,CAACvD,EAAM,CACX4C,MAAO,AAAgB,UAAhB,OAAOF,EACVnB,EAAMsB,QAAQ,CAACW,WAAW,CAACd,GAC3B,SACR,EAAGpB,IACEmC,GAAG,CAAC9C,GACT7B,AA1CQ,IAAI,CA0CNoC,cAAc,CAACwC,OAAO,CAAC5E,KAAK,CA1C1B,IAAI,AA2ChB,EAuBJ,EACAmB,EAAevE,SAAS,CAACiI,cAAc,CAAG,SAAUjC,CAAK,EACrD,IAAIhB,EAAS,IAAI,CAACA,MAAM,CACxB,IAAI,CAACkD,MAAM,CAAC,CACRhG,UAAW8D,MAAAA,EAAqCA,EAAQ,CAAC,IAAI,CAAC9D,SAAS,AAC3E,EAAG,CAAA,EAAO,KAAK,EAAG,CAAA,GAClBmC,EAAUW,EAAQ,kBAClBA,EAAOmD,MAAM,EACjB,EACA5D,EAAevE,SAAS,CAAC+G,OAAO,CAAG,WAC3B,IAAI,CAACvB,cAAc,GACnB,IAAI,CAACA,cAAc,CAACuB,OAAO,GAC3B,OAAO,IAAI,CAACvB,cAAc,CAC1B,IAAI,CAACA,cAAc,CAAG,KAAK,GAE3B,IAAI,CAAC4C,YAAY,GACjB,IAAI,CAACA,YAAY,CAACrB,OAAO,GACzB,OAAO,IAAI,CAACqB,YAAY,EAE5B7G,EAAOvB,SAAS,CAAC+G,OAAO,CAACtF,KAAK,CAAC,IAAI,CAAEC,UACzC,EACA6C,EAAevE,SAAS,CAACqG,sBAAsB,CAAG,SAAUf,CAAU,EAClE,IAA8CqB,EAAWd,AAA/BzC,AAAd,IAAI,CAAgB4B,MAAM,CAACa,KAAK,CAAmBc,QAAQ,CAAE0B,EAAW/C,EAAWG,KAAK,CAAE6C,EAAYhD,EAAWI,MAAM,CAAEzC,EAAKG,AAA9H,IAAI,CAAgI6C,SAAS,EAAI,CAAC,EAAGG,EAAKnD,EAAGqD,CAAC,CAA8BiC,EAAKtF,EAAGsD,CAAC,CAA8BiC,EAAKvF,EAAGwC,KAAK,CAAkCgD,EAAKxF,EAAGyC,MAAM,CAC5S,MAAO,CACHY,EAAGA,AAFyKF,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAG7Ld,EAAWgB,CAAC,CACXK,CAAAA,EAAW,CAAA,CAAA,AAAa,GAAZ2B,CAAc,EAAI7C,AAJ+N+C,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAI5OH,AAAW,IAAXA,CAAc,EACzD9B,EAAGA,AALgNgC,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAKjO7C,AAL4S+C,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAKxT,EAAIH,EAAY,EAAIhD,EAAWiB,CAAC,AACpD,CACJ,EACOhC,CACX,EAAEL,GACFE,EAASG,EAAgB,WAAY,WACjC,IAAImE,EAAM,IAAI,CAAClD,cAAc,CAAEF,EAAa,IAAI,CAACY,qBAAqB,CAClEwC,GAAQpD,CAAAA,MAAAA,EAA+C,KAAK,EAAIA,EAAWS,WAAW,AAAD,GAAM,CAAC,IAAI,CAAC7D,SAAS,EAC1GwG,EAAI7D,OAAO,CAAC,CAAEiC,QAAS,CAAE,EAEjC,GACA1C,EAASG,EAAgB,YAAa,WAClC,IAAItB,EAAImD,CACJ,CAAA,IAAI,CAACZ,cAAc,EAAI,IAAI,CAACnC,OAAO,EACnC,IAAI,CAACmC,cAAc,CAACX,OAAO,CAAC,CAAEiC,QAAS,CAAE,EAAG,AAA2F,OAA1FV,CAAAA,EAAK,AAAsC,OAArCnD,CAAAA,EAAK,IAAI,CAAC+B,MAAM,CAACO,OAAO,CAACoD,MAAM,AAAD,GAAe1F,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG2F,KAAK,AAAD,GAAexC,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGyC,SAAS,CAE5L,GAEAzE,EAASG,EAAgB,QAAS,WAC9B,IAAI,CAAC0D,cAAc,EACvB,GASmGnJ,EAAoB,KAAvH,IAiBqGgK,GAAxF,AAACxI,IAA+EyI,MAAM,CAAY,AAACzI,IAA+EwI,OAAO,EAAEE,EAAW,AAAC1I,IAA+E0I,QAAQ,CAAEC,EAAW,AAAC3I,IAA+E2I,QAAQ,CAAEC,EAAsB,AAAC5I,IAA+EgE,KAAK,CAAE6E,EAAO,AAAC7I,IAA+E6I,IAAI,CAAEC,EAAiB,AAAC9I,IAA+E8I,cAAc,GAgE3sB,SAAyBC,CAAM,EAC3B,IACIC,EAAUC,EAAWhG,EAAGiG,EAAMC,EAAIC,EADlCC,EAAS,CAAC,EAEd,GAAIV,EAASI,GA2BT,IA1BAG,EAAOR,EAASK,EAAOG,IAAI,EAAIH,EAAOG,IAAI,CAAG,EAC7CE,EAASL,EAAOK,MAAM,CACtBH,EAAY,CAAC,EACbD,EAAWL,EAASI,EAAOC,QAAQ,EAAID,EAAOC,QAAQ,CAAG,CAAC,EACtDR,EAAQY,IACRH,CAAAA,EAAYG,EAAOE,MAAM,CAAC,SAAU9J,CAAG,CAAE+J,CAAI,EACzC,IAAIxE,EAAOyE,EAAiBvE,EAgB5B,OAfI0D,EAASY,IAASb,EAASa,EAAKxE,KAAK,IAErCyE,EAAkBX,EAAK5D,AADvBA,CAAAA,EAAU2D,EAAoB,CAAC,EAAGW,EAAI,EACPC,eAAe,CAAER,EAASQ,eAAe,EAExE,OAAOvE,EAAQuE,eAAe,CAC9B,OAAOvE,EAAQF,KAAK,CAGhB4D,EAASnJ,CAAG,CADhBuF,EAAQwE,EAAKxE,KAAK,CAAIyE,CAAAA,EAAkB,EAAIN,EAAO,CAAA,EAC5B,EACnBN,EAAoB,CAAA,EAAMpJ,CAAG,CAACuF,EAAM,CAAEE,GAGtCzF,CAAG,CAACuF,EAAM,CAAGE,GAGdzF,CACX,EAAG,CAAC,EAAC,EAET2J,EAAKT,EAASK,EAAOI,EAAE,EAAIJ,EAAOI,EAAE,CAAG,EAClClG,EAAI,EAAGA,GAAKkG,EAAIlG,IACjBoG,CAAM,CAACpG,EAAE,CAAG2F,EAAoB,CAAC,EAAGI,EAAUL,EAASM,CAAS,CAAChG,EAAE,EAAIgG,CAAS,CAAChG,EAAE,CAAG,CAAC,GAG/F,OAAOoG,CACX,IAyEA,SAAsB3E,CAAM,CAAE+E,CAAW,EACrC,IAAIlE,EAAQb,EAAOa,KAAK,CAAEN,EAAUP,EAAOO,OAAO,CAAEtC,EAAKsC,EAAQyE,YAAY,CAAEA,EAAe/G,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAImD,EAAKb,EAAQ0E,SAAS,CAAEA,EAAY7D,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAImC,EAAK1C,EAAMqE,SAAS,CAAEA,EAAY3B,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAGxO,GAAI0B,AAAc,SAAdA,EAAsB,CACtB,GAAI,AAAwB,UAAxB,OAAOD,GAA6B,KAAKG,IAAI,CAACH,GAE9C,OAAOE,EADgDH,CAAAA,EAAcK,AAAtDC,WAAWL,GAAgB,IAAuCD,CAAAA,EAAc,CAAA,CAAC,EAGpG,IAAIO,EAAYC,OAAOP,GACvB,MAAO,AAAEE,CAAAA,EAAYI,CAAQ,EACxBP,CAAAA,GAAe,CAAA,EAAMO,CAC9B,CACA,OAAOlB,EAAea,EAAWC,EACrC,IApCA,SAAsBlF,CAAM,EACxB,IAAIwF,EAAQjF,EAaZ,OAZI0D,EAASjE,KAETO,EAAU0D,EAASjE,EAAOO,OAAO,EAAIP,EAAOO,OAAO,CAAG,CAAC,EAEvDiF,EAASrB,EAAKnE,EAAOyF,QAAQ,CAAElF,EAAQiF,MAAM,CAAE,IAE3CvB,EAASjE,EAAO0F,WAAW,GAC3B1F,CAAAA,EAAO0F,WAAW,CAACF,MAAM,CAAGA,CAAK,EAGrCxF,EAAOyF,QAAQ,CAAGD,GAEfA,CACX,EA+CIG,GACIhM,EAAgB,SAAUU,CAAC,CAAEuB,CAAC,EAI9B,MAAOjC,AAHPA,CAAAA,EAAgBe,OAAOmB,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU1B,CAAC,CAAEuB,CAAC,EAAIvB,EAAEyB,SAAS,CAAGF,CAAG,GAC1E,SAAUvB,CAAC,CAAEuB,CAAC,EAAI,IAAK,IAAII,KAAKJ,EAAOlB,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACU,EAAGI,IAAI3B,CAAAA,CAAC,CAAC2B,EAAE,CAAGJ,CAAC,CAACI,EAAE,AAAD,CAAG,CAAA,EAC/E3B,EAAGuB,EAC5B,EACO,SAAUvB,CAAC,CAAEuB,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIK,UAAU,uBAAyBC,OAAON,GAAK,iCAE7D,SAASO,IAAO,IAAI,CAACC,WAAW,CAAG/B,CAAG,CADtCV,EAAcU,EAAGuB,GAEjBvB,EAAEW,SAAS,CAAGY,AAAM,OAANA,EAAalB,OAAO2B,MAAM,CAACT,GAAMO,CAAAA,EAAGnB,SAAS,CAAGY,EAAEZ,SAAS,CAAE,IAAImB,CAAG,CACtF,GAIAyJ,EAAqB,AAACtK,IAA+E6I,IAAI,CAAE0B,EAAuB,AAACvK,IAA+EyI,MAAM,CAYxN+B,EAA2B,SAAUvJ,CAAM,EAO3C,SAASuJ,EAAU9F,CAAM,CAAEO,CAAO,CAAEe,CAAC,CAAElD,CAAK,EACxC,IAAI5B,EAAQD,EAAOrB,IAAI,CAAC,IAAI,CAAE8E,EAAQO,EAASe,IAAM,IAAI,CAkBzD,OAZA9E,EAAMuJ,eAAe,CAAG,CAAA,EACxBvJ,EAAMwJ,YAAY,CAAG,OACrBxJ,EAAMiD,MAAM,CAAG,CAAA,EACfjD,EAAM4D,IAAI,CAAG,CAAC,EACd5D,EAAMwJ,YAAY,CAAG,OACrBxJ,EAAMuJ,eAAe,CAAG,CAAA,EACpB3H,IACA5B,EAAMyJ,QAAQ,CAAG7H,EAAMgC,IAAI,CAAC1B,UAAU,CAACN,KAAK,CAC5C5B,EAAM6B,OAAO,CAAGD,EAAMC,OAAO,CAC7B7B,EAAM0J,MAAM,CAAG9H,EACf5B,EAAM2J,EAAE,CAAG3J,EAAM0J,MAAM,CAACC,EAAE,CAAG,IAAM3J,EAAMyJ,QAAQ,CAACE,EAAE,EAEjD3J,CACX,CAmBA,OA7CAmJ,EAAsBG,EAAWvJ,GAgCjCuJ,EAAU9K,SAAS,CAACkI,MAAM,CAAG,SAAU3C,CAAO,CAAE4C,CAAM,CAAEU,CAAS,CAAEuC,CAAQ,EACvE,IAAIC,EAAa,CACbF,GAAI,IAAI,CAACA,EAAE,CACXH,aAAc,IAAI,CAACA,YAAY,AACnC,EACAhH,IAAsGhE,SAAS,CAACkI,MAAM,CAAChI,IAAI,CAAC,IAAI,CAAEqF,EAAS,CAAA,IAAI,CAACd,MAAM,EAAW0D,EACjKU,EAAWuC,GACX,IAAI,CAAC/H,OAAO,CAAG,IAAI,CAAC6H,MAAM,CAAC7H,OAAO,CAClCwH,EAAqB,IAAI,CAAEQ,GACvBT,EAAmBzC,EAAQ,CAAA,IAC3B,IAAI,CAACnD,MAAM,CAACa,KAAK,CAACsC,MAAM,CAACU,EAEjC,EACOiC,CACX,EAzDkB,AAACtK,IAA2IoD,WAAW,CAAC0H,MAAM,CAACtL,SAAS,CAACmE,UAAU,EAsFjMoH,EAAiC,WACjC,SAASA,IACT,CAgTA,OA7RAA,EAAgBC,eAAe,CAAG,SAAU1I,CAAM,CAAEK,CAAK,CAAEsI,CAAO,EAE9D,IAAIC,EAAY,IA3iBoCpK,EA8jBpD,OAlBAoK,EAAUP,EAAE,CAAGrI,EAAOqI,EAAE,CAAG,IAAMM,EACjCC,EAAU9I,QAAQ,CAAGE,EAGrB4I,EAAU5J,QAAQ,CAAC6J,IAAI,CAACxI,GACxBuI,EAAU5I,MAAM,CAAGA,EAAOqI,EAAE,CAC5BO,EAAUhI,UAAU,CAAGZ,EACvB4I,EAAUtI,KAAK,CAAGD,EAAMC,KAAK,CAC7BsI,EAAUrG,KAAK,CAAGlC,EAAMkC,KAAK,CAAGoG,EAChCC,EAAUjI,iBAAiB,CAAGN,EAAMM,iBAAiB,CACrDiI,EAAUrI,OAAO,CAAGF,EAAME,OAAO,CAEjCP,EAAOhB,QAAQ,CAACqB,EAAMM,iBAAiB,CAAC,CAAGiI,EAC3CvI,EAAMyI,aAAa,CAAG9I,EACtBK,EAAMM,iBAAiB,CAAG,EAE1BN,EAAMO,UAAU,CAAGgI,EACnBvI,EAAML,MAAM,CAAG4I,EAAUP,EAAE,CACpBO,CACX,EAWAH,EAAgBvL,SAAS,CAAC6L,kBAAkB,CAAG,SAAU7G,CAAM,EAE3D,IAAI8G,EAAQ9G,EAAO+G,QAAQ,CAC3B,IAAI,CAACC,WAAW,CAACF,GACjB,IAAIhO,EAAOkH,EAAOiH,IAAI,CAClBnO,IACAoO,AALa,IAAI,CAKNC,kBAAkB,CAACrO,EAAM,GACpCoO,AANa,IAAI,CAMNE,YAAY,CAACN,GACxBI,AAPa,IAAI,CAONG,SAAS,CAACvO,GACrBoO,AARa,IAAI,CAQNI,UAAU,CAACxO,EAAM,CAACA,EAAKiE,IAAI,EACtCmK,AATa,IAAI,CASNK,WAAW,CAACT,GAE/B,EAOAP,EAAgBvL,SAAS,CAACoM,YAAY,CAAG,SAAUN,CAAK,EACpD,IAAK,IAAI9I,EAAK,EAAoBA,EAAKwJ,AAAZV,EAAoB5I,MAAM,CAAEF,IAEnD,IAAK,IADDoC,EAAOoH,AADYV,CACL,CAAC9I,EAAG,CACbC,EAAK,EAAGmD,EAAKhB,EAAKtD,QAAQ,CAAEmB,EAAKmD,EAAGlD,MAAM,CAAED,IAAM,CACvD,IAAIE,EAAQiD,CAAE,CAACnD,EAAG,CAElB,GAAIE,GAASA,EAAMkC,KAAK,CAAGD,EAAKC,KAAK,CAAG,EAKpC,IAFA,IAAIoG,EAAUtI,EAAMkC,KAAK,CAAGD,EAAKC,KAAK,CAAG,EAElCoG,EAAU,GACbtI,EAAQoI,EAAgBC,eAAe,CAACpG,EAAMjC,EAAOsI,GACrDA,GAGZ,CAER,EAKAF,EAAgBvL,SAAS,CAACgM,WAAW,CAAG,SAAUF,CAAK,EACnD,IAAK,IAAI9I,EAAK,EAAoBA,EAAKyJ,AAAZX,EAAoB5I,MAAM,CAAEF,IAAM,CACzD,IAAIoC,EAAOqH,AADYX,CACL,CAAC9I,EAAG,AACtBoC,CAAAA,EAAKzD,GAAG,CAAG,EACXyD,EAAKxC,QAAQ,CAAGwC,EAChBA,EAAKxD,KAAK,CAAG,EACbwD,EAAK/C,MAAM,CAAG,KAAK,EACnB+C,EAAKvD,MAAM,CAAG,EACduD,EAAKrD,IAAI,CAAG,CAChB,CACJ,EAUAwJ,EAAgBvL,SAAS,CAACmM,kBAAkB,CAAG,SAAU/G,CAAI,CAAEsH,CAAK,EAEhE,IAAK,IADkB5K,EAAWsD,EAAKtD,QAAQ,CACtCyB,EAAI,EAAGoJ,EAAO7K,EAASoB,MAAM,CAAEK,EAAIoJ,EAAM,EAAEpJ,EAChD2I,AAFa,IAAI,CAENC,kBAAkB,CAACrK,CAAQ,CAACyB,EAAE,CAAEA,EAE/C6B,CAAAA,EAAK3B,iBAAiB,CAAGiJ,CAC7B,EAQAnB,EAAgBvL,SAAS,CAACqM,SAAS,CAAG,SAAUjH,CAAI,EAChD,IAGIwH,EAEJ,GAAKxH,EAAK9B,WAAW,GAUhB,CAKD,IAAK,IADDZ,EAAkB0C,EAAKhD,gBAAgB,GAClCY,EAAK,EAAGC,EAAKmC,EAAKtD,QAAQ,CAAEkB,EAAKC,EAAGC,MAAM,CAAEF,IAAM,CACvD,IAAIG,EAAQF,CAAE,CAACD,EAAG,CAClBkJ,AAtBS,IAAI,CAsBFG,SAAS,CAAClJ,GACrBT,EAAkBwJ,AAvBT,IAAI,CAuBgBW,SAAS,CAAC1J,EAAOT,EAClD,CACAwJ,AAzBa,IAAI,CAyBNY,aAAa,CAAC1H,GACzB,IAAI2H,EAAY3H,EAAKhD,gBAAgB,GAAI4K,EAAa5H,EAAK7C,iBAAiB,GAI5E0K,EAAW,AAACF,CAAAA,EAAUhL,IAAI,CAAGiL,EAAWjL,IAAI,AAAD,EAAK,EAChD6K,CAAAA,EAAcxH,EAAK5B,cAAc,EAAC,GAE9B4B,EAAKrD,IAAI,CAAG6K,EAAY7K,IAAI,CA/BlB,EAgCVqD,EAAKzD,GAAG,CAAGyD,EAAKrD,IAAI,CAAGkL,GAGvB7H,EAAKrD,IAAI,CAAGkL,CAEpB,KAjCIL,CAAAA,EAAcxH,EAAK5B,cAAc,EAAC,GAE9B4B,EAAKrD,IAAI,CAAG6K,EAAY7K,IAAI,CANlB,EAOVqD,EAAKzD,GAAG,CAAGyD,EAAKrD,IAAI,EAGpBqD,EAAKrD,IAAI,CAAG,CA4BxB,EAUAwJ,EAAgBvL,SAAS,CAACsM,UAAU,CAAG,SAAUlH,CAAI,CAAE8H,CAAM,EAKzD9H,EAAK+H,SAAS,CAAG/H,EAAKrD,IAAI,CAAGmL,EAC7B9H,EAAKgI,SAAS,CAAGhI,EAAKC,KAAK,CAC3B,IAAK,IAAIrC,EAAK,EAAGC,EAAKmC,EAAKtD,QAAQ,CAAEkB,EAAKC,EAAGC,MAAM,CAAEF,IAAM,CACvD,IAAIG,EAAQF,CAAE,CAACD,EAAG,CAClBkJ,AARa,IAAI,CAQNI,UAAU,CAACnJ,EAAO+J,EAAS9H,EAAKzD,GAAG,CAClD,CACJ,EAOA4J,EAAgBvL,SAAS,CAAC8M,aAAa,CAAG,SAAU1H,CAAI,EAEpD,IAAK,IADDxD,EAAQ,EAAGC,EAAS,EACf0B,EAAI6B,EAAKtD,QAAQ,CAACoB,MAAM,CAAG,EAAGK,GAAK,EAAGA,IAAK,CAChD,IAAI8J,EAAYjI,EAAKtD,QAAQ,CAACyB,EAAE,AAChC8J,CAAAA,EAAUtL,IAAI,EAAIH,EAClByL,EAAU1L,GAAG,EAAIC,EACjBC,GAAUwL,EAAUxL,MAAM,CAC1BD,GAASyL,EAAUzL,KAAK,CAAGC,CAC/B,CACJ,EAkBA0J,EAAgBvL,SAAS,CAAC6M,SAAS,CAAG,SAAUzH,CAAI,CAAE1C,CAAe,EACjE,IAAuBkK,EAAcxH,EAAK5B,cAAc,GACxD,GAAIoJ,EAAa,CAEb,IADA,IAAIU,EAAelI,EAAMmI,EAAenI,EAAM3C,EAAcmK,EAAaY,EAAcF,EAAazK,kBAAkB,GAAI4K,EAAcH,EAAa3L,GAAG,CAAE+L,EAAcH,EAAa5L,GAAG,CAAEgM,EAAalL,EAAYd,GAAG,CAAEiM,EAAaJ,EAAY7L,GAAG,CAC7Oc,GACHA,EAAYH,SAAS,IACrBgL,GACAA,EAAanL,QAAQ,IAAI,CACzBM,EAAcA,EAAYH,SAAS,GACnCkL,EAAcA,EAAYrL,QAAQ,GAClCmL,EAAeA,EAAanL,QAAQ,GAEpCoL,AADAA,CAAAA,EAAeA,EAAajL,SAAS,EAAC,EACzBM,QAAQ,CAAGwC,EACxB,IAAyBxD,EAAQa,EAAYV,IAAI,CAC7C4L,EACCL,CAAAA,EAAavL,IAAI,CAAG0L,CAAU,EAFb,EAIlB7L,EAAQ,IACRsK,AAjBK,IAAI,CAiBE2B,WAAW,CAACzI,EAAK5C,WAAW,CAACC,EAAaC,GAAkB0C,EAAMxD,GAC7E6L,GAAe7L,EACf8L,GAAe9L,GAEnB+L,GAAclL,EAAYd,GAAG,CAC7B8L,GAAeH,EAAa3L,GAAG,CAC/BiM,GAAcJ,EAAY7L,GAAG,CAC7B+L,GAAeH,EAAa5L,GAAG,AACnC,CACIc,GACAA,EAAYH,SAAS,IACrB,CAACiL,EAAajL,SAAS,KACvBiL,EAAalL,MAAM,CAAGI,EAAYH,SAAS,GAC3CiL,EAAa5L,GAAG,EAAIgM,EAAaD,GAEjCJ,GACAA,EAAanL,QAAQ,IACrB,CAACqL,EAAYrL,QAAQ,KACrBqL,EAAYnL,MAAM,CAAGiL,EAAanL,QAAQ,GAC1CqL,EAAY7L,GAAG,EAAI8L,EAAcG,GAErClL,EAAkB0C,CACtB,CACA,OAAO1C,CACX,EASA6I,EAAgBvL,SAAS,CAAC6N,WAAW,CAAG,SAAUC,CAAQ,CAAEC,CAAS,CAAEnM,CAAK,EACxE,IAAIoM,EAAWD,EAAUtK,iBAAiB,CAAGqK,EAASrK,iBAAiB,AACvEsK,CAAAA,EAAUlM,MAAM,EAAID,EAAQoM,EAC5BD,EAAUnM,KAAK,EAAIA,EACnBmM,EAAUhM,IAAI,EAAIH,EAClBmM,EAAUpM,GAAG,EAAIC,EACjBkM,EAASjM,MAAM,EAAID,EAAQoM,CAC/B,EAOAzC,EAAgBvL,SAAS,CAACuM,WAAW,CAAG,SAAUT,CAAK,EACnD,IAAK,IAAI9I,EAAK,EAAoBA,EAAKiL,AAAZnC,EAAoB5I,MAAM,CAAEF,IAAM,CACzD,IAAIoC,EAAO6I,AADYnC,CACL,CAAC9I,EAAG,AAClBoC,CAAAA,EAAKwG,aAAa,GAElBxG,EAAK3B,iBAAiB,CAAG2B,EAAK1B,UAAU,CAACD,iBAAiB,CAC1D2B,EAAKtC,MAAM,CAAGsC,EAAKwG,aAAa,CAAC9I,MAAM,CACvCsC,EAAK1B,UAAU,CAAG0B,EAAKwG,aAAa,CAEpC,OAAOxG,EAAKwG,aAAa,CAAC9J,QAAQ,CAACsD,EAAK3B,iBAAiB,CAAC,CAC1D2B,EAAKwG,aAAa,CAAC9J,QAAQ,CAACsD,EAAK3B,iBAAiB,CAAC,CAAG2B,EACtDA,EAAKwG,aAAa,CAAG,KAAK,EAElC,CACJ,EACOL,CACX,IAoSiC2C,EAjPH,CAa1BC,SAAU,CAAA,EAKVC,OAAQ,CACJC,OAAQ,GACR7G,UAAW,EACX8G,OAAQ,SACRC,YAAa,EACb5F,OAAQ,CAAC,CACb,EACA6F,KAAM,CAkBFtH,MAAO,UAOPM,UAAW,EAOX6G,OAAQ,GACRI,OAAQ,UAWRC,KAAM,QACV,EAKAlJ,eAAgB,CAMZO,YAAa,CAAA,EAIbI,QAAS,CAAA,EAITqB,UAAW,EAIXlB,EAAG,EAIHC,EAAG,EAIHb,OAAQ,GAIRD,MAAO,GAIPE,MAAO,SAOPC,MAAO,CACH6I,OAAQ,UACRE,WAAY,OACZC,SAAU,KACd,CACJ,EAUAC,UAAW,CAAA,EAIXC,QAAS,CAeLC,WAAY,0CACZC,YAAa,YAUjB,EAUAC,WAAY,CACRC,MAAO,CAAA,EAePC,aAAc,CACVC,WAAY,CACRC,YAAa,KACjB,CACJ,EACAlJ,QAAS,CAAA,EACTmJ,cAAe,WAAc,MAAO,EAAI,EACxC1J,MAAO,CACH2J,aAAc,MAClB,CACJ,EAoBAvF,aAAc,GAiBdC,UAAW,KAAK,CACpB,EASIuF,EAAmH1Q,EAAoB,IACvI2Q,EAA0H,WAAW,EAAE3Q,EAAoBI,CAAC,CAACsQ,GAgB7JE,EAAU,AAACpP,IAA+EoP,OAAO,CACjGC,EAAoB,AAACrP,IAA+E8D,QAAQ,CAAEwL,EAAiB,AAACtP,IAA+EgE,KAAK,CAAEuL,EAAY,AAACvP,IAA+EuP,SAAS,CAAEC,EAAU,AAACxP,IAA+EwP,OAAO,CAAEC,EAAkB,AAACzP,IAA+EyI,MAAM,CAyB5gB,SAASiH,EAAYC,CAAI,CAAEC,CAAe,EACtC,IAAI1O,EAAQ,IAAI,CAEhB0O,EAAkBN,EAAe,CAAA,EAAM,CACnCzJ,QAAS,CAAA,EACTiJ,WAAY,CACRe,GAAI,GACJd,YAAa,MACbe,WAAY,QAChB,CACJ,EAAGF,GACH,IAAIG,EAAM,IAAI,CAAClJ,QAAQ,CAACkJ,GAAG,CAAEC,EAAc,IAAI,CAAC7J,IAAI,EAAI,IAAI,CAAE8J,EAAWD,EAAYC,QAAQ,CAAEnB,EAAac,EAAgBd,UAAU,CAAEjJ,EAAU+J,EAAgB/J,OAAO,CAMzK,GALA8J,EAAOA,GAASM,GAAYA,EAASN,IAAI,CAErCM,GACAA,EAASC,IAAI,GAEbP,GAAQ9J,EAAS,CACjB,IAAIqK,EAAOb,EAAkBW,EAAa,kBAAmB,SAAUG,CAAC,EACpE,GAAIR,GAAQ9J,EAAS,CAEjB,IAAIuK,EAAaT,EAAKzJ,IAAI,CAAC,MACtBkK,GACDT,EAAKzJ,IAAI,CAAC,KAAMkK,EAAab,KAGjC,IAAIc,EAAc,CAGdrK,EAAG,EACHC,EAAG,CACP,EACIuJ,EAAQV,EAAWwB,EAAE,IACrBD,EAAYC,EAAE,CAAGxB,EAAWwB,EAAE,CAC9B,OAAOxB,EAAWwB,EAAE,EAEpBd,EAAQV,EAAWe,EAAE,IACrBQ,EAAYR,EAAE,CAAGf,EAAWe,EAAE,CAC9B,OAAOf,EAAWe,EAAE,EAExBG,EAAY9J,IAAI,CAACmK,GAEjBnP,EAAMgF,IAAI,CAAC,CAAEqK,UAAW,EAAG,GACvBrP,EAAMsP,GAAG,EACTtP,CAAAA,EAAMsP,GAAG,CAAGtP,EAAMsP,GAAG,CAAC/J,OAAO,EAAC,EAGlC,IAAIjF,EAAW2O,EAAE3E,KAAK,CAACiF,KAAK,CAAC,EAC7BN,CAAAA,EAAE3E,KAAK,CAAC5I,MAAM,CAAG,EACjBuN,EAAE3E,KAAK,CAAC,EAAE,CAAG,CACTkF,QAAS,WACT5B,WAAYW,EAAgBX,EAAY,CACpC,cAAeA,EAAWgB,UAAU,CACpCa,KAAM,GAAGC,MAAM,CAACb,EAAK,KAAKa,MAAM,CAACR,EACrC,GACA5O,SAAUA,CACd,CACJ,CACJ,EAEAwO,CAAAA,EAAYC,QAAQ,CAAG,CAAEN,KAAMA,EAAMO,KAAMA,CAAK,CACpD,MAEIF,EAAY9J,IAAI,CAAC,CAAEoK,GAAI,EAAGT,GAAI,CAAE,GAChC,OAAOG,EAAYC,QAAQ,CAO/B,OALI,IAAI,CAACY,KAAK,GAEVb,EAAYc,SAAS,CAAG,GACxB,IAAI,CAACjK,QAAQ,CAACkK,SAAS,CAACf,IAErB,IAAI,AACf,CAWA,SAASgB,GAAWC,CAAK,EAErB,IADItO,EACAuO,EAAOD,EAAMC,IAAI,CAAEC,EAAK,AAAwB,OAAvBxO,CAAAA,EAAK,IAAI,CAAC+E,OAAO,AAAD,GAAe/E,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGyO,aAAa,CAAC,YACtG,GAAID,EAAI,CAuBJ,IAAK,IAtBDE,EAAU,EAAE,CAAEvL,EAAK,IAAI,CAACe,QAAQ,CAACyK,WAAW,CAAC,IAAI,CAAC5J,OAAO,EAAG6J,EAAMzL,EAAGxF,CAAC,CAAYkR,EAAcC,AAApB3L,EAAG2L,CAAC,CAAoBF,EAAKG,EAAmB,AAAIC,OAAO,gEAExH,KAAMC,EAAQT,EAC5BU,SAAS,CACTC,OAAO,CAACJ,EAAkB,IAC1BK,KAAK,CAAC,sCAAuCC,EAAaJ,EAAMhP,MAAM,CAIvEqP,EAAqB,SAAUC,CAAS,CAAEC,CAAc,EACxD,IAAInM,EAAImM,EAAenM,CAAC,CAAEC,EAAIkM,EAAelM,CAAC,CAAEG,EAAW,AAAC+K,CAAAA,EAAGiB,iBAAiB,CAACF,GAAa,EAAC,EAAK9C,EAASiD,EAASC,KAAKC,GAAG,CAACnM,GAAWoM,EAASF,KAAKG,GAAG,CAACrM,GAC5J,MAAO,CACH,CACIJ,EAAIwL,EAAca,EAClBpM,EAAIuL,EAAcgB,EACrB,CACD,CACIxM,EAAIuL,EAAMc,EACVpM,EAAIsL,EAAMiB,EACb,CACJ,AACL,EACSvP,EAAI,EAAGyP,EAAY,EAAGA,EAAYV,EAAYU,IAAa,CAEhE,IAAK,IADwBC,EAAUC,AAA5BhB,CAAK,CAACc,EAAU,CAAiB9P,MAAM,CACzCiQ,EAAgB,EAAGA,EAAgBF,EAASE,GAAiB,EAClE,GAAI,CACA,IAAIC,EAAgB7P,EAChB4P,EACAH,EAAYzK,EAAKgK,EAAmBa,EAAc3B,EAAG4B,sBAAsB,CAACD,IAAgBE,EAAQ/K,CAAE,CAAC,EAAE,CAAEgL,EAAQhL,CAAE,CAAC,EAAE,AACxH4K,AAAkB,CAAA,IAAlBA,GACAxB,EAAQhG,IAAI,CAAC4H,GACb5B,EAAQhG,IAAI,CAAC2H,KAGK,IAAdN,GACArB,EAAQ6B,OAAO,CAACD,GAEhBP,IAAcV,EAAa,GAC3BX,EAAQhG,IAAI,CAAC2H,GAGzB,CACA,MAAO7C,EAAG,CAGN,KACJ,CAEJlN,GAAK0P,EAAU,EACf,GAAI,CACA,IAAIG,EAAe7P,EAAIyP,EAAWS,EAAUhC,EAAGiC,oBAAoB,CAACN,GAAe5K,EAAK+J,EAAmBa,EAAcK,GAAUH,EAAQ9K,CAAE,CAAC,EAAE,CAAE+K,EAAQ/K,CAAE,CAAC,EAAE,CAC/JmJ,EAAQ6B,OAAO,CAACD,GAChB5B,EAAQ6B,OAAO,CAACF,EACpB,CACA,MAAO7C,EAAG,CAGN,KACJ,CACJ,CAEIkB,EAAQzO,MAAM,EACdyO,EAAQhG,IAAI,CAACgG,CAAO,CAAC,EAAE,CAACZ,KAAK,IAEjCS,EAAKG,OAAO,CAAGA,CACnB,CACA,OAAOH,CACX,CAWA,SAASmC,GAAapC,CAAK,EAEvB,IADItO,EACA2Q,EAAerC,EAAMqC,YAAY,CAAExQ,EAAQmO,EAAMnO,KAAK,CAAE8M,EAAmB0D,CAAY,CAACxQ,EAAM4H,YAAY,CAAG,WAAW,EACxH4I,EAAarD,QAAQ,CACrBL,GAAmB,CAAC0D,EAAaC,OAAO,GACxC,IAAI,CAAC7D,WAAW,CAAC,AAAC,CAAA,AAAkC,OAAjC/M,CAAAA,EAAKG,EAAM0Q,gBAAgB,AAAD,GAAe7Q,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG/C,IAAI,CAACkD,EAAO,IAAI,CAAA,GAAMA,EAAMwB,OAAO,CAAEsL,GACzH9M,EAAM2Q,aAAa,EACnB,CAAC7D,EAAgB/J,OAAO,EAExB/C,CAAAA,EAAM2Q,aAAa,CAAI3Q,EAAM2Q,aAAa,CAAChN,OAAO,EAAE,EAGhE,CAyBA,IAAIiN,IACIrV,EAAgB,SAAUU,CAAC,CAAEuB,CAAC,EAI9B,MAAOjC,AAHPA,CAAAA,EAAgBe,OAAOmB,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAU1B,CAAC,CAAEuB,CAAC,EAAIvB,EAAEyB,SAAS,CAAGF,CAAG,GAC1E,SAAUvB,CAAC,CAAEuB,CAAC,EAAI,IAAK,IAAII,KAAKJ,EAAOlB,OAAOM,SAAS,CAACC,cAAc,CAACC,IAAI,CAACU,EAAGI,IAAI3B,CAAAA,CAAC,CAAC2B,EAAE,CAAGJ,CAAC,CAACI,EAAE,AAAD,CAAG,CAAA,EAC/E3B,EAAGuB,EAC5B,EACO,SAAUvB,CAAC,CAAEuB,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIK,UAAU,uBAAyBC,OAAON,GAAK,iCAE7D,SAASO,IAAO,IAAI,CAACC,WAAW,CAAG/B,CAAG,CADtCV,EAAcU,EAAGuB,GAEjBvB,EAAEW,SAAS,CAAGY,AAAM,OAANA,EAAalB,OAAO2B,MAAM,CAACT,GAAMO,CAAAA,EAAGnB,SAAS,CAAGY,EAAEZ,SAAS,CAAE,IAAImB,CAAG,CACtF,GAGA8S,GAvsDc,CACd,QAOJ,SAAwBC,CAAU,EAC9B,IAAIC,EAAKD,EAAWC,EAAE,CAAEC,EAAKF,EAAWE,EAAE,CAAEC,EAAKH,EAAWG,EAAE,CAAEC,EAAKJ,EAAWI,EAAE,CAAErR,EAAKiR,EAAWzO,KAAK,CAAEA,EAAQxC,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAImD,EAAK8N,EAAWvN,QAAQ,CAAEA,EAAWP,AAAO,KAAK,IAAZA,GAAwBA,EAAIiI,EAAS6F,EAAW7F,MAAM,CAAEkG,EAAgBL,EAAWK,aAAa,CAC5QtE,EAAO,CACP,CAAC,IAAKkE,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKH,EAAIG,EAAG,CACb,CAAC,IAAKH,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKH,EAAIG,EAAG,CAChB,CACD,OAAOC,EACHC,AAoDR,SAAqBvE,CAAI,CAAEwE,CAAC,EAExB,IAAK,IADDpV,EAAI,EAAE,CACDkE,EAAI,EAAGA,EAAI0M,EAAK/M,MAAM,CAAEK,IAAK,CAClC,IAAI+C,EAAI2J,CAAI,CAAC1M,EAAE,CAAC,EAAE,CACdgD,EAAI0J,CAAI,CAAC1M,EAAE,CAAC,EAAE,CAClB,GAAI,AAAa,UAAb,OAAO+C,GAAkB,AAAa,UAAb,OAAOC,GAEhC,GAAIhD,AAAM,IAANA,EACAlE,EAAEsM,IAAI,CAAC,CAAC,IAAKrF,EAAGC,EAAE,OAEjB,GAAIhD,IAAM0M,EAAK/M,MAAM,CAAG,EACzB7D,EAAEsM,IAAI,CAAC,CAAC,IAAKrF,EAAGC,EAAE,OAGjB,GAAIkO,EAAG,CACR,IAAIC,EAAUzE,CAAI,CAAC1M,EAAI,EAAE,CACrBoR,EAAU1E,CAAI,CAAC1M,EAAI,EAAE,CACzB,GAAImR,GAAWC,EAAS,CACpB,IAAIR,EAAKO,CAAO,CAAC,EAAE,CAAEN,EAAKM,CAAO,CAAC,EAAE,CAAEL,EAAKM,CAAO,CAAC,EAAE,CAAEL,EAAKK,CAAO,CAAC,EAAE,CAEtE,GAAI,AAAc,UAAd,OAAOR,GACP,AAAc,UAAd,OAAOE,GACP,AAAc,UAAd,OAAOD,GACP,AAAc,UAAd,OAAOE,GACPH,IAAOE,GACPD,IAAOE,EAAI,CACX,IAAIM,EAAaT,EAAKE,EAAK,EAAI,GAAIQ,EAAaT,EAAKE,EAAK,EAAI,GAC9DjV,EAAEsM,IAAI,CAAC,CACH,IACArF,EAAIsO,EAAahC,KAAKkC,GAAG,CAAClC,KAAKmC,GAAG,CAACzO,EAAI6N,GAAKM,GAC5ClO,EAAIsO,EAAajC,KAAKkC,GAAG,CAAClC,KAAKmC,GAAG,CAACxO,EAAI6N,GAAKK,GAC/C,CAAE,CACC,IACAnO,EACAC,EACAD,EACAC,EACAD,EAAIsO,EAAahC,KAAKkC,GAAG,CAAClC,KAAKmC,GAAG,CAACzO,EAAI+N,GAAKI,GAC5ClO,EAAIsO,EAAajC,KAAKkC,GAAG,CAAClC,KAAKmC,GAAG,CAACxO,EAAI+N,GAAKG,GAC/C,CACL,CACJ,CAEJ,MAEIpV,EAAEsM,IAAI,CAAC,CAAC,IAAKrF,EAAGC,EAAE,EAG9B,CACA,OAAOlH,CACX,EAtGoB,CACR,CAAC,IAAK8U,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAK1O,EAASkB,CAAAA,EAAW,IAAO,EAAE,EAAIyN,EAAG,CAC/C,CAAC,IAAKD,EAAK1O,EAASkB,CAAAA,EAAW,IAAO,EAAE,EAAI2N,EAAG,CAC/C,CAAC,IAAKD,EAAIC,EAAG,CAChB,CAAEjG,GACH4B,CACR,EAxBI+E,SA4BJ,SAAyBd,CAAU,EAC/B,IAAIC,EAAKD,EAAWC,EAAE,CAAEC,EAAKF,EAAWE,EAAE,CAAEC,EAAKH,EAAWG,EAAE,CAAEC,EAAKJ,EAAWI,EAAE,CAAErR,EAAKiR,EAAWzO,KAAK,CAAkCW,EAAK8N,EAAWvN,QAAQ,CACnK,OAAO4N,AADqNL,EAAWK,aAAa,CAC7N,CACnB,CAAC,IAAKJ,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAK1O,AAHoGxC,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAGhH0D,CAAAA,AAHwJP,AAAO,KAAK,IAAZA,GAAwBA,EAGrK,GAAK,CAAA,EAAIkO,EAAG,CAC3C,CAAC,IAAKD,EAAIC,EAAG,CAChB,CAAG,CACA,CAAC,IAAKH,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIG,EAAG,CACb,CAAC,IAAKH,EAAIG,EAAG,CAChB,AACL,EAtCIW,OA0CJ,SAAuBf,CAAU,EAC7B,IAAIC,EAAKD,EAAWC,EAAE,CAAEC,EAAKF,EAAWE,EAAE,CAAEC,EAAKH,EAAWG,EAAE,CAAEC,EAAKJ,EAAWI,EAAE,CAAErR,EAAKiR,EAAWgB,MAAM,CAAEA,EAASjS,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAImD,EAAK8N,EAAWzO,KAAK,CAAEA,EAAQW,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAImC,EAAK2L,EAAWvN,QAAQ,CAAEA,EAAW4B,AAAO,KAAK,IAAZA,GAAwBA,EACjQ,OAAOgM,AAD8QL,EAAWK,aAAa,CAEzS,CACI,CAAC,IAAKJ,EAAIC,EAAG,CACb,CACI,IACAD,EAAKe,EACLd,EACAD,EAAKe,EAASzP,EAASkB,CAAAA,EAAW,GAAK,CAAA,EACvC2N,EACAH,EAAK1O,EAASkB,CAAAA,EAAW,GAAK,CAAA,EAC9B2N,EACH,CACD,CAAC,IAAKD,EAAIC,EAAG,CAChB,CACD,CACI,CAAC,IAAKH,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKD,EAAIC,EAAG,CAChB,AACT,CA9DA,EAqsDIa,GAAc,AAAC3U,IAA2IwE,MAAM,CAAChF,SAAS,CAAEiD,GAAK,AAACzC,IAA2IoD,WAAW,CAAEwR,GAAgBnS,GAAGY,OAAO,CAAEwR,GAAepS,GAAGqI,MAAM,CAE9XgK,GAAU,AAAC5U,IAA+HV,SAAS,CAACsV,OAAO,CAM3JC,GAAW,AAACjV,IAA+EiV,QAAQ,CAAEC,GAAQ,AAAClV,IAA+EkV,KAAK,CAAEC,GAAyB,AAACnV,IAA+EyI,MAAM,CAAE2M,GAAwB,AAACpV,IAA+EgE,KAAK,CAAEqR,GAAuB,AAACrV,IAA+E6I,IAAI,CAAEyM,GAAiC,AAACtV,IAA+E8I,cAAc,CAAEyM,GAAQ,AAACvV,IAA+EuV,KAAK,CAMnvBC,AAhDe,CAAA,CACXC,QATJ,SAAiBC,CAAe,EAC5BrG,EAAkBqG,EAAiB,eAAgB1E,IACnD3B,EAAkBqG,EAAiB,wBAAyBrC,IAC5D,IAAIsC,EAAkBD,EAAgBhW,SAAS,AAC1CiW,CAAAA,EAAgBjG,WAAW,EAC5BiG,CAAAA,EAAgBjG,WAAW,CAAGA,CAAU,CAEhD,CAGA,CAAA,EA8CoB+F,OAAO,CAAEtG,KAe7B,IAAIyG,GAAiC,SAAU3U,CAAM,EAEjD,SAAS2U,IAML,IAAI1U,EAAQD,AAAW,OAAXA,GAAmBA,EAAOE,KAAK,CAAC,IAAI,CAAEC,YAAc,IAAI,CAGpE,OAFAF,EAAMuK,QAAQ,CAAG,EAAE,CACnBvK,EAAM2U,KAAK,CAAG,EAAE,CACT3U,CACX,CAqZA,OAhaAwS,GAAwBkC,EAAiB3U,GAiBzC2U,EAAgBlW,SAAS,CAACoW,IAAI,CAAG,WAC7B7U,EAAOvB,SAAS,CAACoW,IAAI,CAAC3U,KAAK,CAAC,IAAI,CAAEC,WAClC,IAAI,CAAC2U,eAAe,CAAG,IAzlB+B9K,EA4lBtD,IAAIvG,EAAS,IAAI,CAAEsR,EAAa,IAAI,CAACzQ,KAAK,CAAC0Q,eAAe,CAerDD,EAAWE,IAAI,CAAC,SAAUC,CAAC,EAAI,MAAOA,AAAW,kBAAXA,EAAEC,IAAI,AAAsB,IACnEJ,EAAW3K,IAAI,CAhByD,WACxE,IAAIgL,EAAa,EAAE,CAEnB,GAAI3R,EAAOO,OAAO,CAAC0J,UAAU,EACzB,CAAC4G,GAAM7Q,EAAOO,OAAO,CAAC0J,UAAU,CAAC,CAAC,EAAE,CAAC2H,YAAY,CACjD,IAAK,IAAI5T,EAAK,EAAGC,EAAM+B,EAAOmR,KAAK,EAAI,EAAE,CAAGnT,EAAKC,EAAGC,MAAM,CAAEF,IAAM,CAC9D,IAAIwL,EAAOvL,CAAE,CAACD,EAAG,AACbwL,CAAAA,EAAKqI,SAAS,EACdF,EAAWhL,IAAI,CAAC6C,EAAKqI,SAAS,CAEtC,CAEJ,OAAOF,CACX,EAKJ,EAOAT,EAAgBlW,SAAS,CAAC8W,kBAAkB,CAAG,WAC3C,IAAItV,EAAQ,IAAI,CACZqE,EAAQ,IAAI,CAACA,KAAK,CAAEb,EAAS,IAAI,CAAEkF,EAAYrE,EAAMqE,SAAS,CAAE6M,EAAYlR,EAAMkR,SAAS,CAAEhN,EAAcwL,GAAS,IAAI,CAACyB,MAAM,CAACC,GAAG,CAAC,SAAUjW,CAAC,EAAI,OAAOA,EAAEoE,IAAI,CAACgI,SAAS,AAAE,IAC5K8J,EAAOC,IAAUC,EAAO,CAACD,IAAUE,EAAOF,IAAUG,EAAO,CAACH,IAAUI,EAAW,EAAGC,EAAW,EAAGC,EAAW,EAAGC,EAAW,EAC/H,IAAI,CAACV,MAAM,CAACW,OAAO,CAAC,SAAUvU,CAAK,EAI/B,GAAI5B,CAAAA,EAAM+D,OAAO,CAACsJ,SAAS,EAAKzL,EAAMC,OAAO,EAG7C,IANIJ,EAMAmC,EAAOhC,EAAMgC,IAAI,CAAEC,EAAQL,EAAOG,iBAAiB,CAAC/B,EAAMgC,IAAI,CAACC,KAAK,CAAC,EAAI,CAAC,EAAGuS,EAAgBlC,GAAsBlU,EAAM+D,OAAO,CAAC6I,MAAM,CAAE/I,EAAM+I,MAAM,CAAEhL,EAAMmC,OAAO,CAAC6I,MAAM,EAAGnE,EAAY,AAA+B,OAA9BhH,CAAAA,EAAK2U,EAAcnS,KAAK,AAAD,GAAexC,AAAO,KAAK,IAAZA,EAAgBA,EAAK4U,EAA6BrW,EAAOuI,GAAcsE,EAASuH,GAA+BgC,EAAcvJ,MAAM,EAAI,EAAGuE,KAAKkC,GAAG,CAAC5K,EAAW6M,IAAazI,EAASsJ,EAActJ,MAAM,CAAEwJ,EAAY,AAACxJ,AAAW,WAAXA,GAAwBsJ,EAAclS,MAAM,CAEpekQ,GAA+BgC,EAAclS,MAAM,CAAEqR,GADrD1I,AAAS,EAATA,EACiE0J,EAAYzJ,AAAW,WAAXA,GAAwBrE,EAErG2L,GAA+B3L,EAAWC,GAD1CmE,AAAS,EAATA,CAEJjJ,CAAAA,EAAK2S,SAAS,CAAGA,EACjB3S,EAAK0S,SAAS,CAAGA,EAEb1S,EAAKgI,SAAS,EAAI8J,IAClBA,EAAO9R,EAAKgI,SAAS,CAErBoK,EAAW5E,KAAKoF,GAAG,CAACD,EADRH,CAAAA,EAAcpQ,SAAS,EAAI,CAAA,EACIgQ,IAE3CpS,EAAKgI,SAAS,EAAIgK,IAClBA,EAAOhS,EAAKgI,SAAS,CAErBmK,EAAW3E,KAAKoF,GAAG,CAACD,EADRH,CAAAA,EAAcpQ,SAAS,EAAI,CAAA,EACI+P,IAE3CnS,EAAK+H,SAAS,EAAIkK,IAClBA,EAAOjS,EAAK+H,SAAS,CAErBuK,EAAW9E,KAAKoF,GAAG,CAACF,EADRF,CAAAA,EAAcpQ,SAAS,EAAI,CAAA,EACIkQ,IAE3CtS,EAAK+H,SAAS,EAAImK,IAClBA,EAAOlS,EAAK+H,SAAS,CAErBsK,EAAW7E,KAAKoF,GAAG,CAACF,EADRF,CAAAA,EAAcpQ,SAAS,EAAI,CAAA,EACIiQ,IAEnD,GAGA,IAAIQ,EAAKX,IAASD,EACd,EACA,AAACN,CAAAA,EAAY,AAACW,CAAAA,EAAWD,CAAO,EAAK,CAAA,EAAMH,CAAAA,EAAOD,CAAG,EAAIa,EAAKZ,IAASD,EAAON,EAAY,EAAI,CAACkB,EAAKZ,EAAOK,EAAW,EAAGS,EAAKf,IAASF,EACvI,EACA,AAAChN,CAAAA,EAAY,AAACqN,CAAAA,EAAWA,CAAO,EAAK,CAAA,EAAMH,CAAAA,EAAOF,CAAG,EAAIkB,EAAKhB,IAASF,EAAOhN,EAAY,EAAI,CAACiO,EAAKjB,EAAOM,EAAW,EAC1H,MAAO,CAAEW,GAAIA,EAAIC,GAAIA,EAAIH,GAAIA,EAAIC,GAAIA,CAAG,CAC5C,EACAhC,EAAgBlW,SAAS,CAACqY,QAAQ,CAAG,WACjC,IAAI7W,EAAQ,IAAI,CACZwD,EAAS,IAAI,CACbmR,EAAQ,EAAE,CAyBd,OAxBA,IAAI,CAACmC,IAAI,CAACX,OAAO,CAAC,SAAUvU,CAAK,EAC7B,IAAI8B,EAAeF,EAAOG,iBAAiB,CAAC/B,EAAMgC,IAAI,CAACC,KAAK,EAAI,EAAE,EAAI,CAAC,EACvE,GAAIjC,EAAMgC,IAAI,CAACtC,MAAM,CAAE,CACnB,IAAIyV,EAAe7C,GAAsBxQ,EAAc9B,EAAMmC,OAAO,EACpE,GAAI,CAACnC,EAAMgF,YAAY,EAAIhF,EAAMgF,YAAY,CAACoQ,SAAS,CAAE,CACrD,IAAIhK,EAAO,IAAIxJ,EAAOyT,SAAS,CAACzT,EAAQuT,EAAc,KAAK,EAAGnV,EAC9DA,CAAAA,EAAMgF,YAAY,CAAGoG,CACzB,MAGIpL,EAAMlB,SAAS,CAAGyT,GAAqBvS,EAAMlB,SAAS,CAAE,AAACV,CAAAA,EAAM2D,iBAAiB,CAAC/B,EAAMgC,IAAI,CAACC,KAAK,CAAC,EAAI,CAAC,CAAA,EAAGnD,SAAS,EACnHkB,EAAMgF,YAAY,CAAC/E,OAAO,CACtBD,EAAMgF,YAAY,CAAC8C,MAAM,CAAC7H,OAAO,AAEzCD,CAAAA,EAAMgF,YAAY,CAACsE,KAAK,CAAGyJ,EAAMxK,IAAI,CAACvI,EAAMgF,YAAY,EAAI,CAChE,MAEQhF,EAAMgF,YAAY,GAClBpD,EAAOmR,KAAK,CAACuC,MAAM,CAACtV,EAAMgF,YAAY,CAACsE,KAAK,EAC5CtJ,EAAMgF,YAAY,CAACrB,OAAO,GAC1B,OAAO3D,EAAMgF,YAAY,CAGrC,GACO+N,CACX,EACAD,EAAgBlW,SAAS,CAAC2Y,SAAS,CAAG,SAAUxN,CAAE,CAAEuB,CAAK,CAAErH,CAAK,CAAEuT,CAAI,CAAE9V,CAAM,EAC1E,IAAIM,EAAQ,IAAI,CAAC4T,MAAM,CAACtK,EAAM,CAE9B,OADArH,EAAQ,AAACjC,GAASA,EAAMiC,KAAK,EAAKA,EAC3B9D,EAAOvB,SAAS,CAAC2Y,SAAS,CAACzY,IAAI,CAAC,IAAI,CAAEiL,EAAIuB,EAAOrH,EAAOuT,EAAM9V,EACzE,EACAoT,EAAgBlW,SAAS,CAAC6Y,aAAa,CAAG,WAGtC,MAAO,CAAC,CACZ,EACA3C,EAAgBlW,SAAS,CAAC8Y,kBAAkB,CAAG,SAAU1T,CAAI,CAAEN,CAAU,EACrE,IAAItD,EAAQ,IAAI,CACZ4B,EAAQgC,EAAKhC,KAAK,CAClBA,IAEAA,EAAMlB,SAAS,CAAGyT,GAAqBvS,EAAMlB,SAAS,CAAE,AAAC,CAAA,IAAI,CAACiD,iBAAiB,CAACC,EAAKC,KAAK,CAAC,EAAI,CAAC,CAAA,EAAGnD,SAAS,EAC5GkB,EAAMC,OAAO,CAAGyB,EAChBA,EAAaA,AAAe,CAAA,IAAfA,GAA+B,CAAC1B,EAAMlB,SAAS,EAEhEkD,EAAKtD,QAAQ,CAAC6V,OAAO,CAAC,SAAUtK,CAAS,EACrC7L,EAAMsX,kBAAkB,CAACzL,EAAWvI,EACxC,EACJ,EACAoR,EAAgBlW,SAAS,CAAC+Y,WAAW,CAAG,WACpC1D,GAAarV,SAAS,CAAC+Y,WAAW,CAACtX,KAAK,CAAC,IAAI,CAAEC,WAC/C2T,GAAarV,SAAS,CAAC+Y,WAAW,CAAC7Y,IAAI,CAAC,IAAI,CAAE,IAAI,CAACiW,KAAK,CAC5D,EAKAD,EAAgBlW,SAAS,CAACgZ,SAAS,CAAG,WAClC,IAGwDvO,EAHpDjJ,EAAQ,IAAI,CACG+D,EAAUP,AAAhB,IAAI,CAAmBO,OAAO,CAEvCiF,EAASyO,EAFA,IAAI,EAIjB9D,GAAY6D,SAAS,CAAC9Y,IAAI,CAJb,IAAI,EAKjB,IAAI+L,EAAOjH,AALE,IAAI,CAKCiH,IAAI,CAAGjH,AALZ,IAAI,CAKekU,OAAO,GACvCzO,EAAWzF,AANE,IAAI,CAMCmU,OAAO,CAAC3O,EAAO,CAClB,KAAXA,GAAkB,AAACC,GAAaA,EAAS3I,QAAQ,CAACoB,MAAM,GACxD8B,AARS,IAAI,CAQNoU,WAAW,CAAC,GAAI,CAAA,GACvB5O,EAASxF,AATA,IAAI,CASGyF,QAAQ,CACxBA,EAAWzF,AAVF,IAAI,CAUKmU,OAAO,CAAC3O,EAAO,EAErCxF,AAZa,IAAI,CAYVG,iBAAiB,CAAGkU,EAAgC,CACvD7P,KAAMiB,EAASpF,KAAK,CAAG,EACvBqE,OAAQnE,EAAQmE,MAAM,CACtBD,GAAIwC,EAAKvG,MAAM,CACf4D,SAAU,CACNQ,gBAAiB9E,AAjBZ,IAAI,CAiBeO,OAAO,CAACuE,eAAe,CAC/CwP,aAAc/T,EAAQ+T,YAAY,AACtC,CACJ,GACA,IAAI,CAACR,kBAAkB,CAAC7M,EAAM,CAAA,GAC9BjH,AAtBa,IAAI,CAsBVmR,KAAK,CAAGnR,AAtBF,IAAI,CAsBKqT,QAAQ,GAC9BrT,AAvBa,IAAI,CAuBVuU,aAAa,CAACtN,GACrB,IAAI,CAACoK,eAAe,CAACxK,kBAAkB,CAxB1B,IAAI,EAyBjB7G,AAzBa,IAAI,CAyBVwU,cAAc,CAAG,IAAI,CAAC1C,kBAAkB,GAC/C,IAAI,CAACE,MAAM,CAACW,OAAO,CAAC,SAAUvU,CAAK,EAC/B5B,EAAMiY,aAAa,CAACrW,EACxB,GACA,IAAI,CAAC4T,MAAM,CAACW,OAAO,CAAC,SAAUvU,CAAK,EAC3BA,EAAMgF,YAAY,EAClB5G,EAAMkY,aAAa,CAACtW,EAAMgF,YAAY,CAE9C,GACK7C,EAAQ+T,YAAY,EACrBtU,AAnCS,IAAI,CAmCN2U,iBAAiB,CAAC3U,AAnChB,IAAI,CAmCmBiH,IAAI,CAE5C,EACAiK,EAAgBlW,SAAS,CAAC0Z,aAAa,CAAG,SAAUlL,CAAI,EAEpD,IADIvL,EAAImD,EAAImC,EAAIC,EAAIC,EAChBwC,EAAWuD,EAAKvD,QAAQ,CAAEC,EAASsD,EAAKtD,MAAM,CAAE0O,EAAY,AAAC,CAAA,AAA6B,OAA5B3W,CAAAA,EAAK,IAAI,CAACsC,OAAO,CAACiJ,IAAI,AAAD,GAAevL,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGuE,SAAS,AAAD,GAAM,EAAGqS,EAASlE,GAAqB,AAA6B,OAA5BvP,CAAAA,EAAK,IAAI,CAACb,OAAO,CAACiJ,IAAI,AAAD,GAAepI,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG0T,WAAW,CAAE,IAAMpL,EAAOiH,GAAqB,AAA6B,OAA5BpN,CAAAA,EAAKiG,EAAKjJ,OAAO,CAACiJ,IAAI,AAAD,GAAejG,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGmG,IAAI,CAAE,AAA6B,OAA5BlG,CAAAA,EAAK,IAAI,CAACjD,OAAO,CAACiJ,IAAI,AAAD,GAAehG,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGkG,IAAI,CAAE,WAC/a,GAAIzD,EAAShF,SAAS,EAAIiF,EAAOjF,SAAS,CAAE,CACxC,IAAI8T,EAAiB9O,EAAShF,SAAS,CAACR,KAAK,EAAI,EAAIkB,EAAW,IAAI,CAACd,KAAK,CAACc,QAAQ,CAAEyN,EAAKoB,GAAM,AAACvK,CAAAA,EAAShF,SAAS,CAACM,CAAC,EAAI,CAAA,EACrH,AAAC0E,CAAAA,EAAShF,SAAS,CAACP,MAAM,EAAI,CAAA,EAAK,EAAGkU,GAAYtF,EAAKkB,GAAM,AAACtK,CAAAA,EAAOjF,SAAS,CAACM,CAAC,EAAI,CAAA,EACpF,AAAC2E,CAAAA,EAAOjF,SAAS,CAACP,MAAM,EAAI,CAAA,EAAK,EAAGkU,GACpCzF,EAAKqB,GAAM,AAACvK,CAAAA,EAAShF,SAAS,CAACK,CAAC,EAAI,CAAA,EAAKyT,EAAeH,GAAYvF,EAAKmB,GAAMtK,EAAOjF,SAAS,CAACK,CAAC,EAAI,EAAGsT,GACxGjT,IACAwN,GAAM4F,EACN1F,GAAOnJ,EAAOjF,SAAS,CAACR,KAAK,EAAI,GAErC,IAAIuU,EAAO9O,EAAO9F,IAAI,CAACgI,SAAS,CAAGnC,EAAS7F,IAAI,CAACgI,SAAS,AAC1DoB,CAAAA,EAAKyL,SAAS,CAAG,OACjB,IAAmDxU,EAAQ,AAA3CmN,CAAAA,KAAKmC,GAAG,CAACV,EAAKF,GAAM4F,CAAY,EAAwBC,EAAQD,EAC5EG,EAAU1E,GAAM,AAACnB,CAAAA,EAAKF,CAAC,EAAK,EAAGyF,EACnCpL,CAAAA,EAAK2L,KAAK,CAAGD,EACb1L,EAAK4L,KAAK,CAAG9F,EACb9F,EAAKvI,SAAS,CAAG,CACb5G,EAAG4U,EAA2B,CAACvF,EAAK,CAAC,CACjCyF,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJ7O,MAAOA,EACPyP,OAXgGzP,EAAQoU,EAAUlT,CAAAA,EAAW,GAAK,CAAA,EAYlIA,SAAUA,EACV4N,cAAerJ,EAAO7H,OAAO,CAC7BgL,OAAQ,AAA6B,OAA5B5F,CAAAA,EAAK,IAAI,CAAClD,OAAO,CAACiJ,IAAI,AAAD,GAAe/F,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG4F,MAAM,AACnF,EACJ,EACAG,EAAK6L,KAAK,CAAG,CACT/T,EAAG,AAAC6N,CAAAA,EAAKE,CAAC,EAAK,EACf9N,EAAG,AAAC6N,CAAAA,EAAKE,CAAC,EAAK,EACf5O,OAAQkU,EACRnU,MAAO,CACX,EACA+I,EAAK8L,UAAU,CAAG3T,EAAW,CACzB,AAAC,CAAA,IAAI,CAACd,KAAK,CAACkR,SAAS,EAAI,CAAA,EAAKvI,EAAK6L,KAAK,CAAC9T,CAAC,CAC1C,AAAC,CAAA,IAAI,CAACV,KAAK,CAACqE,SAAS,EAAI,CAAA,EAAKsE,EAAK6L,KAAK,CAAC/T,CAAC,CAC7C,CAAG,CACAkI,EAAK6L,KAAK,CAAC/T,CAAC,CACZkI,EAAK6L,KAAK,CAAC9T,CAAC,CACf,AACL,CACJ,EAKA2P,EAAgBlW,SAAS,CAACua,cAAc,CAAG,SAAUvD,CAAM,EAKvD,IAAK,IAJD/T,EACAmD,EAAImC,EAAIC,EAERjD,EAASF,EADMF,EAAoBH,AAA1B,IAAI,CAA6BG,iBAAiB,CAEtDnC,EAAK,EAAsBA,EAAKwX,AAAbxD,EAAsB9T,MAAM,CAAEF,IAAM,CAC5D,IAAII,EAAQoX,AADYxD,CACJ,CAAChU,EAAG,CAUxB,GATAqC,EAAQF,CAAiB,CAAC/B,EAAMgC,IAAI,CAACC,KAAK,CAAC,CAE3CE,EAAU,CAAEK,MAAO,CAAC,CAAE,EAElBP,GAASA,EAAM4J,UAAU,GACzB1J,EAAUmQ,GAAsBnQ,EAASF,EAAM4J,UAAU,EACzDjK,AAVK,IAAI,CAUFyV,aAAa,CAAG,WAAc,MAAO,CAAA,CAAM,GAGlDrX,EAAM6C,SAAS,EACfjB,AAdK,IAAI,CAcFO,OAAO,CAAC0J,UAAU,CAAE,CAC3B,IAAIpH,EAAM,CAAC,EACPY,EAAKrF,EAAM6C,SAAS,CAAEyU,EAAKjS,EAAGhD,KAAK,CAAEA,EAAQiV,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKlS,EAAG/C,MAAM,CAAEA,EAASiV,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAClH3V,CAjBC,IAAI,CAiBEa,KAAK,CAACc,QAAQ,EACrB1D,CAAAA,AAAsBwC,EAAQxC,AAA9BA,CAAAA,EAAK,CAACyC,EAAQD,EAAM,AAAD,CAAa,CAAC,EAAE,CAAEC,EAASzC,CAAE,CAAC,EAAE,AAAD,EAEhD,CAAA,AAAqD,OAApDmD,CAAAA,EAAKyP,GAAM7Q,AApBb,IAAI,CAoBgBO,OAAO,CAAC0J,UAAU,CAAC,CAAC,EAAE,CAACrJ,KAAK,AAAD,GAAeQ,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGX,KAAK,AAAD,GAC/FoC,CAAAA,EAAIpC,KAAK,CAAG,GAAGyL,MAAM,CAACzL,EAAO,KAAI,EAE/B,CAAA,AAAqD,OAApD8C,CAAAA,EAAKsN,GAAM7Q,AAvBb,IAAI,CAuBgBO,OAAO,CAAC0J,UAAU,CAAC,CAAC,EAAE,CAACrJ,KAAK,AAAD,GAAe2C,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGqS,SAAS,AAAD,GACnG/S,CAAAA,EAAI+S,SAAS,CAAGhI,KAAKiI,KAAK,CAACnV,EAAS,GAAE,EAE1C+P,GAAuBlQ,EAAQK,KAAK,CAAEiC,GACtC,AAA2B,OAA1BW,CAAAA,EAAKpF,EAAMyT,SAAS,AAAD,GAAerO,AAAO,KAAK,IAAZA,GAAyBA,EAAGX,GAAG,CAACA,EACvE,CAEAzE,EAAM0X,SAAS,CAAGpF,GAAsBnQ,EAASnC,EAAMmC,OAAO,CAAC0J,UAAU,CAC7E,CACAkG,GAAY4F,cAAc,CAAC7a,IAAI,CAAC,IAAI,CAAE8W,EAC1C,EAMAd,EAAgBlW,SAAS,CAACgb,cAAc,CAAG,SAAU5X,CAAK,CAAEyT,CAAS,EACjE,IAAIxT,EAAUD,EAAMC,OAAO,AAE3BD,CAAAA,EAAMC,OAAO,CAAG,CAAA,EAChB9B,EAAOvB,SAAS,CAACgb,cAAc,CAACvZ,KAAK,CAAC,IAAI,CAAEC,WAE5CmV,EAAUhS,OAAO,CAAC,CACdiC,QAASzD,AAAY,CAAA,IAAZA,EAAoB,EAAI,CACrC,EAAG,KAAK,EAAG,WAEPA,GAAWwT,EAAUoE,IAAI,EAC7B,GAEA7X,EAAMC,OAAO,CAAGA,CACpB,EAKA6S,EAAgBlW,SAAS,CAAC+a,cAAc,CAAG,WACnC,IAAI,CAACxV,OAAO,CAAC0J,UAAU,GACvB,IAAI,CAAC1J,OAAO,CAAC0J,UAAU,CAAG4G,GAAM,IAAI,CAACtQ,OAAO,CAAC0J,UAAU,EAEvD,IAAI,CAACsL,cAAc,CAAC,IAAI,CAACvD,MAAM,EAE/B7B,GAAY4F,cAAc,CAAC7a,IAAI,CAAC,IAAI,CAAE,IAAI,CAACiW,KAAK,EAExD,EACAD,EAAgBlW,SAAS,CAAC+G,OAAO,CAAG,WAEhC,GAAI,IAAI,CAACoP,KAAK,CAAE,CACZ,IAAK,IAAInT,EAAK,EAAGC,EAAK,IAAI,CAACkT,KAAK,CAAEnT,EAAKC,EAAGC,MAAM,CAAEF,IAE9CwL,AADWvL,CAAE,CAACD,EAAG,CACZ+D,OAAO,EAEhB,CAAA,IAAI,CAACoP,KAAK,CAACjT,MAAM,CAAG,CACxB,CACA,OAAOiS,GAAYpO,OAAO,CAACtF,KAAK,CAAC,IAAI,CAAEC,UAC3C,EAKAwU,EAAgBlW,SAAS,CAACkb,YAAY,CAAG,SAAU9X,CAAK,CAAE4C,CAAK,EAC3D,IAAmBd,EAAe9B,GAC9B4B,AADS,IAAI,CACNG,iBAAiB,CAAC/B,EAAMgC,IAAI,CAACC,KAAK,EAAI,EAAE,EAAI,CAAC,EAAGE,EAAUnC,GAASA,EAAMmC,OAAO,CAAE4V,EAAe,AAACjW,EAAayD,MAAM,EAC5HzD,EAAayD,MAAM,CAAC3C,EAAM,EAC1B,CAAC,EACD5C,GACAA,CAAAA,EAAMmC,OAAO,CAAC6I,MAAM,CAAGsH,GAAsB1Q,AALpC,IAAI,CAKuCO,OAAO,CAAC6I,MAAM,CAAElJ,EAAakJ,MAAM,CAAEhL,EAAMmC,OAAO,CAAC6I,MAAM,CAAA,EAEjH,IAAIgN,EAAYzF,GAAqBwF,GAAgBA,EAAa3M,IAAI,EAAI2M,EAAa3M,IAAI,CAACtH,KAAK,CAAE3B,GAAWA,EAAQiJ,IAAI,EAAIjJ,EAAQiJ,IAAI,CAACtH,KAAK,CAAEhC,GAAgBA,EAAasJ,IAAI,EAAItJ,EAAasJ,IAAI,CAACtH,KAAK,CAAElC,AAPnM,IAAI,CAOsMO,OAAO,CAACiJ,IAAI,EAAIxJ,AAP1N,IAAI,CAO6NO,OAAO,CAACiJ,IAAI,CAACtH,KAAK,EAAGmU,EAAgB1F,GAAqBwF,GAAgBA,EAAa3M,IAAI,EACrU2M,EAAa3M,IAAI,CAAChH,SAAS,CAAEjC,GAAWA,EAAQiJ,IAAI,EAAIjJ,EAAQiJ,IAAI,CAAChH,SAAS,CAAEtC,GAAgBA,EAAasJ,IAAI,EACjHtJ,EAAasJ,IAAI,CAAChH,SAAS,CAAExC,AATpB,IAAI,CASuBO,OAAO,CAACiJ,IAAI,EAAIxJ,AAT3C,IAAI,CAS8CO,OAAO,CAACiJ,IAAI,CAAChH,SAAS,EAAG8T,EAAUnG,GAAY+F,YAAY,CAAChb,IAAI,CATlH,IAAI,CASuHkD,EAAO4C,GAW/I,OAVI5C,IACIA,EAAMqB,MAAM,GACZ6W,EAAQhU,MAAM,CAAG8T,EACjBE,CAAO,CAAC,eAAe,CAAGD,EAC1B,OAAOC,EAAQtU,IAAI,EAElB5D,EAAMC,OAAO,EACdiY,CAAAA,EAAQxU,OAAO,CAAG,CAAA,GAGnBwU,CACX,EACApF,EAAgBlW,SAAS,CAACub,UAAU,CAAG,WACnCnG,GAAcpV,SAAS,CAACub,UAAU,CAAC9Z,KAAK,CAAC,IAAI,CAAEC,WAC/C2T,GAAarV,SAAS,CAACub,UAAU,CAACrb,IAAI,CAAC,IAAI,CAAE,IAAI,CAACiW,KAAK,CAC3D,EAKAD,EAAgBlW,SAAS,CAACyZ,aAAa,CAAG,SAAUrW,CAAK,EACrD,IAAIyC,EAAQ,IAAI,CAACA,KAAK,CAAET,EAAOhC,EAAMgC,IAAI,CAAE2R,EAAYlR,EAAMkR,SAAS,CAAE7M,EAAYrE,EAAMqE,SAAS,CAEnGjH,EAAK,IAAI,CAACuW,cAAc,CAAErB,EAAKlV,EAAGkV,EAAE,CAAEC,EAAKnV,EAAGmV,EAAE,CAAEH,EAAKhV,EAAGgV,EAAE,CAAEC,EAAKjV,EAAGiV,EAAE,CAAE5R,EAAI6R,EAAK/S,EAAKgI,SAAS,CAAGgL,EAAI7R,EAAI0R,EAAK7S,EAAK+H,SAAS,CAAG+K,EAAI7S,EAAQ,IAAI,CAACF,iBAAiB,CAACC,EAAKC,KAAK,CAAC,EAAI,CAAC,EAAmGiJ,EAASsJ,AAAzFlC,GAAsB,IAAI,CAACnQ,OAAO,CAAC6I,MAAM,CAAE/I,EAAM+I,MAAM,CAAEhL,EAAMmC,OAAO,CAAC6I,MAAM,EAA0BE,MAAM,CAAE5I,EAASN,EAAK0S,SAAS,CAAErS,EAAQL,EAAK2S,SAAS,CAAE5J,EAAW,IAAI,CAAC5I,OAAO,CAAC4I,QAAQ,CAAEqN,EAAQpW,EAAKkB,CAAC,CAAIT,EAAMc,QAAQ,CACtauD,EAAYzE,EAAQ,EAAIa,EACxBA,EAAIb,EAAQ,EAAIgW,EAAQrW,EAAKmB,CAAC,CAAI,AAAC4H,EAEnC5H,EAAIb,EAAS,EADbqR,EAAYxQ,EAAIb,EAAS,EACRgW,EAAe/F,GAAqBvS,EAAMmC,OAAO,CAACmW,YAAY,CAAErW,EAAMqW,YAAY,CAAE,IAAI,CAACnW,OAAO,CAACmW,YAAY,EAAGC,EAAWrG,EAAO,CAAChH,GAAU,SAAS,CAS3K,GARIqN,AAAa,KAAK,IAAlBA,GACAvY,EAAMwY,QAAQ,CAAG,CAAA,EACjBxY,EAAM6W,SAAS,CAAG,QAClB7W,EAAMyY,QAAQ,CAAGvN,EAAOwN,KAAK,CAAC,iBAAiB,CAAC,EAAE,EAGlD1Y,EAAM6W,SAAS,CAAG,OAElB,CAAC7W,EAAMC,OAAO,EAAID,EAAMgF,YAAY,CAAE,CACtC,IAAI1E,EAAaN,EAAMgF,YAAY,CAAC6C,QAAQ,CAC5C,GAAIvH,EAAY,CACZ,IAAIqY,EAAkBrY,EAAWuC,SAAS,EAAI,CAAC,EAAGG,EAAK2V,EAAgBzV,CAAC,CAAE0V,EAAM5V,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAImC,EAAKwT,EAAgBxV,CAAC,CAAE0V,EAAM1T,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKuT,EAAgBtW,KAAK,CAAoCgD,EAAKsT,EAAgBrW,MAAM,AAClPtC,CAAAA,EAAM6C,SAAS,EAChB7C,CAAAA,EAAM6C,SAAS,CAAG,CAAC,CAAA,EAElB7C,EAAMwY,QAAQ,EACfnG,GAAuBrS,EAAM6C,SAAS,CAAE,CACpC5G,EAAGsc,EAASK,EAAKC,EAN2KzT,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAA4CC,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAMvOiT,EAAe,CAAEjH,EAAGiH,CAAa,EAAI,KAAK,EACvF,GAEJjG,GAAuBrS,EAAM6C,SAAS,CAAE,CAAEK,EAAG0V,EAAKzV,EAAG0V,CAAI,GACzD7Y,EAAM+W,KAAK,CAAGzW,EAAWyW,KAAK,CAC9B/W,EAAMgX,KAAK,CAAG1W,EAAW0W,KAAK,AAClC,CACJ,MAEIhX,EAAM+W,KAAK,CAAGqB,EACdpY,EAAMgX,KAAK,CAAGqB,EACdrY,EAAM6C,SAAS,CAAG,CACdK,EAAGkV,EACHjV,EAAGkV,EACHhW,MAAOA,EACPC,OAAQA,EACR+I,OAAQ,AAACrL,EAAMgC,IAAI,CAAC8W,MAAM,CAAe,UAAZ,SACjC,EACK9Y,EAAMwY,QAAQ,EACfxY,CAAAA,EAAM6C,SAAS,CAAC5G,CAAC,CAAGsc,EAASH,EAAOC,EAAOhW,EAAOC,EAAQgW,EAAe,CAAEjH,EAAGiH,CAAa,EAAI,KAAK,EAAC,CAI7GtY,CAAAA,EAAMkX,UAAU,CAAGzU,EAAMc,QAAQ,CAC7B,CAACoQ,EAAY0E,EAAQ/V,EAAS,EAAGwE,EAAYsR,EAAQ/V,EAAQ,EAAE,CAC/D,CAAC+V,EAAQ/V,EAAQ,EAAGgW,EAAM,AAClC,EACAvF,EAAgBiG,cAAc,CAAGzG,GAAsBN,GAAc+G,cAAc,CAAEjO,GAC9EgI,CACX,EAAEd,IACFK,GAAuBS,GAAgBlW,SAAS,CAAE,CAC9CmE,WAnnDyDI,EAonDzDT,UAvzDwDxC,EAwzDxDmX,UA3zC8C3N,CA4zClD,GACAtK,IAA0I4b,kBAAkB,CAAC,YAAalG,IAkH7I,IAAI9V,GAAkBE,IAGzC,OADYH,EAAoB,OAAU,AAE3C,GAET"}