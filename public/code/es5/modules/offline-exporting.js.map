{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v12.0.1 (2024-11-28)\n * @module highcharts/modules/offline-exporting\n * @requires highcharts\n * @requires highcharts/modules/exporting\n *\n * Client side exporting module\n *\n * (c) 2015-2024 Torstein Honsi / Oystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"highcharts\"), require(\"highcharts\")[\"AST\"], require(\"highcharts\")[\"Chart\"], require(\"highcharts\")[\"HttpUtilities\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"highcharts/offline-exporting\", [[\"highcharts/highcharts\"], [\"highcharts/highcharts\",\"AST\"], [\"highcharts/highcharts\",\"Chart\"], [\"highcharts/highcharts\",\"HttpUtilities\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"highcharts/offline-exporting\"] = factory(require(\"highcharts\"), require(\"highcharts\")[\"AST\"], require(\"highcharts\")[\"Chart\"], require(\"highcharts\")[\"HttpUtilities\"]);\n\telse\n\t\troot[\"Highcharts\"] = factory(root[\"Highcharts\"], root[\"Highcharts\"][\"AST\"], root[\"Highcharts\"][\"Chart\"], root[\"Highcharts\"][\"HttpUtilities\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__660__, __WEBPACK_EXTERNAL_MODULE__960__, __WEBPACK_EXTERNAL_MODULE__156__) {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 660:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__660__;\n\n/***/ }),\n\n/***/ 960:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__960__;\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__156__;\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__944__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ offline_exporting_src; }\n});\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\"],\"commonjs\":[\"highcharts\"],\"commonjs2\":[\"highcharts\"],\"root\":[\"Highcharts\"]}\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_ = __webpack_require__(944);\nvar highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);\n;// ./code/es5/es-modules/Extensions/DownloadURL.js\n/* *\n *\n *  (c) 2015-2024 Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n *  Mixin for downloading content in the browser\n *\n * */\n\n/* *\n *\n *  Imports\n *\n * */\n\nvar isSafari = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isSafari, win = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win, doc = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win.document;\n/* *\n *\n *  Constants\n *\n * */\nvar domurl = win.URL || win.webkitURL || win;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * Convert base64 dataURL to Blob if supported, otherwise returns undefined.\n * @private\n * @function Highcharts.dataURLtoBlob\n * @param {string} dataURL\n *        URL to convert\n * @return {string|undefined}\n *         Blob\n */\nfunction dataURLtoBlob(dataURL) {\n    var parts = dataURL\n        .replace(/filename=.*;/, '')\n        .match(/data:([^;]*)(;base64)?,([A-Z+\\d\\/]+)/i);\n    if (parts &&\n        parts.length > 3 &&\n        (win.atob) &&\n        win.ArrayBuffer &&\n        win.Uint8Array &&\n        win.Blob &&\n        (domurl.createObjectURL)) {\n        // Try to convert data URL to Blob\n        var binStr = win.atob(parts[3]), buf = new win.ArrayBuffer(binStr.length), binary = new win.Uint8Array(buf);\n        for (var i = 0; i < binary.length; ++i) {\n            binary[i] = binStr.charCodeAt(i);\n        }\n        return domurl\n            .createObjectURL(new win.Blob([binary], { 'type': parts[1] }));\n    }\n}\n/**\n * Download a data URL in the browser. Can also take a blob as first param.\n *\n * @private\n * @function Highcharts.downloadURL\n * @param {string|global.URL} dataURL\n *        The dataURL/Blob to download\n * @param {string} filename\n *        The name of the resulting file (w/extension)\n * @return {void}\n */\nfunction downloadURL(dataURL, filename) {\n    var nav = win.navigator, a = doc.createElement('a');\n    // IE specific blob implementation\n    // Don't use for normal dataURLs\n    if (typeof dataURL !== 'string' &&\n        !(dataURL instanceof String) &&\n        nav.msSaveOrOpenBlob) {\n        nav.msSaveOrOpenBlob(dataURL, filename);\n        return;\n    }\n    dataURL = '' + dataURL;\n    if (nav.userAgent.length > 1000 /* RegexLimits.shortLimit */) {\n        throw new Error('Input too long');\n    }\n    var // Some browsers have limitations for data URL lengths. Try to convert\n    // to Blob or fall back. Edge always needs that blob.\n    isOldEdgeBrowser = /Edge\\/\\d+/.test(nav.userAgent), \n    // Safari on iOS needs Blob in order to download PDF\n    safariBlob = (isSafari &&\n        typeof dataURL === 'string' &&\n        dataURL.indexOf('data:application/pdf') === 0);\n    if (safariBlob || isOldEdgeBrowser || dataURL.length > 2000000) {\n        dataURL = dataURLtoBlob(dataURL) || '';\n        if (!dataURL) {\n            throw new Error('Failed to convert to blob');\n        }\n    }\n    // Try HTML5 download attr if supported\n    if (typeof a.download !== 'undefined') {\n        a.href = dataURL;\n        a.download = filename; // HTML5 download attribute\n        doc.body.appendChild(a);\n        a.click();\n        doc.body.removeChild(a);\n    }\n    else {\n        // No download attr, just opening data URI\n        try {\n            if (!win.open(dataURL, 'chart')) {\n                throw new Error('Failed to open window');\n            }\n        }\n        catch (_a) {\n            // If window.open failed, try location.href\n            win.location.href = dataURL;\n        }\n    }\n}\n/* *\n *\n *  Default Export\n *\n * */\nvar DownloadURL = {\n    dataURLtoBlob: dataURLtoBlob,\n    downloadURL: downloadURL\n};\n/* harmony default export */ var Extensions_DownloadURL = (DownloadURL);\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"AST\"],\"commonjs\":[\"highcharts\",\"AST\"],\"commonjs2\":[\"highcharts\",\"AST\"],\"root\":[\"Highcharts\",\"AST\"]}\nvar highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_ = __webpack_require__(660);\nvar highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default = /*#__PURE__*/__webpack_require__.n(highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_);\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"Chart\"],\"commonjs\":[\"highcharts\",\"Chart\"],\"commonjs2\":[\"highcharts\",\"Chart\"],\"root\":[\"Highcharts\",\"Chart\"]}\nvar highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_ = __webpack_require__(960);\n;// ./code/es5/es-modules/Core/Chart/ChartNavigationComposition.js\n/**\n *\n *  (c) 2010-2024 Paweł Fus\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Composition\n *\n * */\nvar ChartNavigationComposition;\n(function (ChartNavigationComposition) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(chart) {\n        if (!chart.navigation) {\n            chart.navigation = new Additions(chart);\n        }\n        return chart;\n    }\n    ChartNavigationComposition.compose = compose;\n    /* *\n     *\n     *  Class\n     *\n     * */\n    /**\n     * Initializes `chart.navigation` object which delegates `update()` methods\n     * to all other common classes (used in exporting and navigationBindings).\n     * @private\n     */\n    var Additions = /** @class */ (function () {\n        /* *\n         *\n         *  Constructor\n         *\n         * */\n        function Additions(chart) {\n            this.updates = [];\n            this.chart = chart;\n        }\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Registers an `update()` method in the `chart.navigation` object.\n         *\n         * @private\n         * @param {UpdateFunction} updateFn\n         * The `update()` method that will be called in `chart.update()`.\n         */\n        Additions.prototype.addUpdate = function (updateFn) {\n            this.chart.navigation.updates.push(updateFn);\n        };\n        /**\n         * @private\n         */\n        Additions.prototype.update = function (options, redraw) {\n            var _this = this;\n            this.updates.forEach(function (updateFn) {\n                updateFn.call(_this.chart, options, redraw);\n            });\n        };\n        return Additions;\n    }());\n    ChartNavigationComposition.Additions = Additions;\n})(ChartNavigationComposition || (ChartNavigationComposition = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Chart_ChartNavigationComposition = (ChartNavigationComposition);\n\n;// ./code/es5/es-modules/Extensions/Exporting/ExportingDefaults.js\n/* *\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\nvar isTouchDevice = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isTouchDevice;\n/* *\n *\n *  API Options\n *\n * */\n// Add the export related options\n/**\n * Options for the exporting module. For an overview on the matter, see\n * [the docs](https://www.highcharts.com/docs/export-module/export-module-overview) and\n * read our [Fair Usage Policy](https://www.highcharts.com/docs/export-module/privacy-disclaimer-export).\n *\n * @requires     modules/exporting\n * @optionparent exporting\n */\nvar exporting = {\n    /**\n     * Experimental setting to allow HTML inside the chart (added through\n     * the `useHTML` options), directly in the exported image. This allows\n     * you to preserve complicated HTML structures like tables or bi-directional\n     * text in exported charts.\n     *\n     * Disclaimer: The HTML is rendered in a `foreignObject` tag in the\n     * generated SVG. The official export server is based on PhantomJS,\n     * which supports this, but other SVG clients, like Batik, does not\n     * support it. This also applies to downloaded SVG that you want to\n     * open in a desktop client.\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since     4.1.8\n     * @apioption exporting.allowHTML\n     */\n    /**\n     * Allows the end user to sort the data table by clicking on column headers.\n     *\n     * @since 10.3.3\n     * @apioption exporting.allowTableSorting\n     */\n    allowTableSorting: true,\n    /**\n     * Allow exporting a chart retaining any user-applied CSS.\n     *\n     * Note that this is is default behavior in [styledMode](#chart.styledMode).\n     *\n     * @see [styledMode](#chart.styledMode)\n     *\n     * @sample {highcharts} highcharts/exporting/apply-stylesheets/\n     *\n     * @type      {boolean}\n     * @default   false\n     * @since 12.0.0\n     * @apioption exporting.applyStyleSheets\n     */\n    /**\n     * Additional chart options to be merged into the chart before exporting to\n     * an image format. This does not apply to printing the chart via the export\n     * menu.\n     *\n     * For example, a common use case is to add data labels to improve\n     * readability of the exported chart, or to add a printer-friendly color\n     * scheme to exported PDFs.\n     *\n     * @sample {highcharts} highcharts/exporting/chartoptions-data-labels/\n     *         Added data labels\n     * @sample {highstock} highcharts/exporting/chartoptions-data-labels/\n     *         Added data labels\n     *\n     * @type      {Highcharts.Options}\n     * @apioption exporting.chartOptions\n     */\n    /**\n     * Whether to enable the exporting module. Disabling the module will\n     * hide the context button, but API methods will still be available.\n     *\n     * @sample {highcharts} highcharts/exporting/enabled-false/\n     *         Exporting module is loaded but disabled\n     * @sample {highstock} highcharts/exporting/enabled-false/\n     *         Exporting module is loaded but disabled\n     *\n     * @type      {boolean}\n     * @default   true\n     * @since     2.0\n     * @apioption exporting.enabled\n     */\n    /**\n     * Function to call if the offline-exporting module fails to export\n     * a chart on the client side, and [fallbackToExportServer](\n     * #exporting.fallbackToExportServer) is disabled. If left undefined, an\n     * exception is thrown instead. Receives two parameters, the exporting\n     * options, and the error from the module.\n     *\n     * @see [fallbackToExportServer](#exporting.fallbackToExportServer)\n     *\n     * @type      {Highcharts.ExportingErrorCallbackFunction}\n     * @since     5.0.0\n     * @requires  modules/exporting\n     * @requires  modules/offline-exporting\n     * @apioption exporting.error\n     */\n    /**\n     * Whether or not to fall back to the export server if the offline-exporting\n     * module is unable to export the chart on the client side. This happens for\n     * certain browsers, and certain features (e.g.\n     * [allowHTML](#exporting.allowHTML)), depending on the image type exporting\n     * to. For very complex charts, it is possible that export can fail in\n     * browsers that don't support Blob objects, due to data URL length limits.\n     * It is recommended to define the [exporting.error](#exporting.error)\n     * handler if disabling fallback, in order to notify users in case export\n     * fails.\n     *\n     * @type      {boolean}\n     * @default   true\n     * @since     4.1.8\n     * @requires  modules/exporting\n     * @requires  modules/offline-exporting\n     * @apioption exporting.fallbackToExportServer\n     */\n    /**\n     * The filename, without extension, to use for the exported chart.\n     *\n     * @sample {highcharts} highcharts/exporting/filename/\n     *         Custom file name\n     * @sample {highstock} highcharts/exporting/filename/\n     *         Custom file name\n     *\n     * @type      {string}\n     * @default   chart\n     * @since     2.0\n     * @apioption exporting.filename\n     */\n    /**\n     * Highcharts v11.2.0 and older. An object containing additional key value\n     * data for the POST form that sends the SVG to the export server. For\n     * example, a `target` can be set to make sure the generated image is\n     * received in another frame, or a custom `enctype` or `encoding` can be\n     * set.\n     *\n     * With Highcharts v11.3.0, the `fetch` API replaced the old HTML form. To\n     * modify the request, now use [fetchOptions](#exporting.fetchOptions)\n     * instead.\n     *\n     * @deprecated\n     * @type      {Highcharts.HTMLAttributes}\n     * @since     3.0.8\n     * @apioption exporting.formAttributes\n     */\n    /**\n     * Options for the fetch request used when sending the SVG to the export\n     * server.\n     *\n     * See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n     * for more information\n     *\n     * @type {Object}\n     * @since 11.3.0\n     * @apioption exporting.fetchOptions\n     */\n    /**\n     * Path where Highcharts will look for export module dependencies to\n     * load on demand if they don't already exist on `window`. Should currently\n     * point to location of [CanVG](https://github.com/canvg/canvg) library,\n     * [jsPDF](https://github.com/parallax/jsPDF) and\n     * [svg2pdf.js](https://github.com/yWorks/svg2pdf.js), required for client\n     * side export in certain browsers.\n     *\n     * @type      {string}\n     * @default   https://code.highcharts.com/{version}/lib\n     * @since     5.0.0\n     * @apioption exporting.libURL\n     */\n    /**\n     * Analogous to [sourceWidth](#exporting.sourceWidth).\n     *\n     * @type      {number}\n     * @since     3.0\n     * @apioption exporting.sourceHeight\n     */\n    /**\n     * The width of the original chart when exported, unless an explicit\n     * [chart.width](#chart.width) is set, or a pixel width is set on the\n     * container. The width exported raster image is then multiplied by\n     * [scale](#exporting.scale).\n     *\n     * @sample {highcharts} highcharts/exporting/sourcewidth/\n     *         Source size demo\n     * @sample {highstock} highcharts/exporting/sourcewidth/\n     *         Source size demo\n     * @sample {highmaps} maps/exporting/sourcewidth/\n     *         Source size demo\n     *\n     * @type      {number}\n     * @since     3.0\n     * @apioption exporting.sourceWidth\n     */\n    /**\n     * The pixel width of charts exported to PNG or JPG. As of Highcharts\n     * 3.0, the default pixel width is a function of the [chart.width](\n     * #chart.width) or [exporting.sourceWidth](#exporting.sourceWidth) and the\n     * [exporting.scale](#exporting.scale).\n     *\n     * @sample {highcharts} highcharts/exporting/width/\n     *         Export to 200px wide images\n     * @sample {highstock} highcharts/exporting/width/\n     *         Export to 200px wide images\n     *\n     * @type      {number}\n     * @since     2.0\n     * @apioption exporting.width\n     */\n    /**\n     * Default MIME type for exporting if `chart.exportChart()` is called\n     * without specifying a `type` option. Possible values are `image/png`,\n     *  `image/jpeg`, `application/pdf` and `image/svg+xml`.\n     *\n     * @type  {Highcharts.ExportingMimeTypeValue}\n     * @since 2.0\n     */\n    type: 'image/png',\n    /**\n     * The URL for the server module converting the SVG string to an image\n     * format. By default this points to Highchart's free web service.\n     *\n     * @since 2.0\n     */\n    url: 'https://export-svg.highcharts.com/',\n    /**\n     * Settings for a custom font for the exported PDF, when using the\n     * `offline-exporting` module. This is used for languages containing\n     * non-ASCII characters, like Chinese, Russian, Japanese etc.\n     *\n     * As described in the [jsPDF\n     * docs](https://github.com/parallax/jsPDF#use-of-unicode-characters--utf-8),\n     * the 14 standard fonts in PDF are limited to the ASCII-codepage.\n     * Therefore, in order to support other text in the exported PDF, one or\n     * more TTF font files have to be passed on to the exporting module.\n     *\n     * See more in [the\n     * docs](https://www.highcharts.com/docs/export-module/client-side-export).\n     *\n     * @sample {highcharts} highcharts/exporting/offline-download-pdffont/\n     *         Download PDF in a language containing non-Latin characters.\n     *\n     * @since 10.0.0\n     * @requires modules/offline-exporting\n     */\n    pdfFont: {\n        /**\n         * The TTF font file for normal `font-style`. If font variations like\n         * `bold` or `italic` are not defined, the `normal` font will be used\n         * for those too.\n         *\n         * @type string|undefined\n         */\n        normal: void 0,\n        /**\n         * The TTF font file for bold text.\n         *\n         * @type string|undefined\n         */\n        bold: void 0,\n        /**\n         * The TTF font file for bold and italic text.\n         *\n         * @type string|undefined\n         */\n        bolditalic: void 0,\n        /**\n         * The TTF font file for italic text.\n         *\n         * @type string|undefined\n         */\n        italic: void 0\n    },\n    /**\n     * When printing the chart from the menu item in the burger menu, if\n     * the on-screen chart exceeds this width, it is resized. After printing\n     * or cancelled, it is restored. The default width makes the chart\n     * fit into typical paper format. Note that this does not affect the\n     * chart when printing the web page as a whole.\n     *\n     * @since 4.2.5\n     */\n    printMaxWidth: 780,\n    /**\n     * Defines the scale or zoom factor for the exported image compared\n     * to the on-screen display. While for instance a 600px wide chart\n     * may look good on a website, it will look bad in print. The default\n     * scale of 2 makes this chart export to a 1200px PNG or JPG.\n     *\n     * @see [chart.width](#chart.width)\n     * @see [exporting.sourceWidth](#exporting.sourceWidth)\n     *\n     * @sample {highcharts} highcharts/exporting/scale/\n     *         Scale demonstrated\n     * @sample {highstock} highcharts/exporting/scale/\n     *         Scale demonstrated\n     * @sample {highmaps} maps/exporting/scale/\n     *         Scale demonstrated\n     *\n     * @since 3.0\n     */\n    scale: 2,\n    /**\n     * Options for the export related buttons, print and export. In addition\n     * to the default buttons listed here, custom buttons can be added.\n     * See [navigation.buttonOptions](#navigation.buttonOptions) for general\n     * options.\n     *\n     * @type     {Highcharts.Dictionary<*>}\n     * @requires modules/exporting\n     */\n    buttons: {\n        /**\n         * Options for the export button.\n         *\n         * In styled mode, export button styles can be applied with the\n         * `.highcharts-contextbutton` class.\n         *\n         * @declare  Highcharts.ExportingButtonsOptionsObject\n         * @extends  navigation.buttonOptions\n         * @requires modules/exporting\n         */\n        contextButton: {\n            /**\n             * A click handler callback to use on the button directly instead of\n             * the popup menu.\n             *\n             * @sample highcharts/exporting/buttons-contextbutton-onclick/\n             *         Skip the menu and export the chart directly\n             *\n             * @type      {Function}\n             * @since     2.0\n             * @apioption exporting.buttons.contextButton.onclick\n             */\n            /**\n             * See [navigation.buttonOptions.symbolFill](\n             * #navigation.buttonOptions.symbolFill).\n             *\n             * @type      {Highcharts.ColorString}\n             * @default   #666666\n             * @since     2.0\n             * @apioption exporting.buttons.contextButton.symbolFill\n             */\n            /**\n             * The horizontal position of the button relative to the `align`\n             * option.\n             *\n             * @type      {number}\n             * @default   -10\n             * @since     2.0\n             * @apioption exporting.buttons.contextButton.x\n             */\n            /**\n             * The class name of the context button.\n             */\n            className: 'highcharts-contextbutton',\n            /**\n             * The class name of the menu appearing from the button.\n             */\n            menuClassName: 'highcharts-contextmenu',\n            /**\n             * The symbol for the button. Points to a definition function in\n             * the `Highcharts.Renderer.symbols` collection. The default\n             * `menu` function is part of the exporting module. Possible\n             * values are \"circle\", \"square\", \"diamond\", \"triangle\",\n             * \"triangle-down\", \"menu\", \"menuball\" or custom shape.\n             *\n             * @sample highcharts/exporting/buttons-contextbutton-symbol/\n             *         Use a circle for symbol\n             * @sample highcharts/exporting/buttons-contextbutton-symbol-custom/\n             *         Custom shape as symbol\n             *\n             * @type  {Highcharts.SymbolKeyValue|\"menu\"|\"menuball\"|string}\n             * @since 2.0\n             */\n            symbol: 'menu',\n            /**\n             * The key to a [lang](#lang) option setting that is used for the\n             * button's title tooltip. When the key is `contextButtonTitle`, it\n             * refers to [lang.contextButtonTitle](#lang.contextButtonTitle)\n             * that defaults to \"Chart context menu\".\n             *\n             * @since 6.1.4\n             */\n            titleKey: 'contextButtonTitle',\n            /**\n             * A collection of strings pointing to config options for the menu\n             * items. The config options are defined in the\n             * `menuItemDefinitions` option.\n             *\n             * By default, there is the \"View in full screen\" and \"Print\" menu\n             * items, plus one menu item for each of the available export types.\n             *\n             * @sample {highcharts} highcharts/exporting/menuitemdefinitions/\n             *         Menu item definitions\n             * @sample {highstock} highcharts/exporting/menuitemdefinitions/\n             *         Menu item definitions\n             * @sample {highmaps} highcharts/exporting/menuitemdefinitions/\n             *         Menu item definitions\n             *\n             * @type    {Array<string>}\n             * @default [\"viewFullscreen\", \"printChart\", \"separator\", \"downloadPNG\", \"downloadJPEG\", \"downloadSVG\"]\n             * @since   2.0\n             */\n            menuItems: [\n                'viewFullscreen',\n                'printChart',\n                'separator',\n                'downloadPNG',\n                'downloadJPEG',\n                'downloadSVG'\n            ],\n            y: -5\n        }\n    },\n    /**\n     * An object consisting of definitions for the menu items in the context\n     * menu. Each key value pair has a `key` that is referenced in the\n     * [menuItems](#exporting.buttons.contextButton.menuItems) setting,\n     * and a `value`, which is an object with the following properties:\n     *\n     * - **onclick:** The click handler for the menu item\n     *\n     * - **text:** The text for the menu item\n     *\n     * - **textKey:** If internationalization is required, the key to a language\n     *   string\n     *\n     * Custom text for the \"exitFullScreen\" can be set only in lang options\n     * (it is not a separate button).\n     *\n     * @sample {highcharts} highcharts/exporting/menuitemdefinitions/\n     *         Menu item definitions\n     * @sample {highstock} highcharts/exporting/menuitemdefinitions/\n     *         Menu item definitions\n     * @sample {highmaps} highcharts/exporting/menuitemdefinitions/\n     *         Menu item definitions\n     *\n     *\n     * @type    {Highcharts.Dictionary<Highcharts.ExportingMenuObject>}\n     * @default {\"viewFullscreen\": {}, \"printChart\": {}, \"separator\": {}, \"downloadPNG\": {}, \"downloadJPEG\": {}, \"downloadPDF\": {}, \"downloadSVG\": {}}\n     * @since   5.0.13\n     */\n    menuItemDefinitions: {\n        /**\n         * @ignore\n         */\n        viewFullscreen: {\n            textKey: 'viewFullscreen',\n            onclick: function () {\n                if (this.fullscreen) {\n                    this.fullscreen.toggle();\n                }\n            }\n        },\n        /**\n         * @ignore\n         */\n        printChart: {\n            textKey: 'printChart',\n            onclick: function () {\n                this.print();\n            }\n        },\n        /**\n         * @ignore\n         */\n        separator: {\n            separator: true\n        },\n        /**\n         * @ignore\n         */\n        downloadPNG: {\n            textKey: 'downloadPNG',\n            onclick: function () {\n                this.exportChart();\n            }\n        },\n        /**\n         * @ignore\n         */\n        downloadJPEG: {\n            textKey: 'downloadJPEG',\n            onclick: function () {\n                this.exportChart({\n                    type: 'image/jpeg'\n                });\n            }\n        },\n        /**\n         * @ignore\n         */\n        downloadPDF: {\n            textKey: 'downloadPDF',\n            onclick: function () {\n                this.exportChart({\n                    type: 'application/pdf'\n                });\n            }\n        },\n        /**\n         * @ignore\n         */\n        downloadSVG: {\n            textKey: 'downloadSVG',\n            onclick: function () {\n                this.exportChart({\n                    type: 'image/svg+xml'\n                });\n            }\n        }\n    }\n};\n// Add language\n/**\n * @optionparent lang\n */\nvar lang = {\n    /**\n     * Exporting module only. The text for the menu item to view the chart\n     * in full screen.\n     *\n     * @since 8.0.1\n     */\n    viewFullscreen: 'View in full screen',\n    /**\n     * Exporting module only. The text for the menu item to exit the chart\n     * from full screen.\n     *\n     * @since 8.0.1\n     */\n    exitFullscreen: 'Exit from full screen',\n    /**\n     * Exporting module only. The text for the menu item to print the chart.\n     *\n     * @since    3.0.1\n     * @requires modules/exporting\n     */\n    printChart: 'Print chart',\n    /**\n     * Exporting module only. The text for the PNG download menu item.\n     *\n     * @since    2.0\n     * @requires modules/exporting\n     */\n    downloadPNG: 'Download PNG image',\n    /**\n     * Exporting module only. The text for the JPEG download menu item.\n     *\n     * @since    2.0\n     * @requires modules/exporting\n     */\n    downloadJPEG: 'Download JPEG image',\n    /**\n     * Exporting module only. The text for the PDF download menu item.\n     *\n     * @since    2.0\n     * @requires modules/exporting\n     */\n    downloadPDF: 'Download PDF document',\n    /**\n     * Exporting module only. The text for the SVG download menu item.\n     *\n     * @since    2.0\n     * @requires modules/exporting\n     */\n    downloadSVG: 'Download SVG vector image',\n    /**\n     * Exporting module menu. The tooltip title for the context menu holding\n     * print and export menu items.\n     *\n     * @since    3.0\n     * @requires modules/exporting\n     */\n    contextButtonTitle: 'Chart context menu'\n};\n/**\n * A collection of options for buttons and menus appearing in the exporting\n * module or in Stock Tools.\n *\n * @requires     modules/exporting\n * @optionparent navigation\n */\nvar navigation = {\n    /**\n     * A collection of options for buttons appearing in the exporting\n     * module.\n     *\n     * In styled mode, the buttons are styled with the\n     * `.highcharts-contextbutton` and `.highcharts-button-symbol` classes.\n     *\n     * @requires modules/exporting\n     */\n    buttonOptions: {\n        /**\n         * Whether to enable buttons.\n         *\n         * @sample highcharts/navigation/buttonoptions-enabled/\n         *         Exporting module loaded but buttons disabled\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     2.0\n         * @apioption navigation.buttonOptions.enabled\n         */\n        /**\n         * The pixel size of the symbol on the button.\n         *\n         * @sample highcharts/navigation/buttonoptions-height/\n         *         Bigger buttons\n         *\n         * @since 2.0\n         */\n        symbolSize: 14,\n        /**\n         * The x position of the center of the symbol inside the button.\n         *\n         * @sample highcharts/navigation/buttonoptions-height/\n         *         Bigger buttons\n         *\n         * @since 2.0\n         */\n        symbolX: 14.5,\n        /**\n         * The y position of the center of the symbol inside the button.\n         *\n         * @sample highcharts/navigation/buttonoptions-height/\n         *         Bigger buttons\n         *\n         * @since 2.0\n         */\n        symbolY: 13.5,\n        /**\n         * Alignment for the buttons.\n         *\n         * @sample highcharts/navigation/buttonoptions-align/\n         *         Center aligned\n         *\n         * @type  {Highcharts.AlignValue}\n         * @since 2.0\n         */\n        align: 'right',\n        /**\n         * The pixel spacing between buttons, and between the context button and\n         * the title.\n         *\n         * @sample highcharts/title/widthadjust\n         *         Adjust the spacing when using text button\n         * @since 2.0\n         */\n        buttonSpacing: 5,\n        /**\n         * Pixel height of the buttons.\n         *\n         * @sample highcharts/navigation/buttonoptions-height/\n         *         Bigger buttons\n         *\n         * @since 2.0\n         */\n        height: 28,\n        /**\n         * A text string to add to the individual button.\n         *\n         * @sample highcharts/exporting/buttons-text/\n         *         Full text button\n         * @sample highcharts/exporting/buttons-text-usehtml/\n         *         Icon using CSS font in text\n         * @sample highcharts/exporting/buttons-text-symbol/\n         *         Combined symbol and text\n         *\n         * @type      {string}\n         * @default   null\n         * @since     3.0\n         * @apioption navigation.buttonOptions.text\n         */\n        /**\n         * Whether to use HTML for rendering the button. HTML allows for things\n         * like inline CSS or image-based icons.\n         *\n         * @sample highcharts/exporting/buttons-text-usehtml/\n         *         Icon using CSS font in text\n         *\n         * @type      boolean\n         * @default   false\n         * @since 10.3.0\n         * @apioption navigation.buttonOptions.useHTML\n         */\n        /**\n         * The vertical offset of the button's position relative to its\n         * `verticalAlign`.\n         *\n         * @sample highcharts/navigation/buttonoptions-verticalalign/\n         *         Buttons at lower right\n         *\n         * @type      {number}\n         * @default   0\n         * @since     2.0\n         * @apioption navigation.buttonOptions.y\n         */\n        /**\n         * The vertical alignment of the buttons. Can be one of `\"top\"`,\n         * `\"middle\"` or `\"bottom\"`.\n         *\n         * @sample highcharts/navigation/buttonoptions-verticalalign/\n         *         Buttons at lower right\n         *\n         * @type  {Highcharts.VerticalAlignValue}\n         * @since 2.0\n         */\n        verticalAlign: 'top',\n        /**\n         * The pixel width of the button.\n         *\n         * @sample highcharts/navigation/buttonoptions-height/\n         *         Bigger buttons\n         *\n         * @since 2.0\n         */\n        width: 28,\n        /**\n         * Fill color for the symbol within the button.\n         *\n         * @sample highcharts/navigation/buttonoptions-symbolfill/\n         *         Blue symbol stroke for one of the buttons\n         *\n         * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @since 2.0\n         */\n        symbolFill: \"#666666\" /* Palette.neutralColor60 */,\n        /**\n         * The color of the symbol's stroke or line.\n         *\n         * @sample highcharts/navigation/buttonoptions-symbolstroke/\n         *         Blue symbol stroke\n         *\n         * @type  {Highcharts.ColorString}\n         * @since 2.0\n         */\n        symbolStroke: \"#666666\" /* Palette.neutralColor60 */,\n        /**\n         * The pixel stroke width of the symbol on the button.\n         *\n         * @sample highcharts/navigation/buttonoptions-height/\n         *         Bigger buttons\n         *\n         * @since 2.0\n         */\n        symbolStrokeWidth: 3,\n        /**\n         * A configuration object for the button theme. The object accepts\n         * SVG properties like `stroke-width`, `stroke` and `fill`.\n         * Tri-state button styles are supported by the `states.hover` and\n         * `states.select` objects.\n         *\n         * @sample highcharts/navigation/buttonoptions-theme/\n         *         Theming the buttons\n         *\n         * @requires modules/exporting\n         *\n         * @since 3.0\n         */\n        theme: {\n            /**\n             * The default fill exists only to capture hover events.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            fill: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * Padding for the button.\n             */\n            padding: 5,\n            /**\n             * Default stroke for the buttons.\n             *\n             * @type      {Highcharts.ColorString}\n             */\n            stroke: 'none',\n            /**\n             * Default stroke linecap for the buttons.\n             */\n            'stroke-linecap': 'round'\n        }\n    },\n    /**\n     * CSS styles for the popup menu appearing by default when the export\n     * icon is clicked. This menu is rendered in HTML.\n     *\n     * @see In styled mode, the menu is styled with the `.highcharts-menu`\n     *      class.\n     *\n     * @sample highcharts/navigation/menustyle/\n     *         Light gray menu background\n     *\n     * @type    {Highcharts.CSSObject}\n     * @default {\"background\": \"#ffffff\", \"borderRadius\": \"3px\", \"padding\": \"0.5em\"}\n     * @since   2.0\n     */\n    menuStyle: {\n        /** @ignore-option */\n        border: 'none',\n        /** @ignore-option */\n        borderRadius: '3px',\n        /** @ignore-option */\n        background: \"#ffffff\" /* Palette.backgroundColor */,\n        /** @ignore-option */\n        padding: '0.5em'\n    },\n    /**\n     * CSS styles for the individual items within the popup menu appearing\n     * by default when the export icon is clicked. The menu items are\n     * rendered in HTML. Font size defaults to `11px` on desktop and `14px`\n     * on touch devices.\n     *\n     * @see In styled mode, the menu items are styled with the\n     *      `.highcharts-menu-item` class.\n     *\n     * @sample {highcharts} highcharts/navigation/menuitemstyle/\n     *         Add a grey stripe to the left\n     *\n     * @type    {Highcharts.CSSObject}\n     * @default {\"padding\": \"0.5em\", \"color\": \"#333333\", \"background\": \"none\", \"borderRadius\": \"3px\", \"fontSize\": \"0.8em\", \"transition\": \"background 250ms, color 250ms\"}\n     * @since   2.0\n     */\n    menuItemStyle: {\n        /** @ignore-option */\n        background: 'none',\n        /** @ignore-option */\n        borderRadius: '3px',\n        /** @ignore-option */\n        color: \"#333333\" /* Palette.neutralColor80 */,\n        /** @ignore-option */\n        padding: '0.5em',\n        /** @ignore-option */\n        fontSize: isTouchDevice ? '0.9em' : '0.8em',\n        /** @ignore-option */\n        transition: 'background 250ms, color 250ms'\n    },\n    /**\n     * CSS styles for the hover state of the individual items within the\n     * popup menu appearing by default when the export icon is clicked. The\n     * menu items are rendered in HTML.\n     *\n     * @see In styled mode, the menu items are styled with the\n     *      `.highcharts-menu-item` class.\n     *\n     * @sample highcharts/navigation/menuitemhoverstyle/\n     *         Bold text on hover\n     *\n     * @type    {Highcharts.CSSObject}\n     * @default {\"background\": \"#f2f2f2\" }\n     * @since   2.0\n     */\n    menuItemHoverStyle: {\n        /** @ignore-option */\n        background: \"#f2f2f2\" /* Palette.neutralColor5 */\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\nvar ExportingDefaults = {\n    exporting: exporting,\n    lang: lang,\n    navigation: navigation\n};\n/* harmony default export */ var Exporting_ExportingDefaults = (ExportingDefaults);\n\n;// ./code/es5/es-modules/Extensions/Exporting/ExportingSymbols.js\n/* *\n *\n *  Exporting module\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n *  Composition\n *\n * */\nvar ExportingSymbols;\n(function (ExportingSymbols) {\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    var modifiedClasses = [];\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function compose(SVGRendererClass) {\n        if (modifiedClasses.indexOf(SVGRendererClass) === -1) {\n            modifiedClasses.push(SVGRendererClass);\n            var symbols = SVGRendererClass.prototype.symbols;\n            symbols.menu = menu;\n            symbols.menuball = menuball.bind(symbols);\n        }\n    }\n    ExportingSymbols.compose = compose;\n    /**\n     * @private\n     */\n    function menu(x, y, width, height) {\n        var arr = [\n            ['M', x, y + 2.5],\n            ['L', x + width, y + 2.5],\n            ['M', x, y + height / 2 + 0.5],\n            ['L', x + width, y + height / 2 + 0.5],\n            ['M', x, y + height - 1.5],\n            ['L', x + width, y + height - 1.5]\n        ];\n        return arr;\n    }\n    /**\n     * @private\n     */\n    function menuball(x, y, width, height) {\n        var h = (height / 3) - 2;\n        var path = [];\n        path = path.concat(this.circle(width - h, y, h, h), this.circle(width - h, y + h + 4, h, h), this.circle(width - h, y + 2 * (h + 4), h, h));\n        return path;\n    }\n})(ExportingSymbols || (ExportingSymbols = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Exporting_ExportingSymbols = (ExportingSymbols);\n\n;// ./code/es5/es-modules/Extensions/Exporting/Fullscreen.js\n/* *\n *\n *  (c) 2009-2024 Rafal Sebestjanski\n *\n *  Full screen for Highcharts\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n/**\n * The module allows user to enable display chart in full screen mode.\n * Used in StockTools too.\n * Based on default solutions in browsers.\n */\n\n\n\nvar composed = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).composed;\n\nvar addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, pushUnique = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pushUnique;\n/* *\n *\n *  Functions\n *\n * */\n/**\n * @private\n */\nfunction onChartBeforeRender() {\n    /**\n     * @name Highcharts.Chart#fullscreen\n     * @type {Highcharts.Fullscreen}\n     * @requires modules/full-screen\n     */\n    this.fullscreen = new Fullscreen(this);\n}\n/* *\n *\n *  Class\n *\n * */\n/**\n * Handles displaying chart's container in the fullscreen mode.\n *\n * **Note**: Fullscreen is not supported on iPhone due to iOS limitations.\n *\n * @class\n * @name Highcharts.Fullscreen\n *\n * @requires modules/exporting\n */\nvar Fullscreen = /** @class */ (function () {\n    /* *\n     *\n     *  Constructors\n     *\n     * */\n    function Fullscreen(chart) {\n        /**\n         * Chart managed by the fullscreen controller.\n         * @name Highcharts.Fullscreen#chart\n         * @type {Highcharts.Chart}\n         */\n        this.chart = chart;\n        /**\n         * The flag is set to `true` when the chart is displayed in\n         * the fullscreen mode.\n         *\n         * @name Highcharts.Fullscreen#isOpen\n         * @type {boolean|undefined}\n         * @since 8.0.1\n         */\n        this.isOpen = false;\n        var container = chart.renderTo;\n        // Hold event and methods available only for a current browser.\n        if (!this.browserProps) {\n            if (typeof container.requestFullscreen === 'function') {\n                this.browserProps = {\n                    fullscreenChange: 'fullscreenchange',\n                    requestFullscreen: 'requestFullscreen',\n                    exitFullscreen: 'exitFullscreen'\n                };\n            }\n            else if (container.mozRequestFullScreen) {\n                this.browserProps = {\n                    fullscreenChange: 'mozfullscreenchange',\n                    requestFullscreen: 'mozRequestFullScreen',\n                    exitFullscreen: 'mozCancelFullScreen'\n                };\n            }\n            else if (container.webkitRequestFullScreen) {\n                this.browserProps = {\n                    fullscreenChange: 'webkitfullscreenchange',\n                    requestFullscreen: 'webkitRequestFullScreen',\n                    exitFullscreen: 'webkitExitFullscreen'\n                };\n            }\n            else if (container.msRequestFullscreen) {\n                this.browserProps = {\n                    fullscreenChange: 'MSFullscreenChange',\n                    requestFullscreen: 'msRequestFullscreen',\n                    exitFullscreen: 'msExitFullscreen'\n                };\n            }\n        }\n    }\n    /* *\n     *\n     *  Static Functions\n     *\n     * */\n    /**\n     * Prepares the chart class to support fullscreen.\n     *\n     * @param {typeof_Highcharts.Chart} ChartClass\n     * The chart class to decorate with fullscreen support.\n     */\n    Fullscreen.compose = function (ChartClass) {\n        if (pushUnique(composed, 'Fullscreen')) {\n            // Initialize fullscreen\n            addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n        }\n    };\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Stops displaying the chart in fullscreen mode.\n     * Exporting module required.\n     *\n     * @since       8.0.1\n     *\n     * @function    Highcharts.Fullscreen#close\n     * @return      {void}\n     * @requires    modules/full-screen\n     */\n    Fullscreen.prototype.close = function () {\n        var fullscreen = this, chart = fullscreen.chart, optionsChart = chart.options.chart;\n        fireEvent(chart, 'fullscreenClose', null, function () {\n            // Don't fire exitFullscreen() when user exited\n            // using 'Escape' button.\n            if (fullscreen.isOpen &&\n                fullscreen.browserProps &&\n                chart.container.ownerDocument instanceof Document) {\n                chart.container.ownerDocument[fullscreen.browserProps.exitFullscreen]();\n            }\n            // Unbind event as it's necessary only before exiting\n            // from fullscreen.\n            if (fullscreen.unbindFullscreenEvent) {\n                fullscreen.unbindFullscreenEvent = fullscreen\n                    .unbindFullscreenEvent();\n            }\n            chart.setSize(fullscreen.origWidth, fullscreen.origHeight, false);\n            fullscreen.origWidth = void 0;\n            fullscreen.origHeight = void 0;\n            optionsChart.width = fullscreen.origWidthOption;\n            optionsChart.height = fullscreen.origHeightOption;\n            fullscreen.origWidthOption = void 0;\n            fullscreen.origHeightOption = void 0;\n            fullscreen.isOpen = false;\n            fullscreen.setButtonText();\n        });\n    };\n    /**\n     * Displays the chart in fullscreen mode.\n     * When fired customly by user before exporting context button is created,\n     * button's text will not be replaced - it's on the user side.\n     * Exporting module required.\n     *\n     * @since       8.0.1\n     *\n     * @function Highcharts.Fullscreen#open\n     * @return      {void}\n     * @requires    modules/full-screen\n     */\n    Fullscreen.prototype.open = function () {\n        var fullscreen = this, chart = fullscreen.chart, optionsChart = chart.options.chart;\n        fireEvent(chart, 'fullscreenOpen', null, function () {\n            if (optionsChart) {\n                fullscreen.origWidthOption = optionsChart.width;\n                fullscreen.origHeightOption = optionsChart.height;\n            }\n            fullscreen.origWidth = chart.chartWidth;\n            fullscreen.origHeight = chart.chartHeight;\n            // Handle exitFullscreen() method when user clicks 'Escape' button.\n            if (fullscreen.browserProps) {\n                var unbindChange_1 = addEvent(chart.container.ownerDocument, // Chart's document\n                fullscreen.browserProps.fullscreenChange, function () {\n                    // Handle lack of async of browser's\n                    // fullScreenChange event.\n                    if (fullscreen.isOpen) {\n                        fullscreen.isOpen = false;\n                        fullscreen.close();\n                    }\n                    else {\n                        chart.setSize(null, null, false);\n                        fullscreen.isOpen = true;\n                        fullscreen.setButtonText();\n                    }\n                });\n                var unbindDestroy_1 = addEvent(chart, 'destroy', unbindChange_1);\n                fullscreen.unbindFullscreenEvent = function () {\n                    unbindChange_1();\n                    unbindDestroy_1();\n                };\n                var promise = chart.renderTo[fullscreen.browserProps.requestFullscreen]();\n                if (promise) {\n                    promise['catch'](function () {\n                        alert(// eslint-disable-line no-alert\n                        'Full screen is not supported inside a frame.');\n                    });\n                }\n            }\n        });\n    };\n    /**\n     * Replaces the exporting context button's text when toogling the\n     * fullscreen mode.\n     *\n     * @private\n     *\n     * @since 8.0.1\n     *\n     * @requires modules/full-screen\n     */\n    Fullscreen.prototype.setButtonText = function () {\n        var chart = this.chart, exportDivElements = chart.exportDivElements, exportingOptions = chart.options.exporting, menuItems = (exportingOptions &&\n            exportingOptions.buttons &&\n            exportingOptions.buttons.contextButton.menuItems), lang = chart.options.lang;\n        if (exportingOptions &&\n            exportingOptions.menuItemDefinitions &&\n            lang &&\n            lang.exitFullscreen &&\n            lang.viewFullscreen &&\n            menuItems &&\n            exportDivElements) {\n            var exportDivElement = exportDivElements[menuItems.indexOf('viewFullscreen')];\n            if (exportDivElement) {\n                highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().setElementHTML(exportDivElement, !this.isOpen ?\n                    (exportingOptions.menuItemDefinitions.viewFullscreen\n                        .text ||\n                        lang.viewFullscreen) : lang.exitFullscreen);\n            }\n        }\n    };\n    /**\n     * Toggles displaying the chart in fullscreen mode.\n     * By default, when the exporting module is enabled, a context button with\n     * a drop down menu in the upper right corner accesses this function.\n     * Exporting module required.\n     *\n     * @since 8.0.1\n     *\n     * @sample      highcharts/members/chart-togglefullscreen/\n     *              Toggle fullscreen mode from a HTML button\n     *\n     * @function Highcharts.Fullscreen#toggle\n     * @requires    modules/full-screen\n     */\n    Fullscreen.prototype.toggle = function () {\n        var fullscreen = this;\n        if (!fullscreen.isOpen) {\n            fullscreen.open();\n        }\n        else {\n            fullscreen.close();\n        }\n    };\n    return Fullscreen;\n}());\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Exporting_Fullscreen = (Fullscreen);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Gets fired when closing the fullscreen\n *\n * @callback Highcharts.FullScreenfullscreenCloseCallbackFunction\n *\n * @param {Highcharts.Chart} chart\n *        The chart on which the event occurred.\n *\n * @param {global.Event} event\n *        The event that occurred.\n */\n/**\n * Gets fired when opening the fullscreen\n *\n * @callback Highcharts.FullScreenfullscreenOpenCallbackFunction\n *\n * @param {Highcharts.Chart} chart\n *        The chart on which the event occurred.\n *\n * @param {global.Event} event\n *        The event that occurred.\n */\n(''); // Keeps doclets above separated from following code\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Fires when a fullscreen is closed through the context menu item,\n * or a fullscreen is closed on the `Escape` button click,\n * or the `Chart.fullscreen.close` method.\n *\n * @sample highcharts/chart/events-fullscreen\n *         Title size change on fullscreen open\n *\n * @type      {Highcharts.FullScreenfullscreenCloseCallbackFunction}\n * @since     10.1.0\n * @context   Highcharts.Chart\n * @requires  modules/full-screen\n * @apioption chart.events.fullscreenClose\n */\n/**\n * Fires when a fullscreen is opened through the context menu item,\n * or the `Chart.fullscreen.open` method.\n *\n * @sample highcharts/chart/events-fullscreen\n *         Title size change on fullscreen open\n *\n * @type      {Highcharts.FullScreenfullscreenOpenCallbackFunction}\n * @since     10.1.0\n * @context   Highcharts.Chart\n * @requires  modules/full-screen\n * @apioption chart.events.fullscreenOpen\n */\n(''); // Keeps doclets above in transpiled file\n\n// EXTERNAL MODULE: external {\"amd\":[\"highcharts/highcharts\",\"HttpUtilities\"],\"commonjs\":[\"highcharts\",\"HttpUtilities\"],\"commonjs2\":[\"highcharts\",\"HttpUtilities\"],\"root\":[\"Highcharts\",\"HttpUtilities\"]}\nvar highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_ = __webpack_require__(156);\nvar highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_default = /*#__PURE__*/__webpack_require__.n(highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_);\n;// ./code/es5/es-modules/Extensions/Exporting/Exporting.js\n/* *\n *\n *  Exporting module\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\nvar defaultOptions = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defaultOptions;\n\n\n\n\nvar Exporting_doc = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).doc, SVG_NS = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).SVG_NS, Exporting_win = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win;\n\n\nvar Exporting_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, css = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).css, createElement = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).createElement, discardElement = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).discardElement, extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, find = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).find, Exporting_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, isObject = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isObject, merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge, objectEach = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).objectEach, pick = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).pick, removeEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).removeEvent, uniqueKey = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).uniqueKey;\n/* *\n *\n *  Composition\n *\n * */\nvar Exporting;\n(function (Exporting) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    // These CSS properties are not inlined. Remember camelCase.\n    var inlineDenylist = [\n        /-/, // In Firefox, both hyphened and camelCased names are listed\n        /^(clipPath|cssText|d|height|width)$/, // Full words\n        /^font$/, // More specific props are set\n        /[lL]ogical(Width|Height)$/,\n        /^parentRule$/,\n        /^(cssRules|ownerRules)$/, // #19516 read-only properties\n        /perspective/,\n        /TapHighlightColor/,\n        /^transition/,\n        /^length$/, // #7700\n        /^\\d+$/ // #17538\n    ];\n    // These ones are translated to attributes rather than styles\n    var inlineToAttributes = [\n        'fill',\n        'stroke',\n        'strokeLinecap',\n        'strokeLinejoin',\n        'strokeWidth',\n        'textAnchor',\n        'x',\n        'y'\n    ];\n    Exporting.inlineAllowlist = [];\n    var unstyledElements = [\n        'clipPath',\n        'defs',\n        'desc'\n    ];\n    /* *\n     *\n     *  Variables\n     *\n     * */\n    var printingChart;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /**\n     * Add the export button to the chart, with options.\n     *\n     * @private\n     * @function Highcharts.Chart#addButton\n     * @param {Highcharts.NavigationButtonOptions} options\n     * @requires modules/exporting\n     */\n    function addButton(options) {\n        var chart = this, renderer = chart.renderer, btnOptions = merge(chart.options.navigation.buttonOptions, options), onclick = btnOptions.onclick, menuItems = btnOptions.menuItems, symbolSize = btnOptions.symbolSize || 12;\n        var symbol;\n        if (!chart.btnCount) {\n            chart.btnCount = 0;\n        }\n        // Keeps references to the button elements\n        if (!chart.exportDivElements) {\n            chart.exportDivElements = [];\n            chart.exportSVGElements = [];\n        }\n        if (btnOptions.enabled === false || !btnOptions.theme) {\n            return;\n        }\n        var theme = chart.styledMode ? {} : btnOptions.theme;\n        var callback;\n        if (onclick) {\n            callback = function (e) {\n                if (e) {\n                    e.stopPropagation();\n                }\n                onclick.call(chart, e);\n            };\n        }\n        else if (menuItems) {\n            callback = function (e) {\n                // Consistent with onclick call (#3495)\n                if (e) {\n                    e.stopPropagation();\n                }\n                chart.contextMenu(button.menuClassName, menuItems, button.translateX || 0, button.translateY || 0, button.width || 0, button.height || 0, button);\n                button.setState(2);\n            };\n        }\n        if (btnOptions.text && btnOptions.symbol) {\n            theme.paddingLeft = pick(theme.paddingLeft, 30);\n        }\n        else if (!btnOptions.text) {\n            extend(theme, {\n                width: btnOptions.width,\n                height: btnOptions.height,\n                padding: 0\n            });\n        }\n        var button = renderer\n            .button(btnOptions.text, 0, 0, callback, theme, void 0, void 0, void 0, void 0, btnOptions.useHTML)\n            .addClass(options.className)\n            .attr({\n            title: pick(chart.options.lang[btnOptions._titleKey || btnOptions.titleKey], '')\n        });\n        button.menuClassName = (options.menuClassName ||\n            'highcharts-menu-' + chart.btnCount++);\n        if (btnOptions.symbol) {\n            symbol = renderer\n                .symbol(btnOptions.symbol, Math.round((btnOptions.symbolX || 0) - (symbolSize / 2)), Math.round((btnOptions.symbolY || 0) - (symbolSize / 2)), symbolSize, symbolSize\n            // If symbol is an image, scale it (#7957)\n            , {\n                width: symbolSize,\n                height: symbolSize\n            })\n                .addClass('highcharts-button-symbol')\n                .attr({\n                zIndex: 1\n            })\n                .add(button);\n            if (!chart.styledMode) {\n                symbol.attr({\n                    stroke: btnOptions.symbolStroke,\n                    fill: btnOptions.symbolFill,\n                    'stroke-width': btnOptions.symbolStrokeWidth || 1\n                });\n            }\n        }\n        button\n            .add(chart.exportingGroup)\n            .align(extend(btnOptions, {\n            width: button.width,\n            x: pick(btnOptions.x, chart.buttonOffset) // #1654\n        }), true, 'spacingBox');\n        chart.buttonOffset += (((button.width || 0) + btnOptions.buttonSpacing) *\n            (btnOptions.align === 'right' ? -1 : 1));\n        chart.exportSVGElements.push(button, symbol);\n    }\n    /**\n     * Clean up after printing a chart.\n     *\n     * @function Highcharts#afterPrint\n     *\n     * @private\n     *\n     * @param {Highcharts.Chart} chart\n     *        Chart that was (or suppose to be) printed\n     *\n     * @emits Highcharts.Chart#event:afterPrint\n     */\n    function afterPrint() {\n        var chart = this;\n        if (!chart.printReverseInfo) {\n            return void 0;\n        }\n        var _a = chart.printReverseInfo, childNodes = _a.childNodes, origDisplay = _a.origDisplay, resetParams = _a.resetParams;\n        // Put the chart back in\n        chart.moveContainers(chart.renderTo);\n        // Restore all body content\n        [].forEach.call(childNodes, function (node, i) {\n            if (node.nodeType === 1) {\n                node.style.display = (origDisplay[i] || '');\n            }\n        });\n        chart.isPrinting = false;\n        // Reset printMaxWidth\n        if (resetParams) {\n            chart.setSize.apply(chart, resetParams);\n        }\n        delete chart.printReverseInfo;\n        printingChart = void 0;\n        Exporting_fireEvent(chart, 'afterPrint');\n    }\n    /**\n     * Prepare chart and document before printing a chart.\n     *\n     * @function Highcharts#beforePrint\n     *\n     * @private\n     *\n     *\n     * @emits Highcharts.Chart#event:beforePrint\n     */\n    function beforePrint() {\n        var _a;\n        var chart = this, body = Exporting_doc.body, printMaxWidth = chart.options.exporting.printMaxWidth, printReverseInfo = {\n            childNodes: body.childNodes,\n            origDisplay: [],\n            resetParams: void 0\n        };\n        chart.isPrinting = true;\n        (_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.reset(void 0, 0);\n        Exporting_fireEvent(chart, 'beforePrint');\n        // Handle printMaxWidth\n        var handleMaxWidth = printMaxWidth &&\n            chart.chartWidth > printMaxWidth;\n        if (handleMaxWidth) {\n            printReverseInfo.resetParams = [\n                chart.options.chart.width,\n                void 0,\n                false\n            ];\n            chart.setSize(printMaxWidth, void 0, false);\n        }\n        // Hide all body content\n        [].forEach.call(printReverseInfo.childNodes, function (node, i) {\n            if (node.nodeType === 1) {\n                printReverseInfo.origDisplay[i] = node.style.display;\n                node.style.display = 'none';\n            }\n        });\n        // Pull out the chart\n        chart.moveContainers(body);\n        // Storage details for undo action after printing\n        chart.printReverseInfo = printReverseInfo;\n    }\n    /**\n     * @private\n     */\n    function chartCallback(chart) {\n        var composition = chart;\n        composition.renderExporting();\n        Exporting_addEvent(chart, 'redraw', composition.renderExporting);\n        // Destroy the export elements at chart destroy\n        Exporting_addEvent(chart, 'destroy', composition.destroyExport);\n        // Uncomment this to see a button directly below the chart, for quick\n        // testing of export\n        /*\n        let button, viewImage, viewSource;\n        if (!chart.renderer.forExport) {\n            viewImage = function () {\n                let div = doc.createElement('div');\n                div.innerHTML = chart.getSVGForExport();\n                chart.renderTo.parentNode.appendChild(div);\n            };\n\n            viewSource = function () {\n                let pre = doc.createElement('pre');\n                pre.innerHTML = chart.getSVGForExport()\n                    .replace(/</g, '\\n&lt;')\n                    .replace(/>/g, '&gt;');\n                chart.renderTo.parentNode.appendChild(pre);\n            };\n\n            viewImage();\n\n            // View SVG Image\n            button = doc.createElement('button');\n            button.innerHTML = 'View SVG Image';\n            chart.renderTo.parentNode.appendChild(button);\n            button.onclick = viewImage;\n\n            // View SVG Source\n            button = doc.createElement('button');\n            button.innerHTML = 'View SVG Source';\n            chart.renderTo.parentNode.appendChild(button);\n            button.onclick = viewSource;\n        }\n        //*/\n    }\n    /**\n     * @private\n     */\n    function compose(ChartClass, SVGRendererClass) {\n        Exporting_ExportingSymbols.compose(SVGRendererClass);\n        Exporting_Fullscreen.compose(ChartClass);\n        var chartProto = ChartClass.prototype;\n        if (!chartProto.exportChart) {\n            chartProto.afterPrint = afterPrint;\n            chartProto.exportChart = exportChart;\n            chartProto.inlineStyles = inlineStyles;\n            chartProto.print = print;\n            chartProto.sanitizeSVG = sanitizeSVG;\n            chartProto.getChartHTML = getChartHTML;\n            chartProto.getSVG = getSVG;\n            chartProto.getSVGForExport = getSVGForExport;\n            chartProto.getFilename = getFilename;\n            chartProto.moveContainers = moveContainers;\n            chartProto.beforePrint = beforePrint;\n            chartProto.contextMenu = contextMenu;\n            chartProto.addButton = addButton;\n            chartProto.destroyExport = destroyExport;\n            chartProto.renderExporting = renderExporting;\n            chartProto.callbacks.push(chartCallback);\n            Exporting_addEvent(ChartClass, 'init', onChartInit);\n            Exporting_addEvent(ChartClass, 'layOutTitle', onChartLayOutTitle);\n            if ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isSafari) {\n                Exporting_win.matchMedia('print').addListener(function (mqlEvent) {\n                    if (!printingChart) {\n                        return void 0;\n                    }\n                    if (mqlEvent.matches) {\n                        printingChart.beforePrint();\n                    }\n                    else {\n                        printingChart.afterPrint();\n                    }\n                });\n            }\n            defaultOptions.exporting = merge(Exporting_ExportingDefaults.exporting, defaultOptions.exporting);\n            defaultOptions.lang = merge(Exporting_ExportingDefaults.lang, defaultOptions.lang);\n            // Buttons and menus are collected in a separate config option set\n            // called 'navigation'. This can be extended later to add control\n            // buttons like zoom and pan right click menus.\n            defaultOptions.navigation = merge(Exporting_ExportingDefaults.navigation, defaultOptions.navigation);\n        }\n    }\n    Exporting.compose = compose;\n    /**\n     * Display a popup menu for choosing the export type.\n     *\n     * @private\n     * @function Highcharts.Chart#contextMenu\n     * @param {string} className\n     *        An identifier for the menu.\n     * @param {Array<string|Highcharts.ExportingMenuObject>} items\n     *        A collection with text and onclicks for the items.\n     * @param {number} x\n     *        The x position of the opener button\n     * @param {number} y\n     *        The y position of the opener button\n     * @param {number} width\n     *        The width of the opener button\n     * @param {number} height\n     *        The height of the opener button\n     * @requires modules/exporting\n     */\n    function contextMenu(className, items, x, y, width, height, button) {\n        var _a, _b;\n        var chart = this, navOptions = chart.options.navigation, chartWidth = chart.chartWidth, chartHeight = chart.chartHeight, cacheName = 'cache-' + className, \n        // For mouse leave detection\n        menuPadding = Math.max(width, height);\n        var innerMenu, menu = chart[cacheName];\n        // Create the menu only the first time\n        if (!menu) {\n            // Create a HTML element above the SVG\n            chart.exportContextMenu = chart[cacheName] = menu =\n                createElement('div', {\n                    className: className\n                }, __assign({ position: 'absolute', zIndex: 1000, padding: menuPadding + 'px', pointerEvents: 'auto' }, chart.renderer.style), ((_a = chart.scrollablePlotArea) === null || _a === void 0 ? void 0 : _a.fixedDiv) || chart.container);\n            innerMenu = createElement('ul', { className: 'highcharts-menu' }, chart.styledMode ? {} : {\n                listStyle: 'none',\n                margin: 0,\n                padding: 0\n            }, menu);\n            // Presentational CSS\n            if (!chart.styledMode) {\n                css(innerMenu, extend({\n                    MozBoxShadow: '3px 3px 10px #888',\n                    WebkitBoxShadow: '3px 3px 10px #888',\n                    boxShadow: '3px 3px 10px #888'\n                }, navOptions.menuStyle));\n            }\n            // Hide on mouse out\n            menu.hideMenu = function () {\n                css(menu, { display: 'none' });\n                if (button) {\n                    button.setState(0);\n                }\n                chart.openMenu = false;\n                // #10361, #9998\n                css(chart.renderTo, { overflow: 'hidden' });\n                css(chart.container, { overflow: 'hidden' });\n                highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().clearTimeout(menu.hideTimer);\n                Exporting_fireEvent(chart, 'exportMenuHidden');\n            };\n            // Hide the menu some time after mouse leave (#1357)\n            chart.exportEvents.push(Exporting_addEvent(menu, 'mouseleave', function () {\n                menu.hideTimer = Exporting_win.setTimeout(menu.hideMenu, 500);\n            }), Exporting_addEvent(menu, 'mouseenter', function () {\n                highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().clearTimeout(menu.hideTimer);\n            }), \n            // Hide it on clicking or touching outside the menu (#2258,\n            // #2335, #2407)\n            Exporting_addEvent(Exporting_doc, 'mouseup', function (e) {\n                var _a;\n                if (!((_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.inClass(e.target, className))) {\n                    menu.hideMenu();\n                }\n            }), Exporting_addEvent(menu, 'click', function () {\n                if (chart.openMenu) {\n                    menu.hideMenu();\n                }\n            }));\n            // Create the items\n            items.forEach(function (item) {\n                if (typeof item === 'string') {\n                    item = chart.options.exporting\n                        .menuItemDefinitions[item];\n                }\n                if (isObject(item, true)) {\n                    var element = void 0;\n                    if (item.separator) {\n                        element = createElement('hr', void 0, void 0, innerMenu);\n                    }\n                    else {\n                        // When chart initialized with the table, wrong button\n                        // text displayed, #14352.\n                        if (item.textKey === 'viewData' &&\n                            chart.isDataTableVisible) {\n                            item.textKey = 'hideData';\n                        }\n                        element = createElement('li', {\n                            className: 'highcharts-menu-item',\n                            onclick: function (e) {\n                                if (e) { // IE7\n                                    e.stopPropagation();\n                                }\n                                menu.hideMenu();\n                                if (typeof item !== 'string' && item.onclick) {\n                                    item.onclick.apply(chart, arguments);\n                                }\n                            }\n                        }, void 0, innerMenu);\n                        highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().setElementHTML(element, item.text ||\n                            chart.options.lang[item.textKey]);\n                        if (!chart.styledMode) {\n                            element.onmouseover = function () {\n                                css(this, navOptions.menuItemHoverStyle);\n                            };\n                            element.onmouseout = function () {\n                                css(this, navOptions.menuItemStyle);\n                            };\n                            css(element, extend({\n                                cursor: 'pointer'\n                            }, navOptions.menuItemStyle || {}));\n                        }\n                    }\n                    // Keep references to menu divs to be able to destroy them\n                    chart.exportDivElements.push(element);\n                }\n            });\n            // Keep references to menu and innerMenu div to be able to destroy\n            // them\n            chart.exportDivElements.push(innerMenu, menu);\n            chart.exportMenuWidth = menu.offsetWidth;\n            chart.exportMenuHeight = menu.offsetHeight;\n        }\n        var menuStyle = { display: 'block' };\n        // If outside right, right align it\n        if (x + (chart.exportMenuWidth || 0) > chartWidth) {\n            menuStyle.right = (chartWidth - x - width - menuPadding) + 'px';\n        }\n        else {\n            menuStyle.left = (x - menuPadding) + 'px';\n        }\n        // If outside bottom, bottom align it\n        if (y + height + (chart.exportMenuHeight || 0) > chartHeight &&\n            ((_b = button.alignOptions) === null || _b === void 0 ? void 0 : _b.verticalAlign) !== 'top') {\n            menuStyle.bottom = (chartHeight - y - menuPadding) + 'px';\n        }\n        else {\n            menuStyle.top = (y + height - menuPadding) + 'px';\n        }\n        css(menu, menuStyle);\n        // #10361, #9998\n        css(chart.renderTo, { overflow: '' });\n        css(chart.container, { overflow: '' });\n        chart.openMenu = true;\n        Exporting_fireEvent(chart, 'exportMenuShown');\n    }\n    /**\n     * Destroy the export buttons.\n     * @private\n     * @function Highcharts.Chart#destroyExport\n     * @param {global.Event} [e]\n     * @requires modules/exporting\n     */\n    function destroyExport(e) {\n        var chart = e ? e.target : this, exportSVGElements = chart.exportSVGElements, exportDivElements = chart.exportDivElements, exportEvents = chart.exportEvents;\n        var cacheName;\n        // Destroy the extra buttons added\n        if (exportSVGElements) {\n            exportSVGElements.forEach(function (elem, i) {\n                // Destroy and null the svg elements\n                if (elem) { // #1822\n                    elem.onclick = elem.ontouchstart = null;\n                    cacheName = 'cache-' + elem.menuClassName;\n                    if (chart[cacheName]) {\n                        delete chart[cacheName];\n                    }\n                    exportSVGElements[i] = elem.destroy();\n                }\n            });\n            exportSVGElements.length = 0;\n        }\n        // Destroy the exporting group\n        if (chart.exportingGroup) {\n            chart.exportingGroup.destroy();\n            delete chart.exportingGroup;\n        }\n        // Destroy the divs for the menu\n        if (exportDivElements) {\n            exportDivElements.forEach(function (elem, i) {\n                if (elem) {\n                    // Remove the event handler\n                    highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().clearTimeout(elem.hideTimer); // #5427\n                    removeEvent(elem, 'mouseleave');\n                    // Remove inline events\n                    // (chart.exportDivElements as any)[i] =\n                    exportDivElements[i] =\n                        elem.onmouseout =\n                            elem.onmouseover =\n                                elem.ontouchstart =\n                                    elem.onclick = null;\n                    // Destroy the div by moving to garbage bin\n                    discardElement(elem);\n                }\n            });\n            exportDivElements.length = 0;\n        }\n        if (exportEvents) {\n            exportEvents.forEach(function (unbind) {\n                unbind();\n            });\n            exportEvents.length = 0;\n        }\n    }\n    /**\n     * Exporting module required. Submit an SVG version of the chart to a server\n     * along with some parameters for conversion.\n     *\n     * @sample highcharts/members/chart-exportchart/\n     *         Export with no options\n     * @sample highcharts/members/chart-exportchart-filename/\n     *         PDF type and custom filename\n     * @sample highcharts/members/chart-exportchart-custom-background/\n     *         Different chart background in export\n     * @sample stock/members/chart-exportchart/\n     *         Export with Highcharts Stock\n     *\n     * @function Highcharts.Chart#exportChart\n     *\n     * @param {Highcharts.ExportingOptions} exportingOptions\n     *        Exporting options in addition to those defined in\n     *        [exporting](https://api.highcharts.com/highcharts/exporting).\n     *\n     * @param {Highcharts.Options} chartOptions\n     *        Additional chart options for the exported chart. For example a\n     *        different background color can be added here, or `dataLabels` for\n     *        export only.\n     *\n     * @requires modules/exporting\n     */\n    function exportChart(exportingOptions, chartOptions) {\n        var svg = this.getSVGForExport(exportingOptions, chartOptions);\n        // Merge the options\n        exportingOptions = merge(this.options.exporting, exportingOptions);\n        // Do the post\n        highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_default().post(exportingOptions.url, {\n            filename: exportingOptions.filename ?\n                exportingOptions.filename.replace(/\\//g, '-') :\n                this.getFilename(),\n            type: exportingOptions.type,\n            width: exportingOptions.width,\n            scale: exportingOptions.scale,\n            svg: svg\n        }, exportingOptions.fetchOptions);\n    }\n    /**\n     * Return the unfiltered innerHTML of the chart container. Used as hook for\n     * plugins. In styled mode, it also takes care of inlining CSS style rules.\n     *\n     * @see Chart#getSVG\n     *\n     * @function Highcharts.Chart#getChartHTML\n     *\n     * @return {string}\n     * The unfiltered SVG of the chart.\n     *\n     * @requires modules/exporting\n     */\n    function getChartHTML(applyStyleSheets) {\n        if (applyStyleSheets) {\n            this.inlineStyles();\n        }\n        return this.container.innerHTML;\n    }\n    /**\n     * Get the default file name used for exported charts. By default it creates\n     * a file name based on the chart title.\n     *\n     * @function Highcharts.Chart#getFilename\n     *\n     * @return {string} A file name without extension.\n     *\n     * @requires modules/exporting\n     */\n    function getFilename() {\n        var s = this.userOptions.title && this.userOptions.title.text;\n        var filename = this.options.exporting.filename;\n        if (filename) {\n            return filename.replace(/\\//g, '-');\n        }\n        if (typeof s === 'string') {\n            filename = s\n                .toLowerCase()\n                .replace(/<\\/?[^>]+(>|$)/g, '') // Strip HTML tags\n                .replace(/[\\s_]+/g, '-')\n                .replace(/[^a-z\\d\\-]/g, '') // Preserve only latin\n                .replace(/^[\\-]+/g, '') // Dashes in the start\n                .replace(/[\\-]+/g, '-') // Dashes in a row\n                .substr(0, 24)\n                .replace(/[\\-]+$/g, ''); // Dashes in the end;\n        }\n        if (!filename || filename.length < 5) {\n            filename = 'chart';\n        }\n        return filename;\n    }\n    /**\n     * Return an SVG representation of the chart.\n     *\n     * @sample highcharts/members/chart-getsvg/\n     *         View the SVG from a button\n     *\n     * @function Highcharts.Chart#getSVG\n     *\n     * @param {Highcharts.Options} [chartOptions]\n     *        Additional chart options for the generated SVG representation. For\n     *        collections like `xAxis`, `yAxis` or `series`, the additional\n     *        options is either merged in to the original item of the same\n     *        `id`, or to the first item if a common id is not found.\n     *\n     * @return {string}\n     *         The SVG representation of the rendered chart.\n     *\n     * @emits Highcharts.Chart#event:getSVG\n     *\n     * @requires modules/exporting\n     */\n    function getSVG(chartOptions) {\n        var _a;\n        var chart = this;\n        var svg, seriesOptions, \n        // Copy the options and add extra options\n        options = merge(chart.options, chartOptions);\n        // Use userOptions to make the options chain in series right (#3881)\n        options.plotOptions = merge(chart.userOptions.plotOptions, chartOptions && chartOptions.plotOptions);\n        // ... and likewise with time, avoid that undefined time properties are\n        // merged over legacy global time options\n        options.time = merge(chart.userOptions.time, chartOptions && chartOptions.time);\n        // Create a sandbox where a new chart will be generated\n        var sandbox = createElement('div', null, {\n            position: 'absolute',\n            top: '-9999em',\n            width: chart.chartWidth + 'px',\n            height: chart.chartHeight + 'px'\n        }, Exporting_doc.body);\n        // Get the source size\n        var cssWidth = chart.renderTo.style.width, cssHeight = chart.renderTo.style.height, sourceWidth = options.exporting.sourceWidth ||\n            options.chart.width ||\n            (/px$/.test(cssWidth) && parseInt(cssWidth, 10)) ||\n            (options.isGantt ? 800 : 600), sourceHeight = options.exporting.sourceHeight ||\n            options.chart.height ||\n            (/px$/.test(cssHeight) && parseInt(cssHeight, 10)) ||\n            400;\n        // Override some options\n        extend(options.chart, {\n            animation: false,\n            renderTo: sandbox,\n            forExport: true,\n            renderer: 'SVGRenderer',\n            width: sourceWidth,\n            height: sourceHeight\n        });\n        options.exporting.enabled = false; // Hide buttons in print\n        delete options.data; // #3004\n        // prepare for replicating the chart\n        options.series = [];\n        chart.series.forEach(function (serie) {\n            seriesOptions = merge(serie.userOptions, {\n                animation: false, // Turn off animation\n                enableMouseTracking: false,\n                showCheckbox: false,\n                visible: serie.visible\n            });\n            // Used for the navigator series that has its own option set\n            if (!seriesOptions.isInternal) {\n                options.series.push(seriesOptions);\n            }\n        });\n        var colls = {};\n        chart.axes.forEach(function (axis) {\n            // Assign an internal key to ensure a one-to-one mapping (#5924)\n            if (!axis.userOptions.internalKey) { // #6444\n                axis.userOptions.internalKey = uniqueKey();\n            }\n            if (!axis.options.isInternal) {\n                if (!colls[axis.coll]) {\n                    colls[axis.coll] = true;\n                    options[axis.coll] = [];\n                }\n                options[axis.coll].push(merge(axis.userOptions, {\n                    visible: axis.visible,\n                    // Force some options that could have be set directly on\n                    // the axis while missing in the userOptions or options.\n                    type: axis.type,\n                    uniqueNames: axis.uniqueNames\n                }));\n            }\n        });\n        // Make sure the `colorAxis` object of the `defaultOptions` isn't used\n        // in the chart copy's user options, because a color axis should only be\n        // added when the user actually applies it.\n        options.colorAxis = chart.userOptions.colorAxis;\n        // Generate the chart copy\n        var chartCopy = new chart.constructor(options, chart.callback);\n        // Axis options and series options  (#2022, #3900, #5982)\n        if (chartOptions) {\n            ['xAxis', 'yAxis', 'series'].forEach(function (coll) {\n                var collOptions = {};\n                if (chartOptions[coll]) {\n                    collOptions[coll] = chartOptions[coll];\n                    chartCopy.update(collOptions);\n                }\n            });\n        }\n        // Reflect axis extremes in the export (#5924)\n        chart.axes.forEach(function (axis) {\n            var axisCopy = find(chartCopy.axes, function (copy) {\n                return copy.options.internalKey ===\n                    axis.userOptions.internalKey;\n            }), extremes = axis.getExtremes(), userMin = extremes.userMin, userMax = extremes.userMax;\n            if (axisCopy &&\n                ((typeof userMin !== 'undefined' &&\n                    userMin !== axisCopy.min) || (typeof userMax !== 'undefined' &&\n                    userMax !== axisCopy.max))) {\n                axisCopy.setExtremes(userMin, userMax, true, false);\n            }\n        });\n        // Get the SVG from the container's innerHTML\n        svg = chartCopy.getChartHTML(chart.styledMode ||\n            ((_a = options.exporting) === null || _a === void 0 ? void 0 : _a.applyStyleSheets));\n        Exporting_fireEvent(this, 'getSVG', { chartCopy: chartCopy });\n        svg = chart.sanitizeSVG(svg, options);\n        // Free up memory\n        options = null;\n        chartCopy.destroy();\n        discardElement(sandbox);\n        return svg;\n    }\n    /**\n     * @private\n     * @function Highcharts.Chart#getSVGForExport\n     */\n    function getSVGForExport(options, chartOptions) {\n        var chartExportingOptions = this.options.exporting;\n        return this.getSVG(merge({ chart: { borderRadius: 0 } }, chartExportingOptions.chartOptions, chartOptions, {\n            exporting: {\n                sourceWidth: ((options && options.sourceWidth) ||\n                    chartExportingOptions.sourceWidth),\n                sourceHeight: ((options && options.sourceHeight) ||\n                    chartExportingOptions.sourceHeight)\n            }\n        }));\n    }\n    /**\n     * Make hyphenated property names out of camelCase\n     * @private\n     * @param {string} prop\n     * Property name in camelCase\n     * @return {string}\n     * Hyphenated property name\n     */\n    function hyphenate(prop) {\n        return prop.replace(/[A-Z]/g, function (match) {\n            return '-' + match.toLowerCase();\n        });\n    }\n    /**\n     * Analyze inherited styles from stylesheets and add them inline\n     *\n     * @private\n     * @function Highcharts.Chart#inlineStyles\n     *\n     * @todo What are the border styles for text about? In general, text has a\n     *       lot of properties.\n     *\n     * @todo Make it work with IE9 and IE10.\n     *\n     * @requires modules/exporting\n     */\n    function inlineStyles() {\n        var denylist = inlineDenylist, allowlist = Exporting.inlineAllowlist, // For IE\n        defaultStyles = {};\n        var dummySVG;\n        // Create an iframe where we read default styles without pollution from\n        // this body\n        var iframe = Exporting_doc.createElement('iframe');\n        css(iframe, {\n            width: '1px',\n            height: '1px',\n            visibility: 'hidden'\n        });\n        Exporting_doc.body.appendChild(iframe);\n        var iframeDoc = (iframe.contentWindow && iframe.contentWindow.document);\n        if (iframeDoc) {\n            iframeDoc.body.appendChild(iframeDoc.createElementNS(SVG_NS, 'svg'));\n        }\n        /**\n         * Call this on all elements and recurse to children\n         * @private\n         * @param {Highcharts.HTMLDOMElement} node\n         *        Element child\n             */\n        function recurse(node) {\n            var filteredStyles = {};\n            var styles, parentStyles, dummy, denylisted, allowlisted, i;\n            /**\n             * Check computed styles and whether they are in the allow/denylist\n             * for styles or attributes.\n             * @private\n             * @param {string} val\n             *        Style value\n             * @param {string} prop\n             *        Style property name\n                     */\n            function filterStyles(val, prop) {\n                // Check against allowlist & denylist\n                denylisted = allowlisted = false;\n                if (allowlist.length) {\n                    // Styled mode in IE has a allowlist instead. Exclude all\n                    // props not in this list.\n                    i = allowlist.length;\n                    while (i-- && !allowlisted) {\n                        allowlisted = allowlist[i].test(prop);\n                    }\n                    denylisted = !allowlisted;\n                }\n                // Explicitly remove empty transforms\n                if (prop === 'transform' && val === 'none') {\n                    denylisted = true;\n                }\n                i = denylist.length;\n                while (i-- && !denylisted) {\n                    if (prop.length > 1000 /* RegexLimits.shortLimit */) {\n                        throw new Error('Input too long');\n                    }\n                    denylisted = (denylist[i].test(prop) ||\n                        typeof val === 'function');\n                }\n                if (!denylisted) {\n                    // If parent node has the same style, it gets inherited, no\n                    // need to inline it. Top-level props should be diffed\n                    // against parent (#7687).\n                    if ((parentStyles[prop] !== val ||\n                        node.nodeName === 'svg') &&\n                        defaultStyles[node.nodeName][prop] !== val) {\n                        // Attributes\n                        if (!inlineToAttributes ||\n                            inlineToAttributes.indexOf(prop) !== -1) {\n                            if (val) {\n                                node.setAttribute(hyphenate(prop), val);\n                            }\n                            // Styles\n                        }\n                        else {\n                            filteredStyles[prop] = val;\n                        }\n                    }\n                }\n            }\n            if (iframeDoc &&\n                node.nodeType === 1 &&\n                unstyledElements.indexOf(node.nodeName) === -1) {\n                styles = Exporting_win.getComputedStyle(node, null);\n                parentStyles = node.nodeName === 'svg' ?\n                    {} :\n                    Exporting_win.getComputedStyle(node.parentNode, null);\n                // Get default styles from the browser so that we don't have to\n                // add these\n                if (!defaultStyles[node.nodeName]) {\n                    /*\n                    If (!dummySVG) {\n                        dummySVG = doc.createElementNS(H.SVG_NS, 'svg');\n                        dummySVG.setAttribute('version', '1.1');\n                        doc.body.appendChild(dummySVG);\n                    }\n                    */\n                    dummySVG = iframeDoc.getElementsByTagName('svg')[0];\n                    dummy = iframeDoc.createElementNS(node.namespaceURI, node.nodeName);\n                    dummySVG.appendChild(dummy);\n                    // Get the defaults into a standard object (simple merge\n                    // won't do)\n                    var s = Exporting_win.getComputedStyle(dummy, null), defaults = {};\n                    for (var key in s) {\n                        if (key.length < 1000 /* RegexLimits.shortLimit */ &&\n                            typeof s[key] === 'string' &&\n                            !/^\\d+$/.test(key)) {\n                            defaults[key] = s[key];\n                        }\n                    }\n                    defaultStyles[node.nodeName] = defaults;\n                    // Remove default fill, otherwise text disappears when\n                    // exported\n                    if (node.nodeName === 'text') {\n                        delete defaultStyles.text.fill;\n                    }\n                    dummySVG.removeChild(dummy);\n                }\n                // Loop through all styles and add them inline if they are ok\n                for (var p in styles) {\n                    if (\n                    // Some browsers put lots of styles on the prototype...\n                    (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isFirefox ||\n                        (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isMS ||\n                        (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isSafari || // #16902\n                        // ... Chrome puts them on the instance\n                        Object.hasOwnProperty.call(styles, p)) {\n                        filterStyles(styles[p], p);\n                    }\n                }\n                // Apply styles\n                css(node, filteredStyles);\n                // Set default stroke width (needed at least for IE)\n                if (node.nodeName === 'svg') {\n                    node.setAttribute('stroke-width', '1px');\n                }\n                if (node.nodeName === 'text') {\n                    return;\n                }\n                // Recurse\n                [].forEach.call(node.children || node.childNodes, recurse);\n            }\n        }\n        /**\n         * Remove the dummy objects used to get defaults\n         * @private\n         */\n        function tearDown() {\n            dummySVG.parentNode.removeChild(dummySVG);\n            // Remove trash from DOM that stayed after each exporting\n            iframe.parentNode.removeChild(iframe);\n        }\n        recurse(this.container.querySelector('svg'));\n        tearDown();\n    }\n    /**\n     * Move the chart container(s) to another div.\n     *\n     * @function Highcharts#moveContainers\n     *\n     * @private\n     *\n     * @param {Highcharts.HTMLDOMElement} moveTo\n     *        Move target\n     */\n    function moveContainers(moveTo) {\n        var scrollablePlotArea = this.scrollablePlotArea;\n        (\n        // When scrollablePlotArea is active (#9533)\n        scrollablePlotArea ?\n            [\n                scrollablePlotArea.fixedDiv,\n                scrollablePlotArea.scrollingContainer\n            ] :\n            [this.container]).forEach(function (div) {\n            moveTo.appendChild(div);\n        });\n    }\n    /**\n     * Add update methods to handle chart.update and chart.exporting.update and\n     * chart.navigation.update. These must be added to the chart instance rather\n     * than the Chart prototype in order to use the chart instance inside the\n     * update function.\n     * @private\n     */\n    function onChartInit() {\n        var chart = this, \n        /**\n         * @private\n         * @param {\"exporting\"|\"navigation\"} prop\n         *        Property name in option root\n         * @param {Highcharts.ExportingOptions|Highcharts.NavigationOptions} options\n         *        Options to update\n         * @param {boolean} [redraw=true]\n         *        Whether to redraw\n                 */\n        update = function (prop, options, redraw) {\n            chart.isDirtyExporting = true;\n            merge(true, chart.options[prop], options);\n            if (pick(redraw, true)) {\n                chart.redraw();\n            }\n        };\n        chart.exporting = {\n            update: function (options, redraw) {\n                update('exporting', options, redraw);\n            }\n        };\n        // Register update() method for navigation. Cannot be set the same way\n        // as for exporting, because navigation options are shared with bindings\n        // which has separate update() logic.\n        Chart_ChartNavigationComposition\n            .compose(chart).navigation\n            .addUpdate(function (options, redraw) {\n            update('navigation', options, redraw);\n        });\n    }\n    /**\n     * On layout of titles (title, subtitle and caption), adjust the `alignTo``\n     * box to avoid the context menu button.\n     * @private\n     */\n    function onChartLayOutTitle(_a) {\n        var _b, _c, _d, _e;\n        var alignTo = _a.alignTo, key = _a.key, textPxLength = _a.textPxLength;\n        var exportingOptions = this.options.exporting, _f = merge((_b = this.options.navigation) === null || _b === void 0 ? void 0 : _b.buttonOptions, (_c = exportingOptions === null || exportingOptions === void 0 ? void 0 : exportingOptions.buttons) === null || _c === void 0 ? void 0 : _c.contextButton), align = _f.align, _g = _f.buttonSpacing, buttonSpacing = _g === void 0 ? 0 : _g, verticalAlign = _f.verticalAlign, _h = _f.width, width = _h === void 0 ? 0 : _h, space = alignTo.width - textPxLength, widthAdjust = width + buttonSpacing;\n        if (((_d = exportingOptions === null || exportingOptions === void 0 ? void 0 : exportingOptions.enabled) !== null && _d !== void 0 ? _d : true) &&\n            key === 'title' &&\n            align === 'right' &&\n            verticalAlign === 'top') {\n            if (space < 2 * widthAdjust) {\n                if (space < widthAdjust) {\n                    alignTo.width -= widthAdjust;\n                }\n                else if (((_e = this.title) === null || _e === void 0 ? void 0 : _e.alignValue) !== 'left') {\n                    alignTo.x -= widthAdjust - space / 2;\n                }\n            }\n        }\n    }\n    /**\n     * Exporting module required. Clears away other elements in the page and\n     * prints the chart as it is displayed. By default, when the exporting\n     * module is enabled, a context button with a drop down menu in the upper\n     * right corner accesses this function.\n     *\n     * @sample highcharts/members/chart-print/\n     *         Print from a HTML button\n     *\n     * @function Highcharts.Chart#print\n     *\n     *\n     * @emits Highcharts.Chart#event:beforePrint\n     * @emits Highcharts.Chart#event:afterPrint\n     *\n     * @requires modules/exporting\n     */\n    function print() {\n        var chart = this;\n        if (chart.isPrinting) { // Block the button while in printing mode\n            return;\n        }\n        printingChart = chart;\n        if (!(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isSafari) {\n            chart.beforePrint();\n        }\n        // Give the browser time to draw WebGL content, an issue that randomly\n        // appears (at least) in Chrome ~67 on the Mac (#8708).\n        setTimeout(function () {\n            Exporting_win.focus(); // #1510\n            Exporting_win.print();\n            // Allow the browser to prepare before reverting\n            if (!(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isSafari) {\n                setTimeout(function () {\n                    chart.afterPrint();\n                }, 1000);\n            }\n        }, 1);\n    }\n    /**\n     * Add the buttons on chart load\n     * @private\n     * @function Highcharts.Chart#renderExporting\n     * @requires modules/exporting\n     */\n    function renderExporting() {\n        var chart = this, exportingOptions = chart.options.exporting, buttons = exportingOptions.buttons, isDirty = chart.isDirtyExporting || !chart.exportSVGElements;\n        chart.buttonOffset = 0;\n        if (chart.isDirtyExporting) {\n            chart.destroyExport();\n        }\n        if (isDirty && exportingOptions.enabled !== false) {\n            chart.exportEvents = [];\n            chart.exportingGroup = chart.exportingGroup ||\n                chart.renderer.g('exporting-group').attr({\n                    zIndex: 3 // #4955, // #8392\n                }).add();\n            objectEach(buttons, function (button) {\n                chart.addButton(button);\n            });\n            chart.isDirtyExporting = false;\n        }\n    }\n    /**\n     * Exporting module only. A collection of fixes on the produced SVG to\n     * account for expand properties, browser bugs.\n     * Returns a cleaned SVG.\n     *\n     * @private\n     * @function Highcharts.Chart#sanitizeSVG\n     * @param {string} svg\n     *        SVG code to sanitize\n     * @param {Highcharts.Options} options\n     *        Chart options to apply\n     * @return {string}\n     *         Sanitized SVG code\n     * @requires modules/exporting\n     */\n    function sanitizeSVG(svg, options) {\n        var split = svg.indexOf('</svg>') + 6;\n        var html = svg.substr(split);\n        // Remove any HTML added to the container after the SVG (#894, #9087)\n        svg = svg.substr(0, split);\n        // Move HTML into a foreignObject\n        if (options && options.exporting && options.exporting.allowHTML) {\n            if (html) {\n                html = '<foreignObject x=\"0\" y=\"0\" ' +\n                    'width=\"' + options.chart.width + '\" ' +\n                    'height=\"' + options.chart.height + '\">' +\n                    '<body xmlns=\"http://www.w3.org/1999/xhtml\">' +\n                    // Some tags needs to be closed in xhtml (#13726)\n                    html.replace(/(<(?:img|br).*?(?=\\>))>/g, '$1 />') +\n                    '</body>' +\n                    '</foreignObject>';\n                svg = svg.replace('</svg>', html + '</svg>');\n            }\n        }\n        svg = svg\n            .replace(/zIndex=\"[^\"]+\"/g, '')\n            .replace(/symbolName=\"[^\"]+\"/g, '')\n            .replace(/jQuery\\d+=\"[^\"]+\"/g, '')\n            .replace(/url\\((\"|&quot;)(.*?)(\"|&quot;)\\;?\\)/g, 'url($2)')\n            .replace(/url\\([^#]+#/g, 'url(#')\n            .replace(/<svg /, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" ')\n            .replace(/ (NS\\d+\\:)?href=/g, ' xlink:href=') // #3567\n            .replace(/\\n+/g, ' ')\n            // Batik doesn't support rgba fills and strokes (#3095)\n            .replace(/(fill|stroke)=\"rgba\\(([ \\d]+,[ \\d]+,[ \\d]+),([ \\d\\.]+)\\)\"/g, // eslint-disable-line max-len\n        '$1=\"rgb($2)\" $1-opacity=\"$3\"')\n            // Replace HTML entities, issue #347\n            .replace(/&nbsp;/g, '\\u00A0') // No-break space\n            .replace(/&shy;/g, '\\u00AD'); // Soft hyphen\n        return svg;\n    }\n})(Exporting || (Exporting = {}));\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var Exporting_Exporting = (Exporting);\n/* *\n *\n *  API Declarations\n *\n * */\n/**\n * Gets fired after a chart is printed through the context menu item or the\n * Chart.print method.\n *\n * @callback Highcharts.ExportingAfterPrintCallbackFunction\n *\n * @param {Highcharts.Chart} this\n *        The chart on which the event occurred.\n *\n * @param {global.Event} event\n *        The event that occurred.\n */\n/**\n * Gets fired before a chart is printed through the context menu item or the\n * Chart.print method.\n *\n * @callback Highcharts.ExportingBeforePrintCallbackFunction\n *\n * @param {Highcharts.Chart} this\n *        The chart on which the event occurred.\n *\n * @param {global.Event} event\n *        The event that occurred.\n */\n/**\n * Function to call if the offline-exporting module fails to export a chart on\n * the client side.\n *\n * @callback Highcharts.ExportingErrorCallbackFunction\n *\n * @param {Highcharts.ExportingOptions} options\n *        The exporting options.\n *\n * @param {global.Error} err\n *        The error from the module.\n */\n/**\n * Definition for a menu item in the context menu.\n *\n * @interface Highcharts.ExportingMenuObject\n */ /**\n* The text for the menu item.\n*\n* @name Highcharts.ExportingMenuObject#text\n* @type {string|undefined}\n*/ /**\n* If internationalization is required, the key to a language string.\n*\n* @name Highcharts.ExportingMenuObject#textKey\n* @type {string|undefined}\n*/ /**\n* The click handler for the menu item.\n*\n* @name Highcharts.ExportingMenuObject#onclick\n* @type {Highcharts.EventCallbackFunction<Highcharts.Chart>|undefined}\n*/ /**\n* Indicates a separator line instead of an item.\n*\n* @name Highcharts.ExportingMenuObject#separator\n* @type {boolean|undefined}\n*/\n/**\n * Possible MIME types for exporting.\n *\n * @typedef {\"image/png\"|\"image/jpeg\"|\"application/pdf\"|\"image/svg+xml\"} Highcharts.ExportingMimeTypeValue\n */\n(''); // Keeps doclets above in transpiled file\n/* *\n *\n *  API Options\n *\n * */\n/**\n * Fires after a chart is printed through the context menu item or the\n * `Chart.print` method.\n *\n * @sample highcharts/chart/events-beforeprint-afterprint/\n *         Rescale the chart to print\n *\n * @type      {Highcharts.ExportingAfterPrintCallbackFunction}\n * @since     4.1.0\n * @context   Highcharts.Chart\n * @requires  modules/exporting\n * @apioption chart.events.afterPrint\n */\n/**\n * Fires before a chart is printed through the context menu item or\n * the `Chart.print` method.\n *\n * @sample highcharts/chart/events-beforeprint-afterprint/\n *         Rescale the chart to print\n *\n * @type      {Highcharts.ExportingBeforePrintCallbackFunction}\n * @since     4.1.0\n * @context   Highcharts.Chart\n * @requires  modules/exporting\n * @apioption chart.events.beforePrint\n */\n(''); // Keeps doclets above in transpiled file\n\n;// ./code/es5/es-modules/Extensions/OfflineExporting/OfflineExportingDefaults.js\n/* *\n *\n *  (c) 2010-2024 Torstein Honsi\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n/* *\n *\n * Declarations\n *\n * */\nvar OfflineExportingDefaults = {\n    libURL: 'https://code.highcharts.com/12.0.1/lib/',\n    // When offline-exporting is loaded, redefine the menu item definitions\n    // related to download.\n    menuItemDefinitions: {\n        downloadPNG: {\n            textKey: 'downloadPNG',\n            onclick: function () {\n                this.exportChartLocal();\n            }\n        },\n        downloadJPEG: {\n            textKey: 'downloadJPEG',\n            onclick: function () {\n                this.exportChartLocal({\n                    type: 'image/jpeg'\n                });\n            }\n        },\n        downloadSVG: {\n            textKey: 'downloadSVG',\n            onclick: function () {\n                this.exportChartLocal({\n                    type: 'image/svg+xml'\n                });\n            }\n        },\n        downloadPDF: {\n            textKey: 'downloadPDF',\n            onclick: function () {\n                this.exportChartLocal({\n                    type: 'application/pdf'\n                });\n            }\n        }\n    }\n};\n/* *\n *\n *  Default Export\n *\n * */\n/* harmony default export */ var OfflineExporting_OfflineExportingDefaults = (OfflineExportingDefaults);\n\n;// ./code/es5/es-modules/Extensions/OfflineExporting/OfflineExporting.js\n/* *\n *\n *  Client side exporting module\n *\n *  (c) 2015 Torstein Honsi / Oystein Moseng\n *\n *  License: www.highcharts.com/license\n *\n *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n *\n * */\n\n\n\n\nvar OfflineExporting_defaultOptions = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).defaultOptions;\n\nvar OfflineExporting_downloadURL = Extensions_DownloadURL.downloadURL;\n\n\nvar OfflineExporting_doc = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).doc, OfflineExporting_win = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).win;\n\nvar ajax = (highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_default()).ajax;\n\n\nvar OfflineExporting_addEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).addEvent, error = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).error, OfflineExporting_extend = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).extend, OfflineExporting_fireEvent = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).fireEvent, OfflineExporting_merge = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).merge;\nhighcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().allowedAttributes.push('data-z-index', 'fill-opacity', 'filter', 'rx', 'ry', 'stroke-dasharray', 'stroke-linejoin', 'stroke-opacity', 'text-anchor', 'transform', 'version', 'viewBox', 'visibility', 'xmlns', 'xmlns:xlink');\nhighcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().allowedTags.push('desc', 'clippath', 'g');\n/* *\n *\n *  Composition\n *\n * */\nvar OfflineExporting;\n(function (OfflineExporting) {\n    /* *\n     *\n     *  Declarations\n     *\n     * */\n    /* *\n     *\n     *  Constants\n     *\n     * */\n    // Dummy object so we can reuse our canvas-tools.js without errors\n    OfflineExporting.CanVGRenderer = {}, OfflineExporting.domurl = OfflineExporting_win.URL || OfflineExporting_win.webkitURL || OfflineExporting_win, \n    // Milliseconds to defer image load event handlers to offset IE bug\n    OfflineExporting.loadEventDeferDelay = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isMS ? 150 : 0;\n    /* *\n     *\n     *  Functions\n     *\n     * */\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Extends OfflineExporting with Chart.\n     * @private\n     */\n    function compose(ChartClass) {\n        var chartProto = ChartClass.prototype;\n        if (!chartProto.exportChartLocal) {\n            chartProto.getSVGForLocalExport = getSVGForLocalExport;\n            chartProto.exportChartLocal = exportChartLocal;\n            // Extend the default options to use the local exporter logic\n            OfflineExporting_merge(true, OfflineExporting_defaultOptions.exporting, OfflineExporting_OfflineExportingDefaults);\n        }\n        return ChartClass;\n    }\n    OfflineExporting.compose = compose;\n    /**\n     * Get data URL to an image of an SVG and call download on it options\n     * object:\n     * - **filename:** Name of resulting downloaded file without extension.\n     * Default is `chart`.\n     *\n     * - **type:** File type of resulting download. Default is `image/png`.\n     *\n     * - **scale:** Scaling factor of downloaded image compared to source.\n     * Default is `1`.\n     * - **libURL:** URL pointing to location of dependency scripts to download\n     * on demand. Default is the exporting.libURL option of the global\n     * Highcharts options pointing to our server.\n     *\n     * @function Highcharts.downloadSVGLocal\n     *\n     * @param {string} svg\n     * The generated SVG\n     *\n     * @param {Highcharts.ExportingOptions} options\n     * The exporting options\n     *\n     * @param {Function} failCallback\n     * The callback function in case of errors\n     *\n     * @param {Function} [successCallback]\n     * The callback function in case of success\n     *\n     */\n    function downloadSVGLocal(svg, options, failCallback, successCallback) {\n        var dummySVGContainer = OfflineExporting_doc.createElement('div'), imageType = options.type || 'image/png', filename = ((options.filename || 'chart') +\n            '.' +\n            (imageType === 'image/svg+xml' ?\n                'svg' : imageType.split('/')[1])), scale = options.scale || 1;\n        var svgurl, blob, finallyHandler, libURL = (options.libURL || OfflineExporting_defaultOptions.exporting.libURL), objectURLRevoke = true, pdfFont = options.pdfFont;\n        // Allow libURL to end with or without fordward slash\n        libURL = libURL.slice(-1) !== '/' ? libURL + '/' : libURL;\n        /*\n         * Detect if we need to load TTF fonts for the PDF, then load them and\n         * proceed.\n         *\n         * @private\n         */\n        var loadPdfFonts = function (svgElement, callback) {\n            var hasNonASCII = function (s) { return (\n            // eslint-disable-next-line no-control-regex\n            /[^\\u0000-\\u007F\\u200B]+/.test(s)); };\n            // Register an event in order to add the font once jsPDF is\n            // initialized\n            var addFont = function (variant, base64) {\n                OfflineExporting_win.jspdf.jsPDF.API.events.push([\n                    'initialized',\n                    function () {\n                        this.addFileToVFS(variant, base64);\n                        this.addFont(variant, 'HighchartsFont', variant);\n                        if (!this.getFontList().HighchartsFont) {\n                            this.setFont('HighchartsFont');\n                        }\n                    }\n                ]);\n            };\n            // If there are no non-ASCII characters in the SVG, do not use\n            // bother downloading the font files\n            if (pdfFont && !hasNonASCII(svgElement.textContent || '')) {\n                pdfFont = void 0;\n            }\n            // Add new font if the URL is declared, #6417.\n            var variants = ['normal', 'italic', 'bold', 'bolditalic'];\n            // Shift the first element off the variants and add as a font.\n            // Then asynchronously trigger the next variant until calling the\n            // callback when the variants are empty.\n            var normalBase64;\n            var shiftAndLoadVariant = function () {\n                var variant = variants.shift();\n                // All variants shifted and possibly loaded, proceed\n                if (!variant) {\n                    return callback();\n                }\n                var url = pdfFont && pdfFont[variant];\n                if (url) {\n                    ajax({\n                        url: url,\n                        responseType: 'blob',\n                        success: function (data, xhr) {\n                            var reader = new FileReader();\n                            reader.onloadend = function () {\n                                if (typeof this.result === 'string') {\n                                    var base64 = this.result.split(',')[1];\n                                    addFont(variant, base64);\n                                    if (variant === 'normal') {\n                                        normalBase64 = base64;\n                                    }\n                                }\n                                shiftAndLoadVariant();\n                            };\n                            reader.readAsDataURL(xhr.response);\n                        },\n                        error: shiftAndLoadVariant\n                    });\n                }\n                else {\n                    // For other variants, fall back to normal text weight/style\n                    if (normalBase64) {\n                        addFont(variant, normalBase64);\n                    }\n                    shiftAndLoadVariant();\n                }\n            };\n            shiftAndLoadVariant();\n        };\n        /*\n         * @private\n         */\n        var downloadPDF = function () {\n            highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().setElementHTML(dummySVGContainer, svg);\n            var textElements = dummySVGContainer.getElementsByTagName('text'), \n            // Copy style property to element from parents if it's not\n            // there. Searches up hierarchy until it finds prop, or hits the\n            // chart container.\n            setStylePropertyFromParents = function (el, propName) {\n                var curParent = el;\n                while (curParent && curParent !== dummySVGContainer) {\n                    if (curParent.style[propName]) {\n                        var value = curParent.style[propName];\n                        if (propName === 'fontSize' && /em$/.test(value)) {\n                            value = Math.round(parseFloat(value) * 16) + 'px';\n                        }\n                        el.style[propName] = value;\n                        break;\n                    }\n                    curParent = curParent.parentNode;\n                }\n            };\n            var titleElements, outlineElements;\n            // Workaround for the text styling. Making sure it does pick up\n            // settings for parent elements.\n            [].forEach.call(textElements, function (el) {\n                // Workaround for the text styling. making sure it does pick up\n                // the root element\n                ['fontFamily', 'fontSize']\n                    .forEach(function (property) {\n                    setStylePropertyFromParents(el, property);\n                });\n                el.style.fontFamily = pdfFont && pdfFont.normal ?\n                    // Custom PDF font\n                    'HighchartsFont' :\n                    // Generic font (serif, sans-serif etc)\n                    String(el.style.fontFamily &&\n                        el.style.fontFamily.split(' ').splice(-1));\n                // Workaround for plotband with width, removing title from text\n                // nodes\n                titleElements = el.getElementsByTagName('title');\n                [].forEach.call(titleElements, function (titleElement) {\n                    el.removeChild(titleElement);\n                });\n                // Remove all .highcharts-text-outline elements, #17170\n                outlineElements =\n                    el.getElementsByClassName('highcharts-text-outline');\n                while (outlineElements.length > 0) {\n                    var outline = outlineElements[0];\n                    if (outline.parentNode) {\n                        outline.parentNode.removeChild(outline);\n                    }\n                }\n            });\n            var svgNode = dummySVGContainer.querySelector('svg');\n            if (svgNode) {\n                loadPdfFonts(svgNode, function () {\n                    svgToPdf(svgNode, 0, scale, function (pdfData) {\n                        try {\n                            OfflineExporting_downloadURL(pdfData, filename);\n                            if (successCallback) {\n                                successCallback();\n                            }\n                        }\n                        catch (e) {\n                            failCallback(e);\n                        }\n                    });\n                });\n            }\n        };\n        // Initiate download depending on file type\n        if (imageType === 'image/svg+xml') {\n            // SVG download. In this case, we want to use Microsoft specific\n            // Blob if available\n            try {\n                if (typeof OfflineExporting_win.MSBlobBuilder !== 'undefined') {\n                    blob = new OfflineExporting_win.MSBlobBuilder();\n                    blob.append(svg);\n                    svgurl = blob.getBlob('image/svg+xml');\n                }\n                else {\n                    svgurl = svgToDataUrl(svg);\n                }\n                OfflineExporting_downloadURL(svgurl, filename);\n                if (successCallback) {\n                    successCallback();\n                }\n            }\n            catch (e) {\n                failCallback(e);\n            }\n        }\n        else if (imageType === 'application/pdf') {\n            if (OfflineExporting_win.jspdf && OfflineExporting_win.jspdf.jsPDF) {\n                downloadPDF();\n            }\n            else {\n                // Must load pdf libraries first. // Don't destroy the object\n                // URL yet since we are doing things asynchronously. A cleaner\n                // solution would be nice, but this will do for now.\n                objectURLRevoke = true;\n                getScript(libURL + 'jspdf.js', function () {\n                    getScript(libURL + 'svg2pdf.js', downloadPDF);\n                });\n            }\n        }\n        else {\n            // PNG/JPEG download - create bitmap from SVG\n            svgurl = svgToDataUrl(svg);\n            finallyHandler = function () {\n                try {\n                    OfflineExporting.domurl.revokeObjectURL(svgurl);\n                }\n                catch (e) {\n                    // Ignore\n                }\n            };\n            // First, try to get PNG by rendering on canvas\n            imageToDataUrl(svgurl, imageType, {}, scale, function (imageURL) {\n                // Success\n                try {\n                    OfflineExporting_downloadURL(imageURL, filename);\n                    if (successCallback) {\n                        successCallback();\n                    }\n                }\n                catch (e) {\n                    failCallback(e);\n                }\n            }, function () {\n                if (svg.length > 100000000 /* RegexLimits.svgLimit */) {\n                    throw new Error('Input too long');\n                }\n                // Failed due to tainted canvas\n                // Create new and untainted canvas\n                var canvas = OfflineExporting_doc.createElement('canvas'), ctx = canvas.getContext('2d'), matchedImageWidth = svg.match(\n                // eslint-disable-next-line max-len\n                /^<svg[^>]*\\s{,1000}width\\s{,1000}=\\s{,1000}\\\"?(\\d+)\\\"?[^>]*>/), matchedImageHeight = svg.match(\n                // eslint-disable-next-line max-len\n                /^<svg[^>]*\\s{0,1000}height\\s{,1000}=\\s{,1000}\\\"?(\\d+)\\\"?[^>]*>/);\n                if (ctx && matchedImageWidth && matchedImageHeight) {\n                    var imageWidth = +matchedImageWidth[1] * scale, imageHeight = +matchedImageHeight[1] * scale, downloadWithCanVG = function () {\n                        var v = OfflineExporting_win.canvg.Canvg.fromString(ctx, svg);\n                        v.start();\n                        try {\n                            OfflineExporting_downloadURL(OfflineExporting_win.navigator.msSaveOrOpenBlob ?\n                                canvas.msToBlob() :\n                                canvas.toDataURL(imageType), filename);\n                            if (successCallback) {\n                                successCallback();\n                            }\n                        }\n                        catch (e) {\n                            failCallback(e);\n                        }\n                        finally {\n                            finallyHandler();\n                        }\n                    };\n                    canvas.width = imageWidth;\n                    canvas.height = imageHeight;\n                    if (OfflineExporting_win.canvg) {\n                        // Use preloaded canvg\n                        downloadWithCanVG();\n                    }\n                    else {\n                        // Must load canVG first.\n                        // Don't destroy the object URL yet since we are\n                        // doing things asynchronously. A cleaner solution\n                        // would be nice, but this will do for now.\n                        objectURLRevoke = true;\n                        getScript(libURL + 'canvg.js', downloadWithCanVG);\n                    }\n                }\n            }, \n            // No canvas support\n            failCallback, \n            // Failed to load image\n            failCallback, \n            // Finally\n            function () {\n                if (objectURLRevoke) {\n                    finallyHandler();\n                }\n            });\n        }\n    }\n    OfflineExporting.downloadSVGLocal = downloadSVGLocal;\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Exporting and offline-exporting modules required. Export a chart to\n     * an image locally in the user's browser.\n     *\n     * @function Highcharts.Chart#exportChartLocal\n     *\n     * @param  {Highcharts.ExportingOptions} [exportingOptions]\n     *         Exporting options, the same as in\n     *         {@link Highcharts.Chart#exportChart}.\n     *\n     * @param  {Highcharts.Options} [chartOptions]\n     *         Additional chart options for the exported chart. For example\n     *         a different background color can be added here, or\n     *         `dataLabels` for export only.\n     *\n     *\n     * @requires modules/exporting\n     * @requires modules/offline-exporting\n     */\n    function exportChartLocal(exportingOptions, chartOptions) {\n        var chart = this, options = OfflineExporting_merge(chart.options.exporting, exportingOptions), fallbackToExportServer = function (err) {\n            if (options.fallbackToExportServer === false) {\n                if (options.error) {\n                    options.error(options, err);\n                }\n                else {\n                    error(28, true); // Fallback disabled\n                }\n            }\n            else {\n                chart.exportChart(options);\n            }\n        }, svgSuccess = function (svg) {\n            // If SVG contains foreignObjects PDF fails in all browsers\n            // and all exports except SVG will fail in IE, as both CanVG\n            // and svg2pdf choke on this. Gracefully fall back.\n            if (svg.indexOf('<foreignObject') > -1 &&\n                options.type !== 'image/svg+xml' &&\n                ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isMS || options.type === 'application/pdf')) {\n                fallbackToExportServer(new Error('Image type not supported for charts with embedded HTML'));\n            }\n            else {\n                OfflineExporting.downloadSVGLocal(svg, OfflineExporting_extend({ filename: chart.getFilename() }, options), fallbackToExportServer, function () { return OfflineExporting_fireEvent(chart, 'exportChartLocalSuccess'); });\n            }\n        }, \n        // Return true if the SVG contains images with external data. With\n        // the boost module there are `image` elements with encoded PNGs,\n        // these are supported by svg2pdf and should pass (#10243).\n        hasExternalImages = function () {\n            return [].some.call(chart.container.getElementsByTagName('image'), function (image) {\n                var href = image.getAttribute('href');\n                return (href !== '' &&\n                    typeof href === 'string' &&\n                    href.indexOf('data:') !== 0);\n            });\n        };\n        // If we are on IE and in styled mode, add an allowlist to the renderer\n        // for inline styles that we want to pass through. There are so many\n        // styles by default in IE that we don't want to denylist them all.\n        if ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isMS && chart.styledMode && !Exporting_Exporting.inlineAllowlist.length) {\n            Exporting_Exporting.inlineAllowlist.push(/^blockSize/, /^border/, /^caretColor/, /^color/, /^columnRule/, /^columnRuleColor/, /^cssFloat/, /^cursor/, /^fill$/, /^fillOpacity/, /^font/, /^inlineSize/, /^length/, /^lineHeight/, /^opacity/, /^outline/, /^parentRule/, /^rx$/, /^ry$/, /^stroke/, /^textAlign/, /^textAnchor/, /^textDecoration/, /^transform/, /^vectorEffect/, /^visibility/, /^x$/, /^y$/);\n        }\n        // Always fall back on:\n        // - MS browsers: Embedded images JPEG/PNG, or any PDF\n        // - Embedded images and PDF\n        if (((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()).isMS &&\n            (options.type === 'application/pdf' ||\n                chart.container.getElementsByTagName('image').length &&\n                    options.type !== 'image/svg+xml')) || (options.type === 'application/pdf' &&\n            hasExternalImages())) {\n            fallbackToExportServer(new Error('Image type not supported for this chart/browser.'));\n            return;\n        }\n        chart.getSVGForLocalExport(options, chartOptions || {}, fallbackToExportServer, svgSuccess);\n    }\n    /**\n     * Downloads a script and executes a callback when done.\n     *\n     * @private\n     * @function getScript\n     * @param {string} scriptLocation\n     * @param {Function} callback\n     */\n    function getScript(scriptLocation, callback) {\n        var head = OfflineExporting_doc.getElementsByTagName('head')[0], script = OfflineExporting_doc.createElement('script');\n        script.type = 'text/javascript';\n        script.src = scriptLocation;\n        script.onload = callback;\n        script.onerror = function () {\n            error('Error loading script ' + scriptLocation);\n        };\n        head.appendChild(script);\n    }\n    OfflineExporting.getScript = getScript;\n    /**\n     * Get SVG of chart prepared for client side export. This converts\n     * embedded images in the SVG to data URIs. It requires the regular\n     * exporting module. The options and chartOptions arguments are passed\n     * to the getSVGForExport function.\n     *\n     * @private\n     * @function Highcharts.Chart#getSVGForLocalExport\n     * @param {Highcharts.ExportingOptions} options\n     * @param {Highcharts.Options} chartOptions\n     * @param {Function} failCallback\n     * @param {Function} successCallback\n     */\n    function getSVGForLocalExport(options, chartOptions, failCallback, successCallback) {\n        var chart = this, \n        // After grabbing the SVG of the chart's copy container we need\n        // to do sanitation on the SVG\n        sanitize = function (svg) { return chart.sanitizeSVG(svg, chartCopyOptions); }, \n        // When done with last image we have our SVG\n        checkDone = function () {\n            if (images && imagesEmbedded === imagesLength) {\n                successCallback(sanitize(chartCopyContainer.innerHTML));\n            }\n        }, \n        // Success handler, we converted image to base64!\n        embeddedSuccess = function (imageURL, imageType, callbackArgs) {\n            ++imagesEmbedded;\n            // Change image href in chart copy\n            callbackArgs.imageElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', imageURL);\n            checkDone();\n        };\n        var el, chartCopyContainer, chartCopyOptions, href = null, images, imagesLength = 0, imagesEmbedded = 0;\n        // Hook into getSVG to get a copy of the chart copy's\n        // container (#8273)\n        chart.unbindGetSVG = OfflineExporting_addEvent(chart, 'getSVG', function (e) {\n            chartCopyOptions = e.chartCopy.options;\n            chartCopyContainer = e.chartCopy.container.cloneNode(true);\n            images = chartCopyContainer && chartCopyContainer\n                .getElementsByTagName('image') || [];\n            imagesLength = images.length;\n        });\n        // Trigger hook to get chart copy\n        chart.getSVGForExport(options, chartOptions);\n        try {\n            // If there are no images to embed, the SVG is okay now.\n            if (!images || !images.length) {\n                // Use SVG of chart copy\n                successCallback(sanitize(chartCopyContainer.innerHTML));\n                return;\n            }\n            // Go through the images we want to embed\n            for (var i = 0; i < images.length; i++) {\n                el = images[i];\n                href = el.getAttributeNS('http://www.w3.org/1999/xlink', 'href');\n                if (href) {\n                    OfflineExporting.imageToDataUrl(href, 'image/png', { imageElement: el }, options.scale, embeddedSuccess, \n                    // Tainted canvas\n                    failCallback, \n                    // No canvas support\n                    failCallback, \n                    // Failed to load source\n                    failCallback);\n                    // Hidden, boosted series have blank href (#10243)\n                }\n                else {\n                    imagesEmbedded++;\n                    el.parentNode.removeChild(el);\n                    i--;\n                    checkDone();\n                }\n            }\n        }\n        catch (e) {\n            failCallback(e);\n        }\n        // Clean up\n        chart.unbindGetSVG();\n    }\n    /**\n     * Get data:URL from image URL. Pass in callbacks to handle results.\n     *\n     * @private\n     * @function Highcharts.imageToDataUrl\n     *\n     * @param {string} imageURL\n     *\n     * @param {string} imageType\n     *\n     * @param {*} callbackArgs\n     *        callbackArgs is used only by callbacks.\n     *\n     * @param {number} scale\n     *\n     * @param {Function} successCallback\n     *        Receives four arguments: imageURL, imageType, callbackArgs,\n     *        and scale.\n     *\n     * @param {Function} taintedCallback\n     *        Receives four arguments: imageURL, imageType, callbackArgs,\n     *        and scale.\n     *\n     * @param {Function} noCanvasSupportCallback\n     *        Receives four arguments: imageURL, imageType, callbackArgs,\n     *        and scale.\n     *\n     * @param {Function} failedLoadCallback\n     *        Receives four arguments: imageURL, imageType, callbackArgs,\n     *        and scale.\n     *\n     * @param {Function} [finallyCallback]\n     *        finallyCallback is always called at the end of the process. All\n     *        callbacks receive four arguments: imageURL, imageType,\n     *        callbackArgs, and scale.\n     */\n    function imageToDataUrl(imageURL, imageType, callbackArgs, scale, successCallback, taintedCallback, noCanvasSupportCallback, failedLoadCallback, finallyCallback) {\n        var img = new OfflineExporting_win.Image(), taintedHandler;\n        var loadHandler = function () {\n            setTimeout(function () {\n                var canvas = OfflineExporting_doc.createElement('canvas'), ctx = canvas.getContext && canvas.getContext('2d');\n                var dataURL;\n                try {\n                    if (!ctx) {\n                        noCanvasSupportCallback(imageURL, imageType, callbackArgs, scale);\n                    }\n                    else {\n                        canvas.height = img.height * scale;\n                        canvas.width = img.width * scale;\n                        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                        // Now we try to get the contents of the canvas.\n                        try {\n                            dataURL = canvas.toDataURL(imageType);\n                            successCallback(dataURL, imageType, callbackArgs, scale);\n                        }\n                        catch (e) {\n                            taintedHandler(imageURL, imageType, callbackArgs, scale);\n                        }\n                    }\n                }\n                finally {\n                    if (finallyCallback) {\n                        finallyCallback(imageURL, imageType, callbackArgs, scale);\n                    }\n                }\n                // IE bug where image is not always ready despite calling load\n                // event.\n            }, OfflineExporting.loadEventDeferDelay);\n        }, \n        // Image load failed (e.g. invalid URL)\n        errorHandler = function () {\n            failedLoadCallback(imageURL, imageType, callbackArgs, scale);\n            if (finallyCallback) {\n                finallyCallback(imageURL, imageType, callbackArgs, scale);\n            }\n        };\n        // This is called on load if the image drawing to canvas failed with a\n        // security error. We retry the drawing with crossOrigin set to\n        // Anonymous.\n        taintedHandler = function () {\n            img = new OfflineExporting_win.Image();\n            taintedHandler = taintedCallback;\n            // Must be set prior to loading image source\n            img.crossOrigin = 'Anonymous';\n            img.onload = loadHandler;\n            img.onerror = errorHandler;\n            img.src = imageURL;\n        };\n        img.onload = loadHandler;\n        img.onerror = errorHandler;\n        img.src = imageURL;\n    }\n    OfflineExporting.imageToDataUrl = imageToDataUrl;\n    /**\n     * Get blob URL from SVG code. Falls back to normal data URI.\n     *\n     * @private\n     * @function Highcharts.svgToDataURL\n     */\n    function svgToDataUrl(svg) {\n        // Webkit and not chrome\n        var userAgent = OfflineExporting_win.navigator.userAgent;\n        var webKit = (userAgent.indexOf('WebKit') > -1 &&\n            userAgent.indexOf('Chrome') < 0);\n        try {\n            // Safari requires data URI since it doesn't allow navigation to\n            // blob URLs. ForeignObjects also don't work well in Blobs in Chrome\n            // (#14780).\n            if (!webKit && svg.indexOf('<foreignObject') === -1) {\n                return OfflineExporting.domurl.createObjectURL(new OfflineExporting_win.Blob([svg], {\n                    type: 'image/svg+xml;charset-utf-16'\n                }));\n            }\n        }\n        catch (e) {\n            // Ignore\n        }\n        return 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(svg);\n    }\n    OfflineExporting.svgToDataUrl = svgToDataUrl;\n    /* eslint-disable valid-jsdoc */\n    /**\n     * @private\n     */\n    function svgToPdf(svgElement, margin, scale, callback) {\n        var width = (Number(svgElement.getAttribute('width')) + 2 * margin) *\n            scale, height = (Number(svgElement.getAttribute('height')) + 2 * margin) *\n            scale, pdfDoc = new OfflineExporting_win.jspdf.jsPDF(// eslint-disable-line new-cap\n        // setting orientation to portrait if height exceeds width\n        height > width ? 'p' : 'l', 'pt', [width, height]);\n        // Workaround for #7090, hidden elements were drawn anyway. It comes\n        // down to https://github.com/yWorks/svg2pdf.js/issues/28. Check this\n        // later.\n        [].forEach.call(svgElement.querySelectorAll('*[visibility=\"hidden\"]'), function (node) {\n            node.parentNode.removeChild(node);\n        });\n        // Workaround for #13948, multiple stops in linear gradient set to 0\n        // causing error in Acrobat\n        var gradients = svgElement.querySelectorAll('linearGradient');\n        for (var index = 0; index < gradients.length; index++) {\n            var gradient = gradients[index];\n            var stops = gradient.querySelectorAll('stop');\n            var i = 0;\n            while (i < stops.length &&\n                stops[i].getAttribute('offset') === '0' &&\n                stops[i + 1].getAttribute('offset') === '0') {\n                stops[i].remove();\n                i++;\n            }\n        }\n        // Workaround for #15135, zero width spaces, which Highcharts uses\n        // to break lines, are not correctly rendered in PDF. Replace it\n        // with a regular space and offset by some pixels to compensate.\n        [].forEach.call(svgElement.querySelectorAll('tspan'), function (tspan) {\n            if (tspan.textContent === '\\u200B') {\n                tspan.textContent = ' ';\n                tspan.setAttribute('dx', -5);\n            }\n        });\n        pdfDoc.svg(svgElement, {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height,\n            removeInvalid: true\n        }).then(function () { return callback(pdfDoc.output('datauristring')); });\n    }\n    OfflineExporting.svgToPdf = svgToPdf;\n})(OfflineExporting || (OfflineExporting = {}));\n/* *\n *\n * Default Export\n *\n * */\n/* harmony default export */ var OfflineExporting_OfflineExporting = (OfflineExporting);\n\n;// ./code/es5/es-modules/masters/modules/offline-exporting.src.js\n\n\n\n\n\nvar G = (highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default());\n// Compatibility\nG.dataURLtoBlob = G.dataURLtoBlob || Extensions_DownloadURL.dataURLtoBlob;\nG.downloadSVGLocal = OfflineExporting_OfflineExporting.downloadSVGLocal;\nG.downloadURL = G.downloadURL || Extensions_DownloadURL.downloadURL;\n// Compose\nOfflineExporting_OfflineExporting.compose(G.Chart);\n/* harmony default export */ var offline_exporting_src = ((highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default()));\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__660__","__WEBPACK_EXTERNAL_MODULE__960__","__WEBPACK_EXTERNAL_MODULE__156__","ChartNavigationComposition","Additions","ExportingSymbols","Exporting","OfflineExporting","__webpack_modules__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__webpack_exports__","offline_exporting_src","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_","highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default","isSafari","win","doc","document","domurl","URL","webkitURL","dataURLtoBlob","dataURL","parts","replace","match","length","atob","ArrayBuffer","Uint8Array","Blob","createObjectURL","binStr","buf","binary","i","charCodeAt","Extensions_DownloadURL","downloadURL","filename","nav","navigator","createElement","String","msSaveOrOpenBlob","userAgent","Error","isOldEdgeBrowser","test","safariBlob","indexOf","download","href","body","appendChild","click","removeChild","open","_a","location","highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_","highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default","compose","chart","navigation","updates","addUpdate","updateFn","push","update","options","redraw","_this","forEach","Chart_ChartNavigationComposition","Exporting_ExportingDefaults","exporting","allowTableSorting","type","url","pdfFont","normal","bold","bolditalic","italic","printMaxWidth","scale","buttons","contextButton","className","menuClassName","symbol","titleKey","menuItems","y","menuItemDefinitions","viewFullscreen","textKey","onclick","fullscreen","toggle","printChart","print","separator","downloadPNG","exportChart","downloadJPEG","downloadPDF","downloadSVG","lang","exitFullscreen","contextButtonTitle","buttonOptions","symbolSize","symbolX","symbolY","align","buttonSpacing","height","verticalAlign","width","symbolFill","symbolStroke","symbolStrokeWidth","theme","fill","padding","stroke","menuStyle","border","borderRadius","background","menuItemStyle","color","fontSize","isTouchDevice","transition","menuItemHoverStyle","modifiedClasses","menu","x","menuball","h","path","concat","circle","SVGRendererClass","symbols","bind","Exporting_ExportingSymbols","composed","addEvent","fireEvent","pushUnique","onChartBeforeRender","Fullscreen","isOpen","container","renderTo","browserProps","requestFullscreen","fullscreenChange","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","ChartClass","close","optionsChart","ownerDocument","Document","unbindFullscreenEvent","setSize","origWidth","origHeight","origWidthOption","origHeightOption","setButtonText","chartWidth","chartHeight","unbindChange_1","unbindDestroy_1","promise","alert","exportDivElements","exportingOptions","exportDivElement","setElementHTML","text","highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_","highcharts_HttpUtilities_commonjs_highcharts_HttpUtilities_commonjs2_highcharts_HttpUtilities_root_Highcharts_HttpUtilities_default","__assign","assign","t","s","arguments","p","apply","defaultOptions","Exporting_doc","SVG_NS","Exporting_win","Exporting_addEvent","css","discardElement","extend","find","Exporting_fireEvent","isObject","merge","objectEach","pick","removeEvent","uniqueKey","printingChart","inlineDenylist","inlineToAttributes","inlineAllowlist","unstyledElements","addButton","callback","renderer","btnOptions","btnCount","exportSVGElements","enabled","styledMode","e","stopPropagation","contextMenu","button","translateX","translateY","setState","paddingLeft","useHTML","addClass","attr","title","_titleKey","Math","round","zIndex","add","exportingGroup","buttonOffset","afterPrint","printReverseInfo","childNodes","origDisplay","resetParams","moveContainers","node","nodeType","style","display","isPrinting","beforePrint","pointer","reset","chartCallback","composition","renderExporting","destroyExport","items","_b","innerMenu","navOptions","cacheName","menuPadding","max","exportContextMenu","position","pointerEvents","scrollablePlotArea","fixedDiv","listStyle","margin","MozBoxShadow","WebkitBoxShadow","boxShadow","hideMenu","openMenu","overflow","clearTimeout","hideTimer","exportEvents","setTimeout","inClass","target","item","element","isDataTableVisible","onmouseover","onmouseout","cursor","exportMenuWidth","offsetWidth","exportMenuHeight","offsetHeight","right","left","alignOptions","bottom","top","elem","ontouchstart","destroy","unbind","chartOptions","svg","getSVGForExport","post","getFilename","fetchOptions","getChartHTML","applyStyleSheets","inlineStyles","innerHTML","userOptions","toLowerCase","substr","getSVG","seriesOptions","plotOptions","time","sandbox","cssWidth","cssHeight","sourceWidth","parseInt","isGantt","sourceHeight","animation","forExport","data","series","serie","enableMouseTracking","showCheckbox","visible","isInternal","colls","axes","axis","internalKey","coll","uniqueNames","colorAxis","chartCopy","constructor","collOptions","axisCopy","copy","extremes","getExtremes","userMin","userMax","min","setExtremes","sanitizeSVG","chartExportingOptions","dummySVG","allowlist","defaultStyles","iframe","visibility","iframeDoc","contentWindow","createElementNS","recurse","styles","parentStyles","dummy","denylisted","allowlisted","filteredStyles","nodeName","getComputedStyle","parentNode","getElementsByTagName","namespaceURI","defaults","isFirefox","isMS","filterStyles","val","denylist","setAttribute","children","querySelector","moveTo","scrollingContainer","div","onChartInit","isDirtyExporting","onChartLayOutTitle","_c","_d","_e","alignTo","textPxLength","_f","_g","_h","space","widthAdjust","alignValue","focus","isDirty","g","split","html","allowHTML","Exporting_Fullscreen","chartProto","callbacks","matchMedia","addListener","mqlEvent","matches","Exporting_Exporting","OfflineExporting_OfflineExportingDefaults","libURL","exportChartLocal","OfflineExporting_defaultOptions","OfflineExporting_downloadURL","OfflineExporting_doc","OfflineExporting_win","ajax","OfflineExporting_addEvent","error","OfflineExporting_extend","OfflineExporting_fireEvent","OfflineExporting_merge","allowedAttributes","allowedTags","fallbackToExportServer","err","some","image","getAttribute","getSVGForLocalExport","downloadSVGLocal","getScript","scriptLocation","head","script","src","onload","onerror","failCallback","successCallback","el","chartCopyContainer","chartCopyOptions","images","sanitize","checkDone","imagesEmbedded","imagesLength","embeddedSuccess","imageURL","imageType","callbackArgs","imageElement","setAttributeNS","unbindGetSVG","cloneNode","getAttributeNS","imageToDataUrl","taintedCallback","noCanvasSupportCallback","failedLoadCallback","finallyCallback","taintedHandler","img","Image","loadHandler","canvas","ctx","getContext","drawImage","toDataURL","loadEventDeferDelay","errorHandler","crossOrigin","svgToDataUrl","webKit","encodeURIComponent","svgToPdf","svgElement","Number","pdfDoc","jspdf","jsPDF","querySelectorAll","gradients","index","stops","gradient","remove","tspan","textContent","removeInvalid","then","output","CanVGRenderer","svgurl","blob","finallyHandler","dummySVGContainer","objectURLRevoke","slice","loadPdfFonts","normalBase64","addFont","variant","base64","API","events","addFileToVFS","getFontList","HighchartsFont","setFont","variants","shiftAndLoadVariant","shift","responseType","success","xhr","reader","FileReader","onloadend","result","readAsDataURL","response","titleElements","outlineElements","textElements","setStylePropertyFromParents","propName","curParent","value","parseFloat","property","fontFamily","splice","titleElement","getElementsByClassName","outline","svgNode","pdfData","MSBlobBuilder","append","getBlob","revokeObjectURL","matchedImageWidth","matchedImageHeight","imageWidth","imageHeight","downloadWithCanVG","v","canvg","Canvg","fromString","start","msToBlob","OfflineExporting_OfflineExporting","G","Chart"],"mappings":"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"}